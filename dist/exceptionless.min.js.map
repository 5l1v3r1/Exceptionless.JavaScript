{"version":3,"sources":["tracekit.js","/source/exceptionless.ts","exceptionless.min.js"],"names":["window","undefined","_has","object","key","Object","prototype","hasOwnProperty","call","_isUndefined","what","TraceKit","_oldTraceKit","_slice","slice","UNKNOWN_FUNCTION","noConflict","wrap","func","wrapped","apply","this","arguments","e","report","subscribe","handler","installGlobalHandler","handlers","push","unsubscribe","i","length","splice","notifyHandlers","stack","isWindowError","exception","collectWindowErrors","concat","inner","traceKitWindowOnError","message","url","lineNo","columnNo","errorObj","computeStackTrace","lastExceptionStack","augmentStackTraceWithInitialElement","lastException","location","line","column","guessFunctionName","context","gatherContext","mode","document","href","useragent","navigator","userAgent","_oldOnerrorHandler","_onErrorHandlerInstalled","onerror","ex","args","s","setTimeout","incomplete","loadSource","remoteFetching","getXHR","XMLHttpRequest","ActiveXObject","request","open","send","responseText","getSource","sourceCache","source","indexOf","domain","split","m","reFunctionArgNames","reGuessFunction","maxLines","exec","linesBefore","Math","floor","linesOfContext","linesAfter","start","max","end","min","escapeRegExp","text","replace","escapeCodeAsRegExpForMatchingInsideHTML","body","findSourceInUrls","re","urls","j","join","substring","index","lastIndexOf","findSourceInLine","fragment","RegExp","findSourceByFunctionBody","parts","result","scripts","getElementsByTagName","code","codeRE","eventRE","script","src","name","event","computeStackTraceFromStackProp","element","chrome","gecko","winjs","lines","reference","columnNumber","computeStackTraceFromStacktraceProp","stacktrace","testRE","exc","computeStackTraceFromOperaMultiLineMessage","len","lineRE1","lineRE2","lineRE3","inlineScriptBlocks","item","relativeLine","pos","innerText","midline","stackInfo","initial","unshift","partial","computeStackTraceByWalkingCallerChain","depth","functionName","funcs","recursion","curr","caller","toString","input","description","sourceURL","fileName","lineNumber","debug","computeStackTraceOfCaller","Error","ofCaller","extendToAsynchronousCallbacks","_helper","fnName","originalFn","originalCallback","global","root","factory","define","amd","exports","module","require","exceptionless","getDefaultsSettingsFromScriptTag","Utils","parseQueryString","pop","processUnhandledException","stackTrace","options","builder","ExceptionlessClient","createUnhandledException","status","pluginContextData","submit","processJQueryAjaxError","xhr","settings","error","client","submitNotFound","setSource","setProperty","data","ContextData","get","enumerable","configurable","setSubmissionMethod","method","getSubmissionMethod","SettingsManager","changed","config","_handlers","onChanged","applySavedServerSettings","log","info","merge","getSavedServerSettings","storage","_configPath","checkVersion","version","savedConfigVersion","parseInt","isNaN","updateSettings","_this","isValid","submissionClient","getSettings","response","success","savedServerSettings","path","save","settingsVersion","DefaultLastReferenceIdManager","_lastReferenceId","getLast","clearLast","setLast","eventId","ConsoleLog","warn","level","console","NullLog","EventPluginContext","contextData","defineProperty","EventPluginManager","run","callback","plugin","next","cancelled","plugins","wrappedPlugins","priority","addDefaultPlugins","addPlugin","ConfigurationDefaultsPlugin","ErrorPlugin","ModuleInfoPlugin","RequestInfoPlugin","EnvironmentInfoPlugin","SubmissionMethodPlugin","ReferenceIdPlugin","reference_id","type","guid","DefaultEventQueue","_processingQueue","_config","enqueue","ensureQueueTimer","areQueuedItemsDiscarded","Date","toJSON","randomNumber","process","getEvents","events","items","value","queueNotProcessed","enabled","getList","submissionBatchSize","serverUrl","postEvents","processSubmissionResponse","suspendProcessing","noSubmission","removeEvents","serviceUnavailable","paymentRequired","unableToAuthenticate","notFound","badRequest","requestEntityTooLarge","round","_queueTimer","setInterval","onProcessQueue","isQueueProcessingSuspended","durationInMinutes","discardFutureQueuedItems","clearQueue","_suspendProcessingUntil","getTime","_discardQueuedItemsUntil","remove","InMemoryStorage","maxItems","_items","_maxItems","created","shift","searchPattern","limit","regex","results","test","addRange","target","values","_i","getHashCode","hash","character","charCodeAt","getCookies","cookies","cookie","s4","random","defaultValues","parseVersion","versionRegex","matches","query","pairs","pair","decodeURIComponent","stringify","exclusions","checkForMatch","pattern","trim","toLowerCase","startsWithWildcard","endsWithWildcard","stringifyImpl","cache","JSON","parse","Configuration","configSettings","inject","fn","defaultTags","defaultData","lastReferenceIdManager","_serverUrl","_dataExclusions","_plugins","defaults","apiKey","environmentInfoCollector","errorParser","moduleCollector","requestInfoCollector","queue","_apiKey","set","addDataExclusions","sort","p1","p2","pluginOrName","pluginAction","pluginExists","removePlugin","setVersion","setUserIdentity","userInfoOrIdentity","user","userInfo","identity","shouldRemove","useReferenceIds","useDebugLogger","_defaultSettings","EventBuilder","_validIdentifierErrorMessage","setType","setSessionId","sessionId","isValidIdentifier","session_id","setReferenceId","referenceId","setMessage","setGeo","latitude","longitude","geo","setValue","addTags","tags","markAsCritical","critical","addRequestInfo","submitEvent","isDigit","isLetter","isMinus","SubmissionResponse","statusCode","settingsOrApiKey","createException","setException","createEvent","submitException","submissionMethod","markAsUnhandledError","submitUnhandledException","createFeatureUsage","feature","submitFeatureUsage","createLog","sourceOrMessage","callee","submitLog","createNotFound","resource","createSessionStart","submitSessionStart","createSessionEnd","submitSessionEnd","date","ev","updateUserEmailAndDescription","email","userDescription","email_address","postUserDescription","getLastReferenceId","_instance","tag","getException","parser","collector","modules","getModules","requestInfo","getRequestInfo","environment","environmentInfo","getEnvironmentInfo","SettingsResponse","DefaultErrorParser","getParameters","parameters","params","getStackFrames","stackFrames","anonymous","frames","frame","file_name","line_number","traceKitStackTrace","stack_trace","DefaultModuleCollector","module_id","innerHTML","DefaultRequestInfoCollector","user_agent","is_secure","protocol","host","hostname","port","pathname","query_string","search","referrer","DefaultSubmissionClient","configurationVersionHeader","sendRequest","dataExclusions","headers","encodeURIComponent","complete","parseResponseHeaders","headerStr","headerPairs","headerPair","separator","isCompleted","responseBody","statusText","getAllResponseHeaders","createRequest","XDomainRequest","setRequestHeader","timeout","onreadystatechange","readyState","ontimeout","onload","$","ajaxError","stackTraceLimit","Infinity"],"mappings":"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","file":"exceptionless.min.js","sourcesContent":["/*\n TraceKit - Cross brower stack traces - github.com/csnover/TraceKit\n MIT license\n*/\n\n(function(window, undefined) {\nif (!window) {\n    return;\n}\n\nvar TraceKit = {};\nvar _oldTraceKit = window.TraceKit;\n\n// global reference to slice\nvar _slice = [].slice;\nvar UNKNOWN_FUNCTION = '?';\n\n\n/**\n * _has, a better form of hasOwnProperty\n * Example: _has(MainHostObject, property) === true/false\n *\n * @param {Object} object to check property\n * @param {string} key to check\n */\nfunction _has(object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n}\n\nfunction _isUndefined(what) {\n    return typeof what === 'undefined';\n}\n\n/**\n * TraceKit.noConflict: Export TraceKit out to another variable\n * Example: var TK = TraceKit.noConflict()\n */\nTraceKit.noConflict = function noConflict() {\n    window.TraceKit = _oldTraceKit;\n    return TraceKit;\n};\n\n/**\n * TraceKit.wrap: Wrap any function in a TraceKit reporter\n * Example: func = TraceKit.wrap(func);\n *\n * @param {Function} func Function to be wrapped\n * @return {Function} The wrapped func\n */\nTraceKit.wrap = function traceKitWrapper(func) {\n    function wrapped() {\n        try {\n            return func.apply(this, arguments);\n        } catch (e) {\n            TraceKit.report(e);\n            throw e;\n        }\n    }\n    return wrapped;\n};\n\n/**\n * TraceKit.report: cross-browser processing of unhandled exceptions\n *\n * Syntax:\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\n *   TraceKit.report.unsubscribe(function(stackInfo) { ... })\n *   TraceKit.report(exception)\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\n *\n * Supports:\n *   - Firefox: full stack trace with line numbers, plus column number\n *              on top frame; column number is not guaranteed\n *   - Opera:   full stack trace with line and column numbers\n *   - Chrome:  full stack trace with line and column numbers\n *   - Safari:  line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *   - IE:      line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *\n * In theory, TraceKit should work on all of the following versions:\n *   - IE5.5+ (only 8.0 tested)\n *   - Firefox 0.9+ (only 3.5+ tested)\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\n *     Exceptions Have Stacktrace to be enabled in opera:config)\n *   - Safari 3+ (only 4+ tested)\n *   - Chrome 1+ (only 5+ tested)\n *   - Konqueror 3.5+ (untested)\n *\n * Requires TraceKit.computeStackTrace.\n *\n * Tries to catch all unhandled exceptions and report them to the\n * subscribed handlers. Please note that TraceKit.report will rethrow the\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\n * If the exception does not reach the top of the browser, you will only\n * get a stack trace from the point where TraceKit.report was called.\n *\n * Handlers receive a stackInfo object as described in the\n * TraceKit.computeStackTrace docs.\n */\nTraceKit.report = (function reportModuleWrapper() {\n    var handlers = [],\n        lastException = null,\n        lastExceptionStack = null;\n\n    /**\n     * Add a crash handler.\n     * @param {Function} handler\n     */\n    function subscribe(handler) {\n        installGlobalHandler();\n        handlers.push(handler);\n    }\n\n    /**\n     * Remove a crash handler.\n     * @param {Function} handler\n     */\n    function unsubscribe(handler) {\n        for (var i = handlers.length - 1; i >= 0; --i) {\n            if (handlers[i] === handler) {\n                handlers.splice(i, 1);\n            }\n        }\n    }\n\n    /**\n     * Dispatch stack information to all handlers.\n     * @param {Object.<string, *>} stack\n     */\n    function notifyHandlers(stack, isWindowError) {\n        var exception = null;\n        if (isWindowError && !TraceKit.collectWindowErrors) {\n          return;\n        }\n        for (var i in handlers) {\n            if (_has(handlers, i)) {\n                try {\n                    handlers[i].apply(null, [stack].concat(_slice.call(arguments, 2)));\n                } catch (inner) {\n                    exception = inner;\n                }\n            }\n        }\n\n        if (exception) {\n            throw exception;\n        }\n    }\n\n    var _oldOnerrorHandler, _onErrorHandlerInstalled;\n\n    /**\n     * Ensures all global unhandled exceptions are recorded.\n     * Supported by Gecko and IE.\n     * @param {string} message Error message.\n     * @param {string} url URL of script that generated the exception.\n     * @param {(number|string)} lineNo The line number at which the error\n     * occurred.\n     * @param {?(number|string)} columnNo The column number at which the error\n     * occurred.\n     * @param {?Error} errorObj The actual Error object.\n     */\n    function traceKitWindowOnError(message, url, lineNo, columnNo, errorObj) {\n        var stack = null;\n\n        if (errorObj) {\n          stack = TraceKit.computeStackTrace(errorObj);\n        }\n        else\n        {\n            if (lastExceptionStack) {\n                TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);\n                stack = lastExceptionStack;\n                lastExceptionStack = null;\n                lastException = null;\n            } else {\n                var location = {\n                    'url': url,\n                    'line': lineNo,\n                    'column': columnNo\n                };\n                location.func = TraceKit.computeStackTrace.guessFunctionName(location.url, location.line);\n                location.context = TraceKit.computeStackTrace.gatherContext(location.url, location.line);\n                stack = {\n                    'mode': 'onerror',\n                    'message': message,\n                    'url': document.location.href,\n                    'stack': [location],\n                    'useragent': navigator.userAgent\n                };\n            }\n        }\n\n        notifyHandlers(stack, 'from window.onerror');\n\n        if (_oldOnerrorHandler) {\n            return _oldOnerrorHandler.apply(this, arguments);\n        }\n\n        return false;\n    }\n\n    function installGlobalHandler ()\n    {\n        if (_onErrorHandlerInstalled === true) {\n            return;\n        }\n        _oldOnerrorHandler = window.onerror;\n        window.onerror = traceKitWindowOnError;\n        _onErrorHandlerInstalled = true;\n    }\n\n    /**\n     * Reports an unhandled Error to TraceKit.\n     * @param {Error} ex\n     */\n    function report(ex) {\n        var args = _slice.call(arguments, 1);\n        if (lastExceptionStack) {\n            if (lastException === ex) {\n                return; // already caught by an inner catch block, ignore\n            } else {\n                var s = lastExceptionStack;\n                lastExceptionStack = null;\n                lastException = null;\n                notifyHandlers.apply(null, [s, null].concat(args));\n            }\n        }\n\n        var stack = TraceKit.computeStackTrace(ex);\n        lastExceptionStack = stack;\n        lastException = ex;\n\n        // If the stack trace is incomplete, wait for 2 seconds for\n        // slow slow IE to see if onerror occurs or not before reporting\n        // this exception; otherwise, we will end up with an incomplete\n        // stack trace\n        window.setTimeout(function () {\n            if (lastException === ex) {\n                lastExceptionStack = null;\n                lastException = null;\n                notifyHandlers.apply(null, [stack, null].concat(args));\n            }\n        }, (stack.incomplete ? 2000 : 0));\n\n        throw ex; // re-throw to propagate to the top level (and cause window.onerror)\n    }\n\n    report.subscribe = subscribe;\n    report.unsubscribe = unsubscribe;\n    return report;\n}());\n\n/**\n * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript\n *\n * Syntax:\n *   s = TraceKit.computeStackTrace.ofCaller([depth])\n *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)\n * Returns:\n *   s.name              - exception name\n *   s.message           - exception message\n *   s.stack[i].url      - JavaScript or HTML file URL\n *   s.stack[i].func     - function name, or empty for anonymous functions (if guessing did not work)\n *   s.stack[i].args     - arguments passed to the function, if known\n *   s.stack[i].line     - line number, if known\n *   s.stack[i].column   - column number, if known\n *   s.stack[i].context  - an array of source code lines; the middle element corresponds to the correct line#\n *   s.mode              - 'stack', 'stacktrace', 'multiline', 'callers', 'onerror', or 'failed' -- method used to collect the stack trace\n *\n * Supports:\n *   - Firefox:  full stack trace with line numbers and unreliable column\n *               number on top frame\n *   - Opera 10: full stack trace with line and column numbers\n *   - Opera 9-: full stack trace with line numbers\n *   - Chrome:   full stack trace with line and column numbers\n *   - Safari:   line and column number for the topmost stacktrace element\n *               only\n *   - IE:       no line numbers whatsoever\n *\n * Tries to guess names of anonymous functions by looking for assignments\n * in the source code. In IE and Safari, we have to guess source file names\n * by searching for function bodies inside all page scripts. This will not\n * work for scripts that are loaded cross-domain.\n * Here be dragons: some function names may be guessed incorrectly, and\n * duplicate functions may be mismatched.\n *\n * TraceKit.computeStackTrace should only be used for tracing purposes.\n * Logging of unhandled exceptions should be done with TraceKit.report,\n * which builds on top of TraceKit.computeStackTrace and provides better\n * IE support by utilizing the window.onerror event to retrieve information\n * about the top of the stack.\n *\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\n * so computeStackTrace instead walks its *own* chain of callers.\n * This means that:\n *  * in Safari, some methods may be missing from the stack trace;\n *  * in IE, the topmost function in the stack trace will always be the\n *    caller of computeStackTrace.\n *\n * This is okay for tracing (because you are likely to be calling\n * computeStackTrace from the function you want to be the topmost element\n * of the stack trace anyway), but not okay for logging unhandled\n * exceptions (because your catch block will likely be far away from the\n * inner function that actually caused the exception).\n *\n * Tracing example:\n *     function trace(message) {\n *         var stackInfo = TraceKit.computeStackTrace.ofCaller();\n *         var data = message + \"\\n\";\n *         for(var i in stackInfo.stack) {\n *             var item = stackInfo.stack[i];\n *             data += (item.func || '[anonymous]') + \"() in \" + item.url + \":\" + (item.line || '0') + \"\\n\";\n *         }\n *         if (window.console)\n *             console.info(data);\n *         else\n *             alert(data);\n *     }\n */\nTraceKit.computeStackTrace = (function computeStackTraceWrapper() {\n    var debug = false,\n        sourceCache = {};\n\n    /**\n     * Attempts to retrieve source code via XMLHttpRequest, which is used\n     * to look up anonymous function names.\n     * @param {string} url URL of source code.\n     * @return {string} Source contents.\n     */\n    function loadSource(url) {\n        if (!TraceKit.remoteFetching) { //Only attempt request if remoteFetching is on.\n            return '';\n        }\n        try {\n            var getXHR = function() {\n                try {\n                    return new window.XMLHttpRequest();\n                } catch (e) {\n                    // explicitly bubble up the exception if not found\n                    return new window.ActiveXObject('Microsoft.XMLHTTP');\n                }\n            };\n\n            var request = getXHR();\n            request.open('GET', url, false);\n            request.send('');\n            return request.responseText;\n        } catch (e) {\n            return '';\n        }\n    }\n\n    /**\n     * Retrieves source code from the source code cache.\n     * @param {string} url URL of source code.\n     * @return {Array.<string>} Source contents.\n     */\n    function getSource(url) {\n        if (typeof url !== 'string') {\n            return [];\n        }\n\n        if (!_has(sourceCache, url)) {\n            // URL needs to be able to fetched within the acceptable domain.  Otherwise,\n            // cross-domain errors will be triggered.\n            var source = '';\n\n            url = url || '';\n            if (url.indexOf && url.indexOf(document.domain) !== -1) {\n                source = loadSource(url);\n            }\n            sourceCache[url] = source ? source.split('\\n') : [];\n        }\n\n        return sourceCache[url];\n    }\n\n    /**\n     * Tries to use an externally loaded copy of source code to determine\n     * the name of a function by looking at the name of the variable it was\n     * assigned to, if any.\n     * @param {string} url URL of source code.\n     * @param {(string|number)} lineNo Line number in source code.\n     * @return {string} The function name, if discoverable.\n     */\n    function guessFunctionName(url, lineNo) {\n        var reFunctionArgNames = /function ([^(]*)\\(([^)]*)\\)/,\n            reGuessFunction = /['\"]?([0-9A-Za-z$_]+)['\"]?\\s*[:=]\\s*(function|eval|new Function)/,\n            line = '',\n            maxLines = 10,\n            source = getSource(url),\n            m;\n\n        if (!source.length) {\n            return UNKNOWN_FUNCTION;\n        }\n\n        // Walk backwards from the first line in the function until we find the line which\n        // matches the pattern above, which is the function definition\n        for (var i = 0; i < maxLines; ++i) {\n            line = source[lineNo - i] + line;\n\n            if (!_isUndefined(line)) {\n                if ((m = reGuessFunction.exec(line))) {\n                    return m[1];\n                } else if ((m = reFunctionArgNames.exec(line))) {\n                    return m[1];\n                }\n            }\n        }\n\n        return UNKNOWN_FUNCTION;\n    }\n\n    /**\n     * Retrieves the surrounding lines from where an exception occurred.\n     * @param {string} url URL of source code.\n     * @param {(string|number)} line Line number in source code to centre\n     * around for context.\n     * @return {?Array.<string>} Lines of source code.\n     */\n    function gatherContext(url, line) {\n        var source = getSource(url);\n\n        if (!source.length) {\n            return null;\n        }\n\n        var context = [],\n            // linesBefore & linesAfter are inclusive with the offending line.\n            // if linesOfContext is even, there will be one extra line\n            //   *before* the offending line.\n            linesBefore = Math.floor(TraceKit.linesOfContext / 2),\n            // Add one extra line if linesOfContext is odd\n            linesAfter = linesBefore + (TraceKit.linesOfContext % 2),\n            start = Math.max(0, line - linesBefore - 1),\n            end = Math.min(source.length, line + linesAfter - 1);\n\n        line -= 1; // convert to 0-based index\n\n        for (var i = start; i < end; ++i) {\n            if (!_isUndefined(source[i])) {\n                context.push(source[i]);\n            }\n        }\n\n        return context.length > 0 ? context : null;\n    }\n\n    /**\n     * Escapes special characters, except for whitespace, in a string to be\n     * used inside a regular expression as a string literal.\n     * @param {string} text The string.\n     * @return {string} The escaped string literal.\n     */\n    function escapeRegExp(text) {\n        return text.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#]/g, '\\\\$&');\n    }\n\n    /**\n     * Escapes special characters in a string to be used inside a regular\n     * expression as a string literal. Also ensures that HTML entities will\n     * be matched the same as their literal friends.\n     * @param {string} body The string.\n     * @return {string} The escaped string.\n     */\n    function escapeCodeAsRegExpForMatchingInsideHTML(body) {\n        return escapeRegExp(body).replace('<', '(?:<|&lt;)').replace('>', '(?:>|&gt;)').replace('&', '(?:&|&amp;)').replace('\"', '(?:\"|&quot;)').replace(/\\s+/g, '\\\\s+');\n    }\n\n    /**\n     * Determines where a code fragment occurs in the source code.\n     * @param {RegExp} re The function definition.\n     * @param {Array.<string>} urls A list of URLs to search.\n     * @return {?Object.<string, (string|number)>} An object containing\n     * the url, line, and column number of the defined function.\n     */\n    function findSourceInUrls(re, urls) {\n        var source, m;\n        for (var i = 0, j = urls.length; i < j; ++i) {\n            // console.log('searching', urls[i]);\n            if ((source = getSource(urls[i])).length) {\n                source = source.join('\\n');\n                if ((m = re.exec(source))) {\n                    // console.log('Found function in ' + urls[i]);\n\n                    return {\n                        'url': urls[i],\n                        'line': source.substring(0, m.index).split('\\n').length,\n                        'column': m.index - source.lastIndexOf('\\n', m.index) - 1\n                    };\n                }\n            }\n        }\n\n        // console.log('no match');\n\n        return null;\n    }\n\n    /**\n     * Determines at which column a code fragment occurs on a line of the\n     * source code.\n     * @param {string} fragment The code fragment.\n     * @param {string} url The URL to search.\n     * @param {(string|number)} line The line number to examine.\n     * @return {?number} The column number.\n     */\n    function findSourceInLine(fragment, url, line) {\n        var source = getSource(url),\n            re = new RegExp('\\\\b' + escapeRegExp(fragment) + '\\\\b'),\n            m;\n\n        line -= 1;\n\n        if (source && source.length > line && (m = re.exec(source[line]))) {\n            return m.index;\n        }\n\n        return null;\n    }\n\n    /**\n     * Determines where a function was defined within the source code.\n     * @param {(Function|string)} func A function reference or serialized\n     * function definition.\n     * @return {?Object.<string, (string|number)>} An object containing\n     * the url, line, and column number of the defined function.\n     */\n    function findSourceByFunctionBody(func) {\n        var urls = [window.location.href],\n            scripts = document.getElementsByTagName('script'),\n            body,\n            code = '' + func,\n            codeRE = /^function(?:\\s+([\\w$]+))?\\s*\\(([\\w\\s,]*)\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/,\n            eventRE = /^function on([\\w$]+)\\s*\\(event\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/,\n            re,\n            parts,\n            result;\n\n        for (var i = 0; i < scripts.length; ++i) {\n            var script = scripts[i];\n            if (script.src) {\n                urls.push(script.src);\n            }\n        }\n\n        if (!(parts = codeRE.exec(code))) {\n            re = new RegExp(escapeRegExp(code).replace(/\\s+/g, '\\\\s+'));\n        }\n\n        // not sure if this is really necessary, but I don’t have a test\n        // corpus large enough to confirm that and it was in the original.\n        else {\n            var name = parts[1] ? '\\\\s+' + parts[1] : '',\n                args = parts[2].split(',').join('\\\\s*,\\\\s*');\n\n            body = escapeRegExp(parts[3]).replace(/;$/, ';?'); // semicolon is inserted if the function ends with a comment.replace(/\\s+/g, '\\\\s+');\n            re = new RegExp('function' + name + '\\\\s*\\\\(\\\\s*' + args + '\\\\s*\\\\)\\\\s*{\\\\s*' + body + '\\\\s*}');\n        }\n\n        // look for a normal function definition\n        if ((result = findSourceInUrls(re, urls))) {\n            return result;\n        }\n\n        // look for an old-school event handler function\n        if ((parts = eventRE.exec(code))) {\n            var event = parts[1];\n            body = escapeCodeAsRegExpForMatchingInsideHTML(parts[2]);\n\n            // look for a function defined in HTML as an onXXX handler\n            re = new RegExp('on' + event + '=[\\\\\\'\"]\\\\s*' + body + '\\\\s*[\\\\\\'\"]', 'i');\n\n            if ((result = findSourceInUrls(re, urls[0]))) {\n                return result;\n            }\n\n            // look for ???\n            re = new RegExp(body);\n\n            if ((result = findSourceInUrls(re, urls))) {\n                return result;\n            }\n        }\n\n        return null;\n    }\n\n    // Contents of Exception in various browsers.\n    //\n    // SAFARI:\n    // ex.message = Can't find variable: qq\n    // ex.line = 59\n    // ex.sourceId = 580238192\n    // ex.sourceURL = http://...\n    // ex.expressionBeginOffset = 96\n    // ex.expressionCaretOffset = 98\n    // ex.expressionEndOffset = 98\n    // ex.name = ReferenceError\n    //\n    // FIREFOX:\n    // ex.message = qq is not defined\n    // ex.fileName = http://...\n    // ex.lineNumber = 59\n    // ex.columnNumber = 69\n    // ex.stack = ...stack trace... (see the example below)\n    // ex.name = ReferenceError\n    //\n    // CHROME:\n    // ex.message = qq is not defined\n    // ex.name = ReferenceError\n    // ex.type = not_defined\n    // ex.arguments = ['aa']\n    // ex.stack = ...stack trace...\n    //\n    // INTERNET EXPLORER:\n    // ex.message = ...\n    // ex.name = ReferenceError\n    //\n    // OPERA:\n    // ex.message = ...message... (see the example below)\n    // ex.name = ReferenceError\n    // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\n    // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\n\n    /**\n     * Computes stack trace information from the stack property.\n     * Chrome and Gecko use this property.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceFromStackProp(ex) {\n        if (!ex.stack) {\n            return null;\n        }\n\n        var chrome = /^\\s*at (.*?) ?\\(?((?:file|https?|chrome-extension):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n            gecko = /^\\s*(.*?)(?:\\((.*?)\\))?@?((?:file|https?|chrome):.*?):(\\d+)(?::(\\d+))?\\s*$/i,\n            winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:ms-appx|http|https):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n            lines = ex.stack.split('\\n'),\n            stack = [],\n            parts,\n            element,\n            reference = /^(.*) is undefined$/.exec(ex.message);\n\n        for (var i = 0, j = lines.length; i < j; ++i) {\n            if ((parts = gecko.exec(lines[i]))) {\n                element = {\n                    'url': parts[3],\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'args': parts[2] ? parts[2].split(',') : '',\n                    'line': +parts[4],\n                    'column': parts[5] ? +parts[5] : null\n                };\n            } else if ((parts = chrome.exec(lines[i]))) {\n                element = {\n                    'url': parts[2],\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'line': +parts[3],\n                    'column': parts[4] ? +parts[4] : null\n                };\n            } else if ((parts = winjs.exec(lines[i]))) {\n              element = {\n                'url': parts[2],\n                'func': parts[1] || UNKNOWN_FUNCTION,\n                'line': +parts[3],\n                'column': parts[4] ? +parts[4] : null\n              };\n            } else {\n                continue;\n            }\n\n            if (!element.func && element.line) {\n                element.func = guessFunctionName(element.url, element.line);\n            }\n\n            if (element.line) {\n                element.context = gatherContext(element.url, element.line);\n            }\n\n            stack.push(element);\n        }\n\n        if (!stack.length) {\n            return null;\n        }\n\n        if (stack[0] && stack[0].line && !stack[0].column && reference) {\n            stack[0].column = findSourceInLine(reference[1], stack[0].url, stack[0].line);\n        } else if (!stack[0].column && !_isUndefined(ex.columnNumber)) {\n            // FireFox uses this awesome columnNumber property for its top frame\n            // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n            // so adding 1\n            stack[0].column = ex.columnNumber + 1;\n        }\n\n        return {\n            'mode': 'stack',\n            'name': ex.name,\n            'message': ex.message,\n            'url': document.location.href,\n            'stack': stack,\n            'useragent': navigator.userAgent\n        };\n    }\n\n    /**\n     * Computes stack trace information from the stacktrace property.\n     * Opera 10 uses this property.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceFromStacktraceProp(ex) {\n        // Access and store the stacktrace property before doing ANYTHING\n        // else to it because Opera is not very good at providing it\n        // reliably in other circumstances.\n        var stacktrace = ex.stacktrace;\n\n        var testRE = / line (\\d+), column (\\d+) in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\) in (.*):\\s*$/i,\n            lines = stacktrace.split('\\n'),\n            stack = [],\n            parts;\n\n        for (var i = 0, j = lines.length; i < j; i += 2) {\n            if ((parts = testRE.exec(lines[i]))) {\n                var element = {\n                    'line': +parts[1],\n                    'column': +parts[2],\n                    'func': parts[3] || parts[4],\n                    'args': parts[5] ? parts[5].split(',') : [],\n                    'url': parts[6]\n                };\n\n                if (!element.func && element.line) {\n                    element.func = guessFunctionName(element.url, element.line);\n                }\n                if (element.line) {\n                    try {\n                        element.context = gatherContext(element.url, element.line);\n                    } catch (exc) {}\n                }\n\n                if (!element.context) {\n                    element.context = [lines[i + 1]];\n                }\n\n                stack.push(element);\n            }\n        }\n\n        if (!stack.length) {\n            return null;\n        }\n\n        return {\n            'mode': 'stacktrace',\n            'name': ex.name,\n            'message': ex.message,\n            'url': document.location.href,\n            'stack': stack,\n            'useragent': navigator.userAgent\n        };\n    }\n\n    /**\n     * NOT TESTED.\n     * Computes stack trace information from an error message that includes\n     * the stack trace.\n     * Opera 9 and earlier use this method if the option to show stack\n     * traces is turned on in opera:config.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack information.\n     */\n    function computeStackTraceFromOperaMultiLineMessage(ex) {\n        // Opera includes a stack trace into the exception message. An example is:\n        //\n        // Statement on line 3: Undefined variable: undefinedFunc\n        // Backtrace:\n        //   Line 3 of linked script file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.js: In function zzz\n        //         undefinedFunc(a);\n        //   Line 7 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function yyy\n        //           zzz(x, y, z);\n        //   Line 3 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function xxx\n        //           yyy(a, a, a);\n        //   Line 1 of function script\n        //     try { xxx('hi'); return false; } catch(ex) { TraceKit.report(ex); }\n        //   ...\n\n        var lines = ex.message.split('\\n');\n        if (lines.length < 4) {\n            return null;\n        }\n\n        var lineRE1 = /^\\s*Line (\\d+) of linked script ((?:file|https?)\\S+)(?:: in function (\\S+))?\\s*$/i,\n            lineRE2 = /^\\s*Line (\\d+) of inline#(\\d+) script in ((?:file|https?)\\S+)(?:: in function (\\S+))?\\s*$/i,\n            lineRE3 = /^\\s*Line (\\d+) of function script\\s*$/i,\n            stack = [],\n            scripts = document.getElementsByTagName('script'),\n            inlineScriptBlocks = [],\n            parts,\n            i,\n            len,\n            source;\n\n        for (i in scripts) {\n            if (_has(scripts, i) && !scripts[i].src) {\n                inlineScriptBlocks.push(scripts[i]);\n            }\n        }\n\n        for (i = 2, len = lines.length; i < len; i += 2) {\n            var item = null;\n            if ((parts = lineRE1.exec(lines[i]))) {\n                item = {\n                    'url': parts[2],\n                    'func': parts[3],\n                    'line': +parts[1]\n                };\n            } else if ((parts = lineRE2.exec(lines[i]))) {\n                item = {\n                    'url': parts[3],\n                    'func': parts[4]\n                };\n                var relativeLine = (+parts[1]); // relative to the start of the <SCRIPT> block\n                var script = inlineScriptBlocks[parts[2] - 1];\n                if (script) {\n                    source = getSource(item.url);\n                    if (source) {\n                        source = source.join('\\n');\n                        var pos = source.indexOf(script.innerText);\n                        if (pos >= 0) {\n                            item.line = relativeLine + source.substring(0, pos).split('\\n').length;\n                        }\n                    }\n                }\n            } else if ((parts = lineRE3.exec(lines[i]))) {\n                var url = window.location.href.replace(/#.*$/, ''),\n                    line = parts[1];\n                var re = new RegExp(escapeCodeAsRegExpForMatchingInsideHTML(lines[i + 1]));\n                source = findSourceInUrls(re, [url]);\n                item = {\n                    'url': url,\n                    'line': source ? source.line : line,\n                    'func': ''\n                };\n            }\n\n            if (item) {\n                if (!item.func) {\n                    item.func = guessFunctionName(item.url, item.line);\n                }\n                var context = gatherContext(item.url, item.line);\n                var midline = (context ? context[Math.floor(context.length / 2)] : null);\n                if (context && midline.replace(/^\\s*/, '') === lines[i + 1].replace(/^\\s*/, '')) {\n                    item.context = context;\n                } else {\n                    // if (context) alert(\"Context mismatch. Correct midline:\\n\" + lines[i+1] + \"\\n\\nMidline:\\n\" + midline + \"\\n\\nContext:\\n\" + context.join(\"\\n\") + \"\\n\\nURL:\\n\" + item.url);\n                    item.context = [lines[i + 1]];\n                }\n                stack.push(item);\n            }\n        }\n        if (!stack.length) {\n            return null; // could not parse multiline exception message as Opera stack trace\n        }\n\n        return {\n            'mode': 'multiline',\n            'name': ex.name,\n            'message': lines[0],\n            'url': document.location.href,\n            'stack': stack,\n            'useragent': navigator.userAgent\n        };\n    }\n\n    /**\n     * Adds information about the first frame to incomplete stack traces.\n     * Safari and IE require this to get complete data on the first frame.\n     * @param {Object.<string, *>} stackInfo Stack trace information from\n     * one of the compute* methods.\n     * @param {string} url The URL of the script that caused an error.\n     * @param {(number|string)} lineNo The line number of the script that\n     * caused an error.\n     * @param {string=} message The error generated by the browser, which\n     * hopefully contains the name of the object that caused the error.\n     * @return {boolean} Whether or not the stack information was\n     * augmented.\n     */\n    function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\n        var initial = {\n            'url': url,\n            'line': lineNo\n        };\n\n        if (initial.url && initial.line) {\n            stackInfo.incomplete = false;\n\n            if (!initial.func) {\n                initial.func = guessFunctionName(initial.url, initial.line);\n            }\n\n            if (!initial.context) {\n                initial.context = gatherContext(initial.url, initial.line);\n            }\n\n            var reference = / '([^']+)' /.exec(message);\n            if (reference) {\n                initial.column = findSourceInLine(reference[1], initial.url, initial.line);\n            }\n\n            if (stackInfo.stack.length > 0) {\n                if (stackInfo.stack[0].url === initial.url) {\n                    if (stackInfo.stack[0].line === initial.line) {\n                        return false; // already in stack trace\n                    } else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {\n                        stackInfo.stack[0].line = initial.line;\n                        stackInfo.stack[0].context = initial.context;\n                        return false;\n                    }\n                }\n            }\n\n            stackInfo.stack.unshift(initial);\n            stackInfo.partial = true;\n            return true;\n        } else {\n            stackInfo.incomplete = true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Computes stack trace information by walking the arguments.caller\n     * chain at the time the exception occurred. This will cause earlier\n     * frames to be missed but is the only way to get any stack trace in\n     * Safari and IE. The top frame is restored by\n     * {@link augmentStackTraceWithInitialElement}.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceByWalkingCallerChain(ex, depth) {\n        var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i,\n            stack = [],\n            funcs = {},\n            recursion = false,\n            parts,\n            item,\n            source;\n\n        for (var curr = computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\n            if (curr === computeStackTrace || curr === TraceKit.report) {\n                // console.log('skipping internal function');\n                continue;\n            }\n\n            item = {\n                'url': null,\n                'func': UNKNOWN_FUNCTION,\n                'line': null,\n                'column': null\n            };\n\n            if (curr.name) {\n                item.func = curr.name;\n            } else if ((parts = functionName.exec(curr.toString()))) {\n                item.func = parts[1];\n            }\n\n            if (typeof item.func === 'undefined') {\n              try {\n                item.func = parts.input.substring(0, parts.input.indexOf('{'))\n              } catch (e) { }\n            }\n\n            if ((source = findSourceByFunctionBody(curr))) {\n                item.url = source.url;\n                item.line = source.line;\n\n                if (item.func === UNKNOWN_FUNCTION) {\n                    item.func = guessFunctionName(item.url, item.line);\n                }\n\n                var reference = / '([^']+)' /.exec(ex.message || ex.description);\n                if (reference) {\n                    item.column = findSourceInLine(reference[1], source.url, source.line);\n                }\n            }\n\n            if (funcs['' + curr]) {\n                recursion = true;\n            }else{\n                funcs['' + curr] = true;\n            }\n\n            stack.push(item);\n        }\n\n        if (depth) {\n            // console.log('depth is ' + depth);\n            // console.log('stack is ' + stack.length);\n            stack.splice(0, depth);\n        }\n\n        var result = {\n            'mode': 'callers',\n            'name': ex.name,\n            'message': ex.message,\n            'url': document.location.href,\n            'stack': stack,\n            'useragent': navigator.userAgent\n        };\n        augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description);\n        return result;\n    }\n\n    /**\n     * Computes a stack trace for an exception.\n     * @param {Error} ex\n     * @param {(string|number)=} depth\n     */\n    function computeStackTrace(ex, depth) {\n        var stack = null;\n        depth = (depth == null ? 0 : +depth);\n\n        try {\n            // This must be tried first because Opera 10 *destroys*\n            // its stacktrace property if you try to access the stack\n            // property first!!\n            stack = computeStackTraceFromStacktraceProp(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceFromStackProp(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceFromOperaMultiLineMessage(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        return {\n            'mode': 'failed'\n        };\n    }\n\n    /**\n     * Logs a stacktrace starting from the previous call and working down.\n     * @param {(number|string)=} depth How many frames deep to trace.\n     * @return {Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceOfCaller(depth) {\n        depth = (depth == null ? 0 : +depth) + 1; // \"+ 1\" because \"ofCaller\" should drop one frame\n        try {\n            throw new Error();\n        } catch (ex) {\n            return computeStackTrace(ex, depth + 1);\n        }\n    }\n\n    computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;\n    computeStackTrace.guessFunctionName = guessFunctionName;\n    computeStackTrace.gatherContext = gatherContext;\n    computeStackTrace.ofCaller = computeStackTraceOfCaller;\n\n    return computeStackTrace;\n}());\n\n/**\n * Extends support for global error handling for asynchronous browser\n * functions. Adopted from Closure Library's errorhandler.js\n */\nTraceKit.extendToAsynchronousCallbacks = function () {\n    var _helper = function _helper(fnName) {\n        var originalFn = window[fnName];\n        window[fnName] = function traceKitAsyncExtension() {\n            // Make a copy of the arguments\n            var args = _slice.call(arguments);\n            var originalCallback = args[0];\n            if (typeof (originalCallback) === 'function') {\n                args[0] = TraceKit.wrap(originalCallback);\n            }\n            // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\n            // also only supports 2 argument and doesn't care what \"this\" is, so we\n            // can just call the original function directly.\n            if (originalFn.apply) {\n                return originalFn.apply(this, args);\n            } else {\n                return originalFn(args[0], args[1]);\n            }\n        };\n    };\n\n    _helper('setTimeout');\n    _helper('setInterval');\n};\n\n//Default options:\nif (!TraceKit.remoteFetching) {\n  TraceKit.remoteFetching = true;\n}\nif (!TraceKit.collectWindowErrors) {\n  TraceKit.collectWindowErrors = true;\n}\nif (!TraceKit.linesOfContext || TraceKit.linesOfContext < 1) {\n  // 5 lines before, the offending line, 5 lines after\n  TraceKit.linesOfContext = 11;\n}\n\n\n\n// Export to global object\nwindow.TraceKit = TraceKit;\n\n}(typeof window !== 'undefined' ? window : global));\n","export interface ILastReferenceIdManager {\r\n  getLast(): string;\r\n  clearLast(): void;\r\n  setLast(eventId:string): void;\r\n}\r\n\nexport interface ILog {\r\n  info(message:string):void;\r\n  warn(message:string):void;\r\n  error(message:string):void;\r\n}\r\n\nexport interface IEvent {\r\n  type?:string;\r\n  source?:string;\r\n  date?:Date;\r\n  tags?:string[];\r\n  message?:string;\r\n  geo?:string;\r\n  value?:number;\r\n  data?:any;\r\n  reference_id?:string;\r\n  session_id?:string;\r\n}\r\n\n                                          \r\n\r\nexport interface IEventQueue {\r\n  enqueue(event:IEvent):void;\r\n  process():void;\r\n  suspendProcessing(durationInMinutes?:number, discardFutureQueuedItems?:boolean, clearQueue?:boolean):void;\r\n}\r\n\nexport interface IEnvironmentInfo {\n  processor_count?:number;\n  total_physical_memory?:number;\n  available_physical_memory?:number;\n  command_line?:string;\n  process_name?:string;\n  process_id?:string;\n  process_memory_size?:number;\n  thread_id?:string;\n  architecture?:string;\n  o_s_name?:string;\n  o_s_version?:string;\n  ip_address?:string;\n  machine_name?:string;\n  install_id?:string;\n  runtime_version?:string;\n  data?:any;\n}\n\nexport class ContextData {\r\n  public setException(exception:Error): void {\r\n    if (exception) {\r\n      this['@@_Exception'] = exception;\r\n    }\r\n  }\r\n\r\n  public get hasException(): boolean {\r\n    return !!this['@@_Exception']\r\n  }\r\n\r\n  public getException(): Error {\r\n    return this['@@_Exception'] || null;\r\n  }\r\n\r\n  public markAsUnhandledError(): void {\r\n    this['@@_IsUnhandledError'] = true;\r\n  }\r\n\r\n  public get isUnhandledError(): boolean {\r\n    return !!this['@@_IsUnhandledError'];\r\n  }\r\n\r\n  public setSubmissionMethod(method:string): void {\r\n    if (method) {\r\n      this['@@_SubmissionMethod'] = method;\r\n    }\r\n  }\r\n\r\n  public getSubmissionMethod(): string {\r\n    return this['@@_SubmissionMethod'] || null;\r\n  }\r\n}\r\n\n                                                                                                                                   \r\n\r\nexport interface IEnvironmentInfoCollector {\r\n  getEnvironmentInfo(context:EventPluginContext):IEnvironmentInfo;\r\n}\r\n\n                                                                                                               \r\n\r\nexport interface IErrorParser {\r\n  parse(context:EventPluginContext, exception:Error): IError;\r\n}\r\n\n                                                                                                                \n\nexport interface IModuleCollector {\n  getModules(context:EventPluginContext):IModule[];\n}\n\n                                                                                                                           \r\n\r\nexport interface IRequestInfoCollector {\r\n  getRequestInfo(context:EventPluginContext):IRequestInfo;\r\n}\r\n\n                                              \r\n\r\nexport interface IStorage<T> {\r\n  save(path:string, value:T):boolean;\r\n  get(path:string):T;\r\n  getList(searchPattern?:string, limit?:number):IStorageItem<T>[];\r\n  remove(path:string):void;\r\n}\r\n\n                                                                                                                                                                                                                                                                                           \n\nexport interface ISubmissionClient {\n  postEvents(events:IEvent[], config:Configuration, callback:(response:SubmissionResponse) => void):void;\n  postUserDescription(referenceId:string, description:IUserDescription, config:Configuration, callback:(response:SubmissionResponse) => void):void;\n  getSettings(config:Configuration, callback:(response:SettingsResponse) => void):void;\n}\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \n\nexport interface IConfigurationSettings {\n  apiKey?:string;\n  serverUrl?:string;\n  environmentInfoCollector?:IEnvironmentInfoCollector;\n  errorParser?:IErrorParser;\n  lastReferenceIdManager?:ILastReferenceIdManager;\n  log?:ILog;\n  moduleCollector?:IModuleCollector;\n  requestInfoCollector?:IRequestInfoCollector;\n  submissionBatchSize?:number;\n  submissionClient?:ISubmissionClient;\n  storage?:IStorage<any>;\n  queue?:IEventQueue;\n}\n\n                                                                                                                                                     \r\n\r\nexport class SettingsManager {\r\n  /**\r\n   * The configuration settings path.\r\n   * @type {string}\r\n   * @private\r\n   */\r\n  private static _configPath:string = 'ex-server-settings.json';\r\n\r\n  /**\r\n   * A list of handlers that will be fired when the settings change.\r\n   * @type {Array}\r\n   * @private\r\n   */\r\n  private static _handlers:{ (config:Configuration):void }[] = [];\r\n\r\n  private static changed(config:Configuration) {\r\n    var handlers = this._handlers; // optimization for minifier.\r\n    for (var index = 0; index < handlers.length; index++) {\r\n      handlers[index](config);\r\n    }\r\n  }\r\n\r\n  public static onChanged(handler:(config:Configuration) => void) {\r\n    !!handler && this._handlers.push(handler);\r\n  }\r\n\r\n  public static applySavedServerSettings(config:Configuration):void {\r\n    config.log.info('Applying saved settings.');\r\n    config.settings = Utils.merge(config.settings, this.getSavedServerSettings(config));\r\n    this.changed(config);\r\n  }\r\n\r\n  private static getSavedServerSettings(config:Configuration):Object {\r\n    return config.storage.get(this._configPath) || {};\r\n  }\r\n\r\n  public static checkVersion(version:number, config:Configuration):void {\r\n    if (version) {\r\n      var savedConfigVersion = parseInt(<string>config.storage.get(`${this._configPath}-version`));\r\n      if (isNaN(savedConfigVersion) || version > savedConfigVersion) {\r\n        config.log.info(`Updating settings from v${(!isNaN(savedConfigVersion) ? savedConfigVersion : 0)} to v${version}`);\r\n        this.updateSettings(config);\r\n      }\r\n    }\r\n  }\r\n\r\n  public static updateSettings(config:Configuration):void {\r\n    if (!config.isValid) {\r\n      config.log.error('Unable to update settings: ApiKey is not set.');\r\n      return;\r\n    }\r\n\r\n    config.submissionClient.getSettings(config, (response:SettingsResponse) => {\r\n      if (!response || !response.success || !response.settings) {\r\n        return;\r\n      }\r\n\r\n      config.settings = Utils.merge(config.settings, response.settings);\r\n\r\n      // TODO: Store snapshot of settings after reading from config and attributes and use that to revert to defaults.\r\n      // Remove any existing server settings that are not in the new server settings.\r\n      var savedServerSettings = SettingsManager.getSavedServerSettings(config);\r\n      for (var key in savedServerSettings) {\r\n        if (response.settings[key]) {\r\n          continue;\r\n        }\r\n\r\n        delete config.settings[key];\r\n      }\r\n\r\n      var path = SettingsManager._configPath; // optimization for minifier.\r\n      config.storage.save(`${path}-version`, response.settingsVersion);\r\n      config.storage.save(path, response.settings);\r\n\r\n      config.log.info('Updated settings');\r\n      this.changed(config);\r\n    });\r\n  }\r\n}\r\n\n                                                                    \r\n\r\nexport class DefaultLastReferenceIdManager implements ILastReferenceIdManager {\r\n  /**\r\n   * Gets the last event's reference id that was submitted to the server.\r\n   * @type {string}\r\n   * @private\r\n   */\r\n  private _lastReferenceId:string = null;\r\n\r\n  /**\r\n   * Gets the last event's reference id that was submitted to the server.\r\n   * @returns {string}\r\n   */\r\n  getLast(): string {\r\n    return this._lastReferenceId;\r\n  }\r\n\r\n  /**\r\n   * Clears the last event's reference id.\r\n   */\r\n  clearLast():void {\r\n    this._lastReferenceId = null;\r\n  }\r\n\r\n  /**\r\n   * Sets the last event's reference id.\r\n   * @param eventId\r\n   */\r\n  setLast(eventId:string):void {\r\n    this._lastReferenceId = eventId;\r\n  }\r\n}\r\n\n                              \n\nexport class ConsoleLog implements ILog {\n  public info(message:string):void {\n    this.log('info', message);\n  }\n\n  public warn(message:string):void {\n    this.log('warn', message);\n  }\n\n  public error(message:string):void {\n    this.log('error', message);\n  }\n\n  private log(level:string, message:string) {\n    if (console && console[level]) {\n      console[level](`[${level}] Exceptionless: ${message}`);\n    }\n  }\n}\n\n                              \n\nexport class NullLog implements ILog {\n  public info(message:string):void {}\n  public warn(message:string):void {}\n  public error(message:string):void {}\n}\n\nexport interface IUserInfo {\n  identity?:string;\n  name?:string;\n  data?:any;\n}\n\n                                                                                                          \r\n\r\nexport interface IEventPlugin {\r\n  priority?:number;\r\n  name?:string;\r\n  run(context:EventPluginContext, next?:() => void): void;\r\n}\r\n\n                                                                                                                                                                                                                                            \n\nexport class EventPluginContext {\n  public cancelled:boolean;\n  public client:ExceptionlessClient;\n  public event:IEvent;\n  public contextData:ContextData;\n\n  constructor(client:ExceptionlessClient, event:IEvent, contextData?:ContextData) {\n    this.client = client;\n    this.event = event;\n    this.contextData = contextData ? contextData : new ContextData();\n  }\n\n  public get log(): ILog {\n    return this.client.config.log;\n  }\n}\n\nr\n\r\nexport class EventPluginManager {\r\n  public static run(context:EventPluginContext, callback:(context?:EventPluginContext) => void): void {\r\n    var wrap = function (plugin:IEventPlugin, next?:() => void): () => void {\r\n      return () => {\r\n        try {\r\n          if (!context.cancelled) {\r\n            plugin.run(context, next);\r\n          }\r\n        } catch (ex) {\r\n          context.cancelled = true;\r\n          context.log.error(`Error running plugin '${plugin.name}': ${ex.message}. Discarding Event.`);\r\n        }\r\n\r\n        if (context.cancelled && !!callback) {\r\n          callback(context);\r\n        }\r\n      };\r\n    };\r\n\r\n    var plugins:IEventPlugin[] = context.client.config.plugins; // optimization for minifier.\r\n    var wrappedPlugins:{ (): void }[] = [];\r\n    if (!!callback) {\r\n      wrappedPlugins[plugins.length] = wrap({ name: 'cb', priority: 9007199254740992, run: callback }, null);\r\n    }\r\n\r\n    for (var index = plugins.length - 1; index > -1; index--) {\r\n      wrappedPlugins[index] = wrap(plugins[index], !!callback || (index < plugins.length - 1) ? wrappedPlugins[index + 1] : null);\r\n    }\r\n\r\n    wrappedPlugins[0]();\r\n  }\r\n\r\n  public static addDefaultPlugins(config:Configuration): void {\r\n    config.addPlugin(new ConfigurationDefaultsPlugin());\r\n    config.addPlugin(new ErrorPlugin());\r\n    config.addPlugin(new ModuleInfoPlugin());\r\n    config.addPlugin(new RequestInfoPlugin());\r\n    config.addPlugin(new EnvironmentInfoPlugin());\r\n    config.addPlugin(new SubmissionMethodPlugin());\r\n  }\r\n}\r\n\n                                                                                                                                                  \r\n\r\nexport class ReferenceIdPlugin implements IEventPlugin {\r\n  public priority:number = 20;\r\n  public name:string = 'ReferenceIdPlugin';\r\n\r\n  public run(context:EventPluginContext, next?:() => void): void {\r\n    if ((!context.event.reference_id || context.event.reference_id.length === 0) && context.event.type === 'error') {\r\n      context.event.reference_id = Utils.guid().replace('-', '').substring(0, 10);\r\n    }\r\n\r\n    next && next();\r\n  }\r\n}\r\n\n                                                                                                                                                                                                                                                                                                                    \r\n\r\nexport class DefaultEventQueue implements IEventQueue {\r\n  /**\r\n   * The configuration object.\r\n   * @type {Configuration}\r\n   * @private\r\n   */\r\n  private _config:Configuration;\r\n\r\n  /**\r\n   * Suspends processing until the specified time.\r\n   * @type {Date}\r\n   * @private\r\n   */\r\n  private _suspendProcessingUntil:Date;\r\n\r\n  /**\r\n   * Discards queued items until the specified time.\r\n   * @type {Date}\r\n   * @private\r\n   */\r\n  private _discardQueuedItemsUntil:Date;\r\n\r\n  /**\r\n   * Returns true if the queue is processing.\r\n   * @type {boolean}\r\n   * @private\r\n   */\r\n  private _processingQueue:boolean = false;\r\n\r\n  /**\r\n   * Processes the queue every xx seconds.\r\n   * @type {Timer}\r\n   * @private\r\n   */\r\n  private _queueTimer:any;\r\n\r\n  constructor(config:Configuration) {\r\n    this._config = config;\r\n  }\r\n\r\n  public enqueue(event:IEvent): void {\r\n    var config:Configuration = this._config; // Optimization for minifier.\r\n    this.ensureQueueTimer();\r\n\r\n    if (this.areQueuedItemsDiscarded()) {\r\n      config.log.info('Queue items are currently being discarded. The event will not be queued.');\r\n      return;\r\n    }\r\n\r\n    var key = `ex-q-${new Date().toJSON()}-${Utils.randomNumber()}`;\r\n    config.log.info(`Enqueuing event: ${key} type=${event.type} ${!!event.reference_id ? 'refid=' + event.reference_id : ''}`);\r\n    config.storage.save(key, event);\r\n  }\r\n\r\n  public process(): void {\r\n    function getEvents(events:{ path:string, value:IEvent }[]):IEvent[] {\r\n      var items:IEvent[] = [];\r\n      for (var index = 0; index < events.length; index++) {\r\n        items.push(events[index].value);\r\n      }\r\n\r\n      return items;\r\n    }\r\n\r\n    const queueNotProcessed:string = 'The queue will not be processed.'; // optimization for minifier.\r\n    var config:Configuration = this._config; // Optimization for minifier.\r\n    var log:ILog = config.log; // Optimization for minifier.\r\n\r\n    this.ensureQueueTimer();\r\n\r\n    if (this._processingQueue) {\r\n      return;\r\n    }\r\n\r\n    log.info('Processing queue...');\r\n    if (!config.enabled) {\r\n      log.info(`Configuration is disabled. ${queueNotProcessed}`);\r\n      return;\r\n    }\r\n\r\n    if (!config.isValid) {\r\n      log.info(`Invalid Api Key. ${queueNotProcessed}`);\r\n      return;\r\n    }\r\n\r\n    this._processingQueue = true;\r\n\r\n    try {\r\n      var events = config.storage.getList('ex-q', config.submissionBatchSize);\r\n      if (!events || events.length == 0) {\r\n        this._processingQueue = false;\r\n        return;\r\n      }\r\n\r\n      log.info(`Sending ${events.length} events to ${config.serverUrl}.`);\r\n      config.submissionClient.postEvents(getEvents(events), config, (response:SubmissionResponse) => {\r\n        this.processSubmissionResponse(response, events);\r\n        log.info('Finished processing queue.');\r\n        this._processingQueue = false;\r\n      });\r\n    } catch (ex) {\r\n      log.error(`Error processing queue: ${ex}`);\r\n      this.suspendProcessing();\r\n      this._processingQueue = false;\r\n    }\r\n  }\r\n\r\n  private processSubmissionResponse(response:SubmissionResponse, events:{ path:string, value:IEvent }[]): void {\r\n    const noSubmission:string = 'The event will not be submitted.'; // Optimization for minifier.\r\n    var config:Configuration = this._config; // Optimization for minifier.\r\n    var log:ILog = config.log; // Optimization for minifier.\r\n\r\n    if (response.success) {\r\n      log.info(`Sent ${events.length} events.`);\r\n      this.removeEvents(events);\r\n      return;\r\n    }\r\n\r\n    if (response.serviceUnavailable) {\r\n      // You are currently over your rate limit or the servers are under stress.\r\n      log.error('Server returned service unavailable.');\r\n      this.suspendProcessing();\r\n      return;\r\n    }\r\n\r\n    if (response.paymentRequired) {\r\n      // If the organization over the rate limit then discard the event.\r\n      log.info('Too many events have been submitted, please upgrade your plan.');\r\n      this.suspendProcessing(null, true, true);\r\n      return;\r\n    }\r\n\r\n    if (response.unableToAuthenticate) {\r\n      // The api key was suspended or could not be authorized.\r\n      log.info(`Unable to authenticate, please check your configuration. ${noSubmission}`);\r\n      this.suspendProcessing(15);\r\n      this.removeEvents(events);\r\n      return;\r\n    }\r\n\r\n    if (response.notFound || response.badRequest) {\r\n      // The service end point could not be found.\r\n      log.error(`Error while trying to submit data: ${response.message}`);\r\n      this.suspendProcessing(60 * 4);\r\n      this.removeEvents(events);\r\n      return;\r\n    }\r\n\r\n    if (response.requestEntityTooLarge) {\r\n      var message = 'Event submission discarded for being too large.';\r\n      if (config.submissionBatchSize > 1) {\r\n        log.error(`${message} Retrying with smaller batch size.`);\r\n        config.submissionBatchSize = Math.max(1, Math.round(config.submissionBatchSize / 1.5));\r\n      } else {\r\n        log.error(`${message} ${noSubmission}`);\r\n        this.removeEvents(events);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if (!response.success) {\r\n      log.error(`Error submitting events: ${ response.message}`);\r\n      this.suspendProcessing();\r\n    }\r\n  }\r\n\r\n  private ensureQueueTimer(): void {\r\n    if (!this._queueTimer) {\r\n      this._queueTimer = setInterval(() => this.onProcessQueue(), 10000);\r\n    }\r\n  }\r\n\r\n  private onProcessQueue(): void {\r\n    if (!this.isQueueProcessingSuspended() && !this._processingQueue) {\r\n      this.process();\r\n    }\r\n  }\r\n\r\n  public suspendProcessing(durationInMinutes?:number, discardFutureQueuedItems?:boolean, clearQueue?:boolean): void {\r\n    var config:Configuration = this._config; // Optimization for minifier.\r\n\r\n    if (!durationInMinutes || durationInMinutes <= 0) {\r\n      durationInMinutes = 5;\r\n    }\r\n\r\n    config.log.info(`Suspending processing for ${durationInMinutes} minutes.`);\r\n    this._suspendProcessingUntil = new Date(new Date().getTime() + (durationInMinutes * 60000));\r\n\r\n    if (discardFutureQueuedItems) {\r\n      this._discardQueuedItemsUntil = new Date(new Date().getTime() + (durationInMinutes * 60000));\r\n    }\r\n\r\n    if (clearQueue) {\r\n      // Account is over the limit and we want to ensure that the sample size being sent in will contain newer errors.\r\n      this.removeEvents(config.storage.getList('ex-q'));\r\n    }\r\n  }\r\n\r\n  private removeEvents(events:{ path:string, value:IEvent }[]) {\r\n    for (var index = 0; index < (events || []).length; index++) {\r\n      this._config.storage.remove(events[index].path);\r\n    }\r\n  }\r\n\r\n  private isQueueProcessingSuspended(): boolean {\r\n    return this._suspendProcessingUntil && this._suspendProcessingUntil > new Date();\r\n  }\r\n\r\n  private areQueuedItemsDiscarded(): boolean {\r\n    return this._discardQueuedItemsUntil && this._discardQueuedItemsUntil > new Date();\r\n  }\r\n}\r\n\n                                                                                                                                  \r\n\r\nexport class InMemoryStorage<T> implements IStorage<T> {\r\n  private _items:IStorageItem<T>[] = [];\r\n  private _maxItems:number;\r\n\r\n  constructor(maxItems?:number) {\r\n    this._maxItems = maxItems > 0 ? maxItems : 250;\r\n  }\r\n\r\n  public save(path:string, value:T):boolean {\r\n    if (!path || !value) {\r\n      return false;\r\n    }\r\n\r\n    if (this._items.push({ created: new Date().getTime(), path: path, value: value }) > this._maxItems) {\r\n      this._items.shift();\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public get(path:string):T {\r\n    var item:IStorageItem<T> = path ? this.getList(path, 1)[0] : null;\r\n    return item ? item.value : null;\r\n  }\r\n\r\n  public getList(searchPattern?:string, limit?:number):IStorageItem<T>[] {\r\n    var items = this._items; // Optimization for minifier\r\n    if (!searchPattern) {\r\n      return items.slice(0, limit);\r\n    }\r\n\r\n    var regex = new RegExp(searchPattern);\r\n    var results:IStorageItem<T>[] = [];\r\n    for (var index = 0; index < items.length; index++) {\r\n      if (regex.test(items[index].path)) {\r\n        results.push(items[index]);\r\n\r\n        if (results.length >= limit) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  public remove(path:string):void {\r\n    if (path) {\r\n      var item = this.getList(path, 1)[0];\r\n      if (item) {\r\n        this._items.splice(this._items.indexOf(item), 1);\r\n      }\r\n    }\r\n  }\r\n}\r\n\n                                                 \n\nexport class Utils {\n  public static addRange<T>(target:T[], ...values:T[]) {\n    if (!target) {\n      target = [];\n    }\n\n    if (!values || values.length === 0) {\n      return target;\n    }\n\n    for (var index = 0; index < values.length; index++) {\n      if (values[index] && target.indexOf(values[index]) < 0) {\n        target.push(values[index]);\n      }\n    }\n\n    return target;\n  }\n\n  public static getHashCode(source:string): string {\n    if (!source || source.length === 0) {\n      return null;\n    }\n\n    var hash:number = 0;\n    for (var index = 0; index < source.length; index++) {\n      var character   = source.charCodeAt(index);\n      hash  = ((hash << 5) - hash) + character;\n      hash |= 0;\n    }\n\n    return hash.toString();\n  }\n\n  public static getCookies(cookies:string): Object {\n    var result:Object = {};\n\n    var parts:string[] = (cookies || '').split('; ');\n    for (var index = 0; index < parts.length; index++) {\n      var cookie:string[] = parts[index].split('=');\n      result[cookie[0]] = cookie[1];\n    }\n\n    return result;\n  }\n\n  public static guid(): string {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    }\n\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  }\n\n  public static merge(defaultValues:Object, values:Object) {\n    var result:Object = {};\n\n    for (var key in defaultValues || {}) {\n      if (!!defaultValues[key]) {\n        result[key] = defaultValues[key];\n      }\n    }\n\n    for (var key in values || {}) {\n      if (!!values[key]) {\n        result[key] = values[key];\n      }\n    }\n\n    return result;\n  }\n\n  public static parseVersion(source:string): string {\n    if (!source) {\n      return null;\n    }\n\n    var versionRegex = /(v?((\\d+)\\.(\\d+)(\\.(\\d+))?)(?:-([\\dA-Za-z\\-]+(?:\\.[\\dA-Za-z\\-]+)*))?(?:\\+([\\dA-Za-z\\-]+(?:\\.[\\dA-Za-z\\-]+)*))?)/;\n    var matches = versionRegex.exec(source);\n    if (matches && matches.length > 0) {\n      return matches[0];\n    }\n\n    return null;\n  }\n\n  public static parseQueryString(query:string) {\n    if (!query || query.length === 0) {\n      return null;\n    }\n\n    var pairs:string[] = query.split('&');\n    if (pairs.length === 0) {\n      return null;\n    }\n\n    var result:Object = {};\n    for (var index = 0; index < pairs.length; index++) {\n      var pair = pairs[index].split('=');\n      result[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n\n    return result;\n  }\n\n  public static randomNumber(): number {\n    return Math.floor(Math.random() * 9007199254740992);\n  }\n\n  public static stringify(data:any, exclusions?:string[]): string {\n    function checkForMatch(pattern:string, value:string): boolean {\n      if (!pattern || !value || typeof value !== 'string') {\n        return false;\n      }\n\n      var trim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n      pattern = pattern.toLowerCase().replace(trim, '');\n      value = value.toLowerCase().replace(trim, '');\n\n      if (pattern.length <= 0) {\n        return false;\n      }\n\n      var startsWithWildcard:boolean = pattern[0] === '*';\n      if (startsWithWildcard) {\n        pattern = pattern.slice(1);\n      }\n\n      var endsWithWildcard:boolean = pattern[pattern.length - 1] === '*';\n      if (endsWithWildcard) {\n        pattern = pattern.substring(0, pattern.length - 1);\n      }\n\n\n      if (startsWithWildcard && endsWithWildcard)\n        return value.indexOf(pattern) !== -1;\n\n      if (startsWithWildcard)\n        return value.lastIndexOf(pattern, 0) !== -1;\n\n      if (endsWithWildcard)\n        return value.lastIndexOf(pattern) === (value.length - pattern.length);\n\n      return value === pattern;\n    }\n\n    function stringifyImpl(data:any, exclusions:string[]): string {\n      var cache:string[] = [];\n      return JSON.stringify(data, function(key:string, value:any) {\n        for (var index = 0; index < (exclusions || []).length; index++) {\n          if (checkForMatch(exclusions[index], key)){\n            return;\n          }\n        }\n\n        if (typeof value === 'object' && !!value) {\n          if (cache.indexOf(value) !== -1) {\n            // Circular reference found, discard key\n            return;\n          }\n\n          cache.push(value);\n        }\n\n        return value;\n      });\n    }\n\n    if (toString.call(data) === '[object Array]') {\n      var result = [];\n      for (var index = 0; index < data.length; index++) {\n        result[index] = JSON.parse(stringifyImpl(data[index], exclusions || []));\n      }\n\n      return JSON.stringify(result);\n    }\n\n    return stringifyImpl(data, exclusions || []);\n  }\n}\n\nr\n\r\nexport class Configuration implements IConfigurationSettings {\r\n  /**\r\n   * A default list of tags that will automatically be added to every\r\n   * report submitted to the server.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  public defaultTags:string[] = [];\r\n\r\n  /**\r\n   * A default list of of extended data objects that will automatically\r\n   * be added to every report submitted to the server.\r\n   *\r\n   * @type {{}}\r\n   */\r\n  public defaultData:Object = {};\r\n\r\n  /**\r\n   * Whether the client is currently enabled or not. If it is disabled,\r\n   * submitted errors will be discarded and no data will be sent to the server.\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  public enabled:boolean = true;\r\n\r\n  public environmentInfoCollector:IEnvironmentInfoCollector;\r\n  public errorParser:IErrorParser;\r\n  public lastReferenceIdManager:ILastReferenceIdManager = new DefaultLastReferenceIdManager();\r\n  public log:ILog;\r\n  public moduleCollector:IModuleCollector;\r\n  public requestInfoCollector:IRequestInfoCollector;\r\n\r\n  /**\r\n   * Maximum number of events that should be sent to the server together in a batch. (Defaults to 50)\r\n   */\r\n  public submissionBatchSize:number;\r\n  public submissionClient:ISubmissionClient;\r\n\r\n  /**\r\n   * Contains a dictionary of custom settings that can be used to control\r\n   * the client and will be automatically updated from the server.\r\n   */\r\n  public settings:Object = {};\r\n\r\n  public storage:IStorage<Object>;\r\n\r\n  public queue:IEventQueue;\r\n\r\n  constructor(configSettings?:IConfigurationSettings) {\r\n    function inject(fn:any) {\r\n      return typeof fn === 'function' ? fn(this) : fn;\r\n    }\r\n\r\n    configSettings = Utils.merge(Configuration.defaults, configSettings);\r\n\r\n    this.log = inject(configSettings.log) || new NullLog();\r\n    this.apiKey = configSettings.apiKey;\r\n    this.serverUrl = configSettings.serverUrl;\r\n\r\n    this.environmentInfoCollector = inject(configSettings.environmentInfoCollector);\r\n    this.errorParser = inject(configSettings.errorParser);\r\n    this.lastReferenceIdManager = inject(configSettings.lastReferenceIdManager) || new DefaultLastReferenceIdManager();\r\n    this.moduleCollector = inject(configSettings.moduleCollector);\r\n    this.requestInfoCollector = inject(configSettings.requestInfoCollector);\r\n    this.submissionBatchSize = inject(configSettings.submissionBatchSize) || 50;\r\n    this.submissionClient = inject(configSettings.submissionClient);\r\n    this.storage = inject(configSettings.storage) || new InMemoryStorage<any>();\r\n    this.queue = inject(configSettings.queue) || new DefaultEventQueue(this);\r\n\r\n    SettingsManager.applySavedServerSettings(this);\r\n    EventPluginManager.addDefaultPlugins(this);\r\n  }\r\n\r\n  /**\r\n   * The API key that will be used when sending events to the server.\r\n   * @type {string}\r\n   * @private\r\n   */\r\n  private _apiKey:string;\r\n\r\n  /**\r\n   * The API key that will be used when sending events to the server.\r\n   * @returns {string}\r\n   */\r\n  public get apiKey():string {\r\n    return this._apiKey;\r\n  }\r\n\r\n  /**\r\n   * The API key that will be used when sending events to the server.\r\n   * @param value\r\n   */\r\n  public set apiKey(value:string) {\r\n    this._apiKey = value || null;\r\n    this.log.info(`apiKey: ${this._apiKey}`);\r\n  }\r\n\r\n  /**\r\n   * Returns true if the apiKey is valid.\r\n   * @returns {boolean}\r\n   */\r\n  public get isValid():boolean {\r\n    return !!this.apiKey && this.apiKey.length >= 10;\r\n  }\r\n\r\n  /**\r\n   * The server url that all events will be sent to.\r\n   * @type {string}\r\n   * @private\r\n   */\r\n  private _serverUrl:string = 'https://collector.exceptionless.io';\r\n\r\n  /**\r\n   * The server url that all events will be sent to.\r\n   * @returns {string}\r\n   */\r\n  public get serverUrl():string {\r\n    return this._serverUrl;\r\n  }\r\n\r\n  /**\r\n   * The server url that all events will be sent to.\r\n   * @param value\r\n   */\r\n  public set serverUrl(value:string) {\r\n    if (!!value) {\r\n      this._serverUrl = value;\r\n      this.log.info(`serverUrl: ${this._serverUrl}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A list of exclusion patterns.\r\n   * @type {Array}\r\n   * @private\r\n   */\r\n  private _dataExclusions:string[] = [];\r\n\r\n  /**\r\n   *  A list of exclusion patterns that will automatically remove any data that\r\n   *  matches them from any data submitted to the server.\r\n   *\r\n   *  For example, entering CreditCard will remove any extended data properties,\r\n   *  form fields, cookies and query parameters from the report.\r\n   *\r\n   * @returns {string[]}\r\n   */\r\n  public get dataExclusions():string[] {\r\n    var exclusions:string = this.settings['@@DataExclusions'];\r\n    return this._dataExclusions.concat(exclusions && exclusions.split(',') || []);\r\n  }\r\n\r\n  /**\r\n   * Add items to the list of exclusion patterns that will automatically remove any\r\n   * data that matches them from any data submitted to the server.\r\n   *\r\n   * For example, entering CreditCard will remove any extended data properties, form\r\n   * fields, cookies and query parameters from the report.\r\n   *\r\n   * @param exclusions\r\n   */\r\n  public addDataExclusions(...exclusions:string[]) {\r\n    this._dataExclusions = Utils.addRange<string>(this._dataExclusions, ...exclusions);\r\n  }\r\n\r\n  /**\r\n   * The list of plugins that will be used in this configuration.\r\n   * @type {Array}\r\n   * @private\r\n   */\r\n  private _plugins:IEventPlugin[] = [];\r\n\r\n  /**\r\n   * The list of plugins that will be used in this configuration.\r\n   * @returns {IEventPlugin[]}\r\n   */\r\n  public get plugins():IEventPlugin[] {\r\n    return this._plugins.sort((p1:IEventPlugin, p2:IEventPlugin) => {\r\n      return (p1.priority < p2.priority) ? -1 : (p1.priority > p2.priority) ? 1 : 0;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Register an plugin to be used in this configuration.\r\n   * @param plugin\r\n   */\r\n  public addPlugin(plugin:IEventPlugin): void;\r\n\r\n  /**\r\n   * Register an plugin to be used in this configuration.\r\n   * @param name The name used to identify the plugin.\r\n   * @param priority Used to determine plugins priority.\r\n   * @param pluginAction A function that is run.\r\n   */\r\n  public addPlugin(name:string, priority:number, pluginAction:(context:EventPluginContext, next?:() => void) => void): void;\r\n  public addPlugin(pluginOrName:IEventPlugin|string, priority?:number, pluginAction?:(context:EventPluginContext, next?:() => void) => void): void {\r\n    var plugin:IEventPlugin = !!pluginAction ? { name: <string>pluginOrName, priority: priority, run: pluginAction } : <IEventPlugin>pluginOrName;\r\n    if (!plugin || !plugin.run) {\r\n      this.log.error('Add plugin failed: Run method not defined');\r\n      return;\r\n    }\r\n\r\n    if (!plugin.name) {\r\n      plugin.name = Utils.guid();\r\n    }\r\n\r\n    if (!plugin.priority) {\r\n      plugin.priority = 0;\r\n    }\r\n\r\n    var pluginExists:boolean = false;\r\n    var plugins = this._plugins; // optimization for minifier.\r\n    for (var index = 0; index < plugins.length; index++) {\r\n      if (plugins[index].name === plugin.name) {\r\n        pluginExists = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!pluginExists) {\r\n      plugins.push(plugin);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove the plugin from this configuration.\r\n   * @param plugin\r\n   */\r\n  public removePlugin(plugin:IEventPlugin): void;\r\n\r\n  /**\r\n   * Remove an plugin by key from this configuration.\r\n   * @param name\r\n   */\r\n  public removePlugin(name:string): void;\r\n  public removePlugin(pluginOrName:IEventPlugin|string): void {\r\n    var name:string = typeof pluginOrName === 'string' ? pluginOrName : pluginOrName.name;\r\n    if (!name) {\r\n      this.log.error('Remove plugin failed: Plugin name not defined');\r\n      return;\r\n    }\r\n\r\n    var plugins = this._plugins; // optimization for minifier.\r\n    for (var index = 0; index < plugins.length; index++) {\r\n      if (plugins[index].name === name) {\r\n        plugins.splice(index, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Automatically set the application version for events.\r\n   * @param version\r\n   */\r\n  public setVersion(version:string): void {\r\n    if (!!version) {\r\n      this.defaultData['@version'] = version;\r\n    }\r\n  }\r\n\r\n  public setUserIdentity(userInfo:IUserInfo): void;\r\n  public setUserIdentity(identity:string): void;\r\n  public setUserIdentity(identity:string, name:string): void;\r\n  public setUserIdentity(userInfoOrIdentity:IUserInfo|string, name?:string): void {\r\n    const user:string = '@user'; // optimization for minifier.\r\n    var userInfo:IUserInfo = typeof userInfoOrIdentity !== 'string' ? userInfoOrIdentity : { identity: userInfoOrIdentity, name: name };\r\n\r\n    var shouldRemove:boolean = !userInfo || (!userInfo.identity && !userInfo.name);\r\n    if (shouldRemove) {\r\n      delete this.defaultData[user];\r\n    } else {\r\n      this.defaultData[user] = userInfo;\r\n    }\r\n\r\n    this.log.info(`user identity: ${shouldRemove ? 'null' : userInfo.identity}`);\r\n  }\r\n\r\n  /**\r\n   * Used to identify the client that sent the events to the server.\r\n   * @returns {string}\r\n   */\r\n  public get userAgent():string {\r\n    return 'exceptionless-js/1.0.0.0';\r\n  }\r\n\r\n  /**\r\n   * Automatically set a reference id for error events.\r\n   */\r\n  public useReferenceIds(): void {\r\n    this.addPlugin(new ReferenceIdPlugin());\r\n  }\r\n\r\n  // TODO: Support a min log level.\r\n  public useDebugLogger(): void {\r\n    this.log = new ConsoleLog();\r\n  }\r\n\r\n  /**\r\n   * The default configuration settings that are applied to new configuration instances.\r\n   * @type {IConfigurationSettings}\r\n   * @private\r\n   */\r\n  private static _defaultSettings:IConfigurationSettings = null;\r\n\r\n  /**\r\n   * The default configuration settings that are applied to new configuration instances.\r\n   * @returns {IConfigurationSettings}\r\n   */\r\n  public static get defaults() {\r\n    if (Configuration._defaultSettings === null) {\r\n      Configuration._defaultSettings = {};\r\n    }\r\n\r\n    return Configuration._defaultSettings;\r\n  }\r\n}\r\n\n                                                                                                                                                                                                                                                                                                                                                                                  \r\n\r\nexport class EventBuilder {\r\n  private _validIdentifierErrorMessage:string = \"must contain between 8 and 100 alphanumeric or '-' characters.\"; // optimization for minifier.\r\n\r\n  public target:IEvent;\r\n  public client:ExceptionlessClient;\r\n  public pluginContextData:ContextData;\r\n\r\n  constructor(event:IEvent, client:ExceptionlessClient, pluginContextData?:ContextData) {\r\n    this.target = event;\r\n    this.client = client;\r\n    this.pluginContextData = pluginContextData || new ContextData();\r\n  }\r\n\r\n  public setType(type:string): EventBuilder {\r\n    if (!!type) {\r\n      this.target.type = type;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public setSource(source:string): EventBuilder {\r\n    if (!!source) {\r\n      this.target.source = source;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public setSessionId(sessionId:string): EventBuilder {\r\n    if (!this.isValidIdentifier(sessionId)) {\r\n      throw new Error(`SessionId ${this._validIdentifierErrorMessage}`);\r\n    }\r\n\r\n    this.target.session_id = sessionId;\r\n    return this;\r\n  }\r\n\r\n  public setReferenceId(referenceId:string): EventBuilder {\r\n    if (!this.isValidIdentifier(referenceId)) {\r\n      throw new Error(`ReferenceId ${this._validIdentifierErrorMessage}`);\r\n    }\r\n\r\n    this.target.reference_id = referenceId;\r\n    return this;\r\n  }\r\n\r\n  public setMessage(message:string): EventBuilder {\r\n    if (!!message) {\r\n      this.target.message = message;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public setGeo(latitude: number, longitude: number): EventBuilder {\r\n    if (latitude < -90.0 || latitude > 90.0)\r\n      throw new Error('Must be a valid latitude value between -90.0 and 90.0.');\r\n    if (longitude < -180.0 || longitude > 180.0)\r\n      throw new Error('Must be a valid longitude value between -180.0 and 180.0.');\r\n\r\n    this.target.geo = `${latitude},${longitude}`;\r\n    return this;\r\n  }\r\n\r\n  public setUserIdentity(userInfo:IUserInfo): EventBuilder;\r\n  public setUserIdentity(identity:string): EventBuilder;\r\n  public setUserIdentity(identity:string, name:string): EventBuilder;\r\n  public setUserIdentity(userInfoOrIdentity:IUserInfo|string, name?:string): EventBuilder {\r\n    var userInfo = typeof userInfoOrIdentity !== 'string' ? userInfoOrIdentity : { identity: userInfoOrIdentity, name: name };\r\n    if (!userInfo || (!userInfo.identity && !userInfo.name)) {\r\n      return this;\r\n    }\r\n\r\n    this.setProperty('@user', userInfo);\r\n    return this;\r\n  }\r\n\r\n  public setValue(value:number): EventBuilder {\r\n    if (!!value) {\r\n      this.target.value = value;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public addTags(...tags:string[]): EventBuilder {\r\n    this.target.tags = Utils.addRange<string>(this.target.tags, ...tags);\r\n    return this;\r\n  }\r\n\r\n  public setProperty(name:string, value:any): EventBuilder {\r\n    if (!name || (value === undefined || value == null)) {\r\n      return this;\r\n    }\r\n\r\n    if (!this.target.data) {\r\n      this.target.data = {};\r\n    }\r\n\r\n    this.target.data[name] = value;\r\n    return this;\r\n  }\r\n\r\n  public markAsCritical(critical:boolean): EventBuilder {\r\n    if (critical) {\r\n      this.addTags('Critical');\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public addRequestInfo(request:Object): EventBuilder {\r\n    if (!!request) {\r\n      this.pluginContextData['@request'] = request;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public submit(callback?:(context:EventPluginContext) => void): void {\r\n    this.client.submitEvent(this.target, this.pluginContextData, callback);\r\n  }\r\n\r\n  private isValidIdentifier(value:string): boolean {\r\n    if (!value) {\r\n      return true;\r\n    }\r\n\r\n    if (value.length < 8 || value.length > 100) {\r\n      return false;\r\n    }\r\n\r\n    for (var index = 0; index < value.length; index++) {\r\n      var code = value.charCodeAt(index);\r\n      var isDigit = (code >= 48) && (code <= 57);\r\n      var isLetter = ((code >= 65) && (code <= 90)) || ((code >= 97) && (code <= 122));\r\n      var isMinus = code === 45;\r\n\r\n      if (!(isDigit || isLetter) && !isMinus) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\n                                                                                  \r\n\r\nexport interface IError extends IInnerError {\r\n  modules?:IModule[]\r\n}\r\n\nexport interface IUserDescription {\r\n  email_address?:string;\r\n  description?:string;\r\n  data?:any;\r\n}\r\n\nexport class SubmissionResponse {\r\n  success:boolean = false;\r\n  badRequest:boolean = false;\r\n  serviceUnavailable:boolean = false;\r\n  paymentRequired:boolean = false;\r\n  unableToAuthenticate:boolean = false;\r\n  notFound:boolean = false;\r\n  requestEntityTooLarge:boolean = false;\r\n  statusCode:number;\r\n  message:string;\r\n\r\n  constructor(statusCode:number, message?:string) {\r\n    this.statusCode = statusCode;\r\n    this.message = message;\r\n\r\n    this.success = statusCode >= 200 && statusCode <= 299;\r\n    this.badRequest = statusCode === 400;\r\n    this.serviceUnavailable = statusCode === 503;\r\n    this.paymentRequired = statusCode === 402;\r\n    this.unableToAuthenticate = statusCode === 401 || statusCode === 403;\r\n    this.notFound = statusCode === 404;\r\n    this.requestEntityTooLarge = statusCode === 413;\r\n  }\r\n}\r\n\nr\n\r\nexport class ExceptionlessClient {\r\n  public config:Configuration;\r\n\r\n  constructor();\r\n  constructor(settings:IConfigurationSettings);\r\n  constructor(apiKey:string, serverUrl?:string);\r\n  constructor(settingsOrApiKey?:IConfigurationSettings|string, serverUrl?:string) {\r\n    if (typeof settingsOrApiKey !== 'object') {\r\n      this.config = new Configuration(settingsOrApiKey);\r\n    } else {\r\n      this.config = new Configuration({ apiKey: <string>settingsOrApiKey, serverUrl: serverUrl });\r\n    }\r\n  }\r\n\r\n  public createException(exception:Error): EventBuilder {\r\n    var pluginContextData = new ContextData();\r\n    pluginContextData.setException(exception);\r\n    return this.createEvent(pluginContextData).setType('error');\r\n  }\r\n\r\n  public submitException(exception:Error, callback?:(context:EventPluginContext) => void): void {\r\n    this.createException(exception).submit(callback);\r\n  }\r\n\r\n  public createUnhandledException(exception:Error, submissionMethod?:string): EventBuilder {\r\n    var builder = this.createException(exception);\r\n    builder.pluginContextData.markAsUnhandledError();\r\n    builder.pluginContextData.setSubmissionMethod(submissionMethod);\r\n\r\n    return builder;\r\n  }\r\n\r\n  public submitUnhandledException(exception:Error, submissionMethod?:string, callback?:(context:EventPluginContext) => void) {\r\n    this.createUnhandledException(exception, submissionMethod).submit(callback);\r\n  }\r\n\r\n  public createFeatureUsage(feature:string): EventBuilder {\r\n    return this.createEvent().setType('usage').setSource(feature);\r\n  }\r\n\r\n  public submitFeatureUsage(feature:string, callback?:(context:EventPluginContext) => void): void {\r\n    this.createFeatureUsage(feature).submit(callback);\r\n  }\r\n\r\n  public createLog(message:string): EventBuilder;\r\n  public createLog(source:string, message:string): EventBuilder;\r\n  public createLog(source:string, message:string, level:string): EventBuilder;\r\n  public createLog(sourceOrMessage:string, message?:string, level?:string): EventBuilder {\r\n    var builder = this.createEvent().setType('log');\r\n\r\n    if (sourceOrMessage && message && level) {\r\n      builder = builder.setSource(sourceOrMessage).setMessage(message).setProperty('@level', level);\r\n    } else if (sourceOrMessage && message) {\r\n      builder = builder.setSource(sourceOrMessage).setMessage(message);\r\n    } else {\r\n      // TODO: Look into using https://www.stevefenton.co.uk/Content/Blog/Date/201304/Blog/Obtaining-A-Class-Name-At-Runtime-In-TypeScript/\r\n      var source = (<any>(arguments.callee.caller)).name;\r\n      builder = builder.setSource(source).setMessage(sourceOrMessage);\r\n    }\r\n\r\n    return builder;\r\n  }\r\n\r\n  public submitLog(message:string): void;\r\n  public submitLog(source:string, message:string): void;\r\n  public submitLog(source:string, message:string, level:string, callback?:(context:EventPluginContext) => void): void;\r\n  public submitLog(sourceOrMessage:string, message?:string, level?:string, callback?:(context:EventPluginContext) => void): void {\r\n    this.createLog(sourceOrMessage, message, level).submit(callback);\r\n  }\r\n\r\n  public createNotFound(resource:string): EventBuilder {\r\n    return this.createEvent().setType('404').setSource(resource);\r\n  }\r\n\r\n  public submitNotFound(resource:string, callback?:(context:EventPluginContext) => void): void {\r\n    this.createNotFound(resource).submit(callback);\r\n  }\r\n\r\n  public createSessionStart(sessionId:string): EventBuilder {\r\n    return this.createEvent().setType('start').setSessionId(sessionId);\r\n  }\r\n\r\n  public submitSessionStart(sessionId:string, callback?:(context:EventPluginContext) => void): void {\r\n    this.createSessionStart(sessionId).submit(callback);\r\n  }\r\n\r\n  public createSessionEnd(sessionId:string): EventBuilder {\r\n    return this.createEvent().setType('end').setSessionId(sessionId);\r\n  }\r\n\r\n  public submitSessionEnd(sessionId:string, callback?:(context:EventPluginContext) => void): void {\r\n    this.createSessionEnd(sessionId).submit(callback);\r\n  }\r\n\r\n  public createEvent(pluginContextData?:ContextData): EventBuilder {\r\n    return new EventBuilder({ date: new Date() }, this, pluginContextData);\r\n  }\r\n\r\n  /**\r\n   * Submits the event to be sent to the server.\r\n   * @param event The event data.\r\n   * @param pluginContextData Any contextual data objects to be used by Exceptionless plugins to gather default information for inclusion in the report information.\r\n   * @param callback\r\n   */\r\n  public submitEvent(event:IEvent, pluginContextData?:ContextData, callback?:(context:EventPluginContext) => void): void {\r\n    function cancelled() {\r\n      if (!!context) {\r\n        context.cancelled = true;\r\n      }\r\n\r\n      return !!callback && callback(context);\r\n    }\r\n\r\n    if (!event) {\r\n      return cancelled();\r\n    }\r\n\r\n    if (!this.config.enabled) {\r\n      this.config.log.info('Event submission is currently disabled.');\r\n      return cancelled();\r\n    }\r\n\r\n    if (!event.data) {\r\n      event.data = {};\r\n    }\r\n\r\n    if (!event.tags || !event.tags.length) {\r\n      event.tags = [];\r\n    }\r\n\r\n    var context = new EventPluginContext(this, event, pluginContextData);\r\n    EventPluginManager.run(context, function (context:EventPluginContext) {\r\n      let ev = context.event;\r\n      if (!context.cancelled) {\r\n        // ensure all required data\r\n        if (!ev.type || ev.type.length === 0) {\r\n          ev.type = 'log';\r\n        }\r\n\r\n        if (!ev.date) {\r\n          ev.date = new Date();\r\n        }\r\n\r\n        var config = context.client.config;\r\n        config.queue.enqueue(ev);\r\n\r\n        if (ev.reference_id && ev.reference_id.length > 0) {\r\n          context.log.info(`Setting last reference id '${ev.reference_id}'`);\r\n          config.lastReferenceIdManager.setLast(ev.reference_id);\r\n        }\r\n      }\r\n\r\n      !!callback && callback(context);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Updates the user's email address and description of an event for the specified reference id.\r\n   * @param referenceId The reference id of the event to update.\r\n   * @param email The user's email address to set on the event.\r\n   * @param description The user's description of the event.\r\n   */\r\n  public updateUserEmailAndDescription(referenceId:string, email:string, description:string, callback?:(response:SubmissionResponse) => void) {\r\n    if (!referenceId || !email || !description || !this.config.enabled) {\r\n      return !!callback && callback(new SubmissionResponse(500, 'cancelled'));\r\n    }\r\n\r\n    var userDescription:IUserDescription = { email_address: email, description: description };\r\n    var response = this.config.submissionClient.postUserDescription(referenceId, userDescription, this.config, (response:SubmissionResponse) => {\r\n      if (!response.success) {\r\n        this.config.log.error(`Failed to submit user email and description for event '${referenceId}': ${response.statusCode} ${response.message}`)\r\n      }\r\n\r\n      !!callback && callback(response);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Gets the last event client id that was submitted to the server.\r\n   * @returns {string} The event client id.\r\n   */\r\n  public getLastReferenceId(): string {\r\n    return this.config.lastReferenceIdManager.getLast();\r\n  }\r\n\r\n  /**\r\n   * The default ExceptionlessClient instance.\r\n   * @type {ExceptionlessClient}\r\n   * @private\r\n   */\r\n  private static _instance:ExceptionlessClient = null;\r\n\r\n\r\n  /**\r\n   * The default ExceptionlessClient instance.\r\n   * @type {ExceptionlessClient}\r\n   */\r\n  public static get default() {\r\n    if(ExceptionlessClient._instance === null) {\r\n      ExceptionlessClient._instance = new ExceptionlessClient(null);\r\n    }\r\n\r\n    return ExceptionlessClient._instance;\r\n  }\r\n}\r\n\nexport interface IParameter {\r\n  data?:any;\r\n  generic_arguments?:string[];\r\n\r\n  name?:string;\r\n  type?:string;\r\n  type_namespace?:string;\r\n}\r\n\n                                          \r\n\r\nexport interface IMethod {\r\n  data?:any;\r\n  generic_arguments?:string[];\r\n  parameters?:IParameter[];\r\n\r\n  is_signature_target?:boolean;\r\n  declaring_namespace?:string;\r\n  declaring_type?:string;\r\n  name?:string;\r\n  module_id?:number;\r\n}\r\n\n                                    \n\nexport interface IStackFrame extends IMethod {\n  file_name?:string;\n  line_number?:number;\n  column?:number;\n}\n\n                                                                                  \r\n\r\nexport interface IInnerError {\r\n  message?:string;\r\n  type?:string;\r\n  code?:string;\r\n  data?:any;\r\n  inner?:IInnerError\r\n  stack_trace?:IStackFrame[];\r\n  target_method?:IMethod;\r\n}\r\n\nexport interface IModule {\r\n  data?:any;\r\n\r\n  module_id?:number;\r\n  name?:string;\r\n  version?:string;\r\n  is_entry?:boolean;\r\n  created_date?:Date;\r\n  modified_date?:Date;\r\n}\r\n\n                                                                                                            \r\n\r\nexport class ConfigurationDefaultsPlugin implements IEventPlugin {\r\n  public priority:number = 10;\r\n  public name:string = 'ConfigurationDefaultsPlugin';\r\n\r\n  public run(context:EventPluginContext, next?:() => void): void {\r\n    var defaultTags:string[] = context.client.config.defaultTags || [];\r\n    for (var index = 0; index < defaultTags.length; index++) {\r\n      var tag = defaultTags[index];\r\n      if (!!tag && context.event.tags.indexOf(tag) < 0) {\r\n        context.event.tags.push(tag)\r\n      }\r\n    }\r\n\r\n    var defaultData:Object = context.client.config.defaultData || {};\r\n    for (var key in defaultData) {\r\n      if (!!defaultData[key]) {\r\n        context.event.data[key] = defaultData[key];\r\n      }\r\n    }\r\n\r\n    next && next();\r\n  }\r\n}\r\n\n                                                                                                            \r\n\r\nexport class ErrorPlugin implements IEventPlugin {\r\n  public priority:number = 30;\r\n  public name:string = 'ErrorPlugin';\r\n\r\n  public run(context:EventPluginContext, next?:() => void): void {\r\n    const error:string = '@error'; // optimization for minifier.\r\n\r\n    var exception = context.contextData.getException();\r\n    if (!!exception) {\r\n      context.event.type = 'error';\r\n\r\n      if (!context.event.data[error]) {\r\n        var parser = context.client.config.errorParser;\r\n        if (!parser) {\r\n          throw new Error('No error parser was defined.');\r\n        }\r\n\r\n        var result = parser.parse(context, exception);\r\n        if (!!result) {\r\n          context.event.data[error] = result;\r\n        }\r\n      }\r\n    }\r\n\r\n    next && next();\r\n  }\r\n}\r\n\n                                                                                                                                                                                                   \r\n\r\nexport class ModuleInfoPlugin implements IEventPlugin {\r\n  public priority:number = 40;\r\n  public name:string = 'ModuleInfoPlugin';\r\n\r\n  public run(context:EventPluginContext, next?:() => void): void {\r\n    const error:string = '@error'; // optimization for minifier.\r\n\r\n    var collector = context.client.config.moduleCollector;\r\n    if (context.event.data[error] && !context.event.data['@error'].modules && !!collector) {\r\n      var modules = collector.getModules(context);\r\n      if (modules && modules.length > 0) {\r\n        context.event.data[error].modules = modules;\r\n      }\r\n    }\r\n\r\n    next && next();\r\n  }\r\n}\r\n\nexport interface IRequestInfo {\r\n  user_agent?:string;\r\n  http_method?:string;\r\n  is_secure?:boolean;\r\n  host?:string;\r\n  port?:number;\r\n  path?:string;\r\n  referrer?:string;\r\n  client_ip_address?:string;\r\n  cookies?:any;\r\n  post_data?:any;\r\n  query_string?:any;\r\n  data?:any\r\n}\r\n\n                                                                                                                                                                       \r\n\r\nexport class RequestInfoPlugin implements IEventPlugin {\r\n  public priority:number = 60;\r\n  public name:string = 'RequestInfoPlugin';\r\n\r\n  public run(context:EventPluginContext, next?:() => void): void {\r\n    const request:string = '@request'; // optimization for minifier.\r\n\r\n    var collector = context.client.config.requestInfoCollector;\r\n    if (!context.event.data[request] && !!collector) {\r\n      var requestInfo = collector.getRequestInfo(context);\r\n      if (!!requestInfo) {\r\n        context.event.data[request] = requestInfo;\r\n      }\r\n    }\r\n\r\n    next && next();\r\n  }\r\n}\r\n\n                                                                                                                                                                               \r\n\r\nexport class EnvironmentInfoPlugin implements IEventPlugin {\r\n  public priority:number = 70;\r\n  public name:string = 'EnvironmentInfoPlugin';\r\n\r\n  public run(context:EventPluginContext, next?:() => void): void {\r\n    const environment:string = '@environment'; // optimization for minifier.\r\n\r\n    var collector = context.client.config.environmentInfoCollector;\r\n    if (!context.event.data[environment] && collector) {\r\n      var environmentInfo = collector.getEnvironmentInfo(context);\r\n      if (!!environmentInfo) {\r\n        context.event.data[environment] = environmentInfo;\r\n      }\r\n    }\r\n\r\n    next && next();\r\n  }\r\n}\r\n\n                                                                                                            \r\n\r\nexport class SubmissionMethodPlugin implements IEventPlugin {\r\n  public priority:number = 100;\r\n  public name:string = 'SubmissionMethodPlugin';\r\n\r\n  public run(context:EventPluginContext, next?:() => void): void {\r\n    var submissionMethod:string = context.contextData.getSubmissionMethod();\r\n    if (!!submissionMethod) {\r\n      context.event.data['@submission_method'] = submissionMethod;\r\n    }\r\n\r\n    next && next();\r\n  }\r\n}\r\n\nexport interface IStorageItem<T> {\r\n  created:number;\r\n  path:string;\r\n  value:T;\r\n}\r\n\nexport class SettingsResponse {\r\n  success:boolean = false;\r\n  settings:any;\r\n  settingsVersion:number = -1;\r\n  message:string;\r\n  exception:any;\r\n\r\n  constructor(success:boolean, settings:any, settingsVersion:number = -1, exception:any = null, message:string = null) {\r\n    this.success = success;\r\n    this.settings = settings;\r\n    this.settingsVersion = settingsVersion;\r\n    this.exception = exception;\r\n    this.message = message;\r\n  }\r\n}\r\n\nexport interface IClientConfiguration {\n  settings:Object;\n  version:number;\n}\n\n                                                                                                                                                                                                                                                                   \n\nexport class DefaultErrorParser implements IErrorParser {\n  public parse(context:EventPluginContext, exception:Error): IError {\n    function getParameters(parameters:string|string[]): IParameter[] {\n      var params:string[] = (typeof parameters === 'string' ? [parameters] : parameters) || [];\n\n      var result:IParameter[] = [];\n      for (var index = 0; index < params.length; index++) {\n        result.push({ name: params[index] })\n      }\n\n      return result;\n    }\n\n    function getStackFrames(context:EventPluginContext, stackFrames:TraceKit.StackFrame[]): IStackFrame[] {\n      const anonymous:string = '<anonymous>';\n      var frames:IStackFrame[] = [];\n\n      for (var index = 0; index < stackFrames.length; index++) {\n        var frame = stackFrames[index];\n        frames.push({\n          name: (frame.func || anonymous).replace('?', anonymous),\n          parameters: getParameters(frame.args),\n          file_name: frame.url,\n          line_number: frame.line,\n          column: frame.column\n        });\n      }\n\n      return frames;\n    }\n\n    const traceKitStackTrace:string = '@@_TraceKit.StackTrace'; // optimization for minifier.\n\n    var stackTrace:TraceKit.StackTrace = !!context.contextData[traceKitStackTrace]\n      ? context.contextData[traceKitStackTrace]\n      : TraceKit.computeStackTrace(exception, 25);\n\n    if (!stackTrace) {\n      throw new Error('Unable to parse the exceptions stack trace.');\n    }\n\n    return {\n      type: stackTrace.name,\n      message: stackTrace.message || exception.message,\n      stack_trace: getStackFrames(context, stackTrace.stack || [])\n    };\n  }\n}\n\n                                                                                                                                                                                                          \r\n\r\nexport class DefaultModuleCollector implements IModuleCollector {\r\n  public getModules(context:EventPluginContext): IModule[] {\r\n    if (document && document.getElementsByTagName) {\r\n      return null;\r\n    }\r\n\r\n    var modules:IModule[] = [];\r\n    var scripts = document.getElementsByTagName('script');\r\n    if (scripts && scripts.length > 0) {\r\n      for (var index = 0; index < scripts.length; index++) {\r\n        if (scripts[index].src) {\r\n          modules.push({\r\n            module_id: index,\r\n            name: scripts[index].src,\r\n            version: Utils.parseVersion(scripts[index].src)\r\n          });\r\n        } else if (!!scripts[index].innerHTML) {\r\n          modules.push({\r\n            module_id: index,\r\n            name: 'Script Tag',\r\n            version: Utils.getHashCode(scripts[index].innerHTML)\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    return modules;\r\n  }\r\n}\r\n\n                                                                                                                                                                                                                              \r\n\r\nexport class DefaultRequestInfoCollector implements IRequestInfoCollector {\r\n  public getRequestInfo(context:EventPluginContext): IRequestInfo {\r\n    if (!document || !navigator || !location) {\r\n      return null;\r\n    }\r\n\r\n    var requestInfo:IRequestInfo = {\r\n      user_agent: navigator.userAgent,\r\n      is_secure: location.protocol === 'https:',\r\n      host: location.hostname,\r\n      port: location.port && location.port !== '' ? parseInt(location.port) : 80,\r\n      path: location.pathname,\r\n      //client_ip_address: 'TODO',\r\n      cookies: Utils.getCookies(document.cookie),\r\n      query_string: Utils.parseQueryString(location.search.substring(1))\r\n    };\r\n\r\n    if (document.referrer && document.referrer !== '') {\r\n      requestInfo.referrer = document.referrer;\r\n    }\r\n\r\n    return requestInfo;\r\n  }\r\n}\r\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         \r\n\r\ndeclare var XDomainRequest:{ new (); create(); };\r\n\r\nexport class DefaultSubmissionClient implements ISubmissionClient {\r\n  public configurationVersionHeader:string = 'X-Exceptionless-ConfigVersion';\r\n\r\n  public postEvents(events:IEvent[], config:Configuration, callback:(response:SubmissionResponse) => void):void {\r\n    return this.sendRequest(config, 'POST', '/api/v2/events', Utils.stringify(events, config.dataExclusions), (status:number, message:string, data?:string, headers?:Object) => {\r\n      var settingsVersion:number = headers && parseInt(headers[this.configurationVersionHeader]);\r\n      SettingsManager.checkVersion(settingsVersion, config);\r\n\r\n      callback(new SubmissionResponse(status, message));\r\n    });\r\n  }\r\n\r\n  public postUserDescription(referenceId:string, description:IUserDescription, config:Configuration, callback:(response:SubmissionResponse) => void):void {\r\n    var path = `/api/v2/events/by-ref/${encodeURIComponent(referenceId)}/user-description`;\r\n    return this.sendRequest(config, 'POST', path, Utils.stringify(description, config.dataExclusions), (status:number, message:string, data?:string, headers?:Object) => {\r\n      var settingsVersion:number = headers && parseInt(headers[this.configurationVersionHeader]);\r\n      SettingsManager.checkVersion(settingsVersion, config);\r\n\r\n      callback(new SubmissionResponse(status, message));\r\n    });\r\n  }\r\n\r\n  public getSettings(config:Configuration, callback:(response:SettingsResponse) => void):void {\r\n    return this.sendRequest(config, 'GET', '/api/v2/projects/config', null, (status:number, message:string, data?:string) => {\r\n      if (status !== 200) {\r\n        return callback(new SettingsResponse(false, null, -1, null, message));\r\n      }\r\n\r\n      var settings:IClientConfiguration;\r\n      try {\r\n        settings = JSON.parse(data);\r\n      } catch (e) {\r\n        config.log.error(`Unable to parse settings: '${data}'`);\r\n      }\r\n\r\n      if (!settings || !settings.settings || !settings.version) {\r\n        return callback(new SettingsResponse(false, null, -1, null, 'Invalid configuration settings.'));\r\n      }\r\n\r\n      callback(new SettingsResponse(true, settings.settings, settings.version));\r\n    });\r\n  }\r\n\r\n  public sendRequest(config:Configuration, method:string, path:string, data:string, callback: (status:number, message:string, data?:string, headers?:Object) => void): void {\r\n    var isCompleted = false;\r\n    function complete(xhr:XMLHttpRequest) {\r\n      function parseResponseHeaders(headerStr) {\r\n        var headers = {};\r\n        var headerPairs = (headerStr || '').split('\\u000d\\u000a');\r\n        for (var index:number = 0; index < headerPairs.length; index++) {\r\n          var headerPair = headerPairs[index];\r\n          // Can't use split() here because it does the wrong thing\r\n          // if the header value has the string \": \" in it.\r\n          var separator = headerPair.indexOf('\\u003a\\u0020');\r\n          if (separator > 0) {\r\n            headers[headerPair.substring(0, separator)] = headerPair.substring(separator + 2);\r\n          }\r\n        }\r\n\r\n        return headers;\r\n      }\r\n\r\n      if (isCompleted) {\r\n        return;\r\n      } else {\r\n        isCompleted = true;\r\n      }\r\n\r\n      var message:string;\r\n      if (xhr.status === 0) {\r\n        message = 'Unable to connect to server.';\r\n      } else if (xhr.status < 200 || xhr.status > 299) {\r\n        if (!!xhr.responseBody && !!xhr.responseBody.message) {\r\n          message = xhr.responseBody.message;\r\n        } else if (!!xhr.responseText && xhr.responseText.indexOf('message') !== -1) {\r\n          try {\r\n            message =  JSON.parse(xhr.responseText).message;\r\n          } catch (e) {\r\n            message = xhr.responseText;\r\n          }\r\n        } else {\r\n          message = xhr.statusText;\r\n        }\r\n      }\r\n\r\n      callback(xhr.status || 500, message, xhr.responseText, parseResponseHeaders(xhr.getAllResponseHeaders()));\r\n    }\r\n\r\n    function createRequest(config:Configuration, method:string, url:string): XMLHttpRequest {\r\n      var xhr:any = new XMLHttpRequest();\r\n      if ('withCredentials' in xhr) {\r\n        xhr.open(method, url, true);\r\n      } else if (typeof XDomainRequest != 'undefined') {\r\n        xhr = new XDomainRequest();\r\n        xhr.open(method, url);\r\n      } else {\r\n        xhr = null;\r\n      }\r\n\r\n      if (xhr) {\r\n        xhr.setRequestHeader('X-Exceptionless-Client', config.userAgent);\r\n        if (method === 'POST' && xhr.setRequestHeader) {\r\n          xhr.setRequestHeader('Content-Type', 'application/json');\r\n        }\r\n\r\n        xhr.timeout = 10000;\r\n      }\r\n\r\n      return xhr;\r\n    }\r\n\r\n    var url = `${config.serverUrl}${path}?access_token=${encodeURIComponent(config.apiKey)}`;\r\n    var xhr = createRequest(config, method || 'POST', url);\r\n    if (!xhr) {\r\n      return callback(503,'CORS not supported.');\r\n    }\r\n\r\n    if ('withCredentials' in xhr) {\r\n      xhr.onreadystatechange = () => {\r\n        // xhr not ready.\r\n        if (xhr.readyState !== 4) {\r\n          return;\r\n        }\r\n\r\n        complete(xhr);\r\n      };\r\n    }\r\n\r\n    xhr.ontimeout = () => complete(xhr);\r\n    xhr.onerror = () => complete(xhr);\r\n    xhr.onload = () => complete(xhr);\r\n\r\n    xhr.send(data);\r\n  }\r\n}\r\n\nn\nfunction getDefaultsSettingsFromScriptTag(): IConfigurationSettings {\n  if (!document || !document.getElementsByTagName) {\n    return null;\n  }\n\n  var scripts = document.getElementsByTagName('script');\n  for (var index = 0; index < scripts.length; index++) {\n    if (scripts[index].src && scripts[index].src.indexOf('/exceptionless') > -1) {\n      return Utils.parseQueryString(scripts[index].src.split('?').pop());\n    }\n  }\n  return null;\n}\n\nfunction processUnhandledException(stackTrace:TraceKit.StackTrace, options?:any): void {\n  var builder = ExceptionlessClient.default.createUnhandledException(new Error(stackTrace.message || (options || {}).status || 'Script error'), 'onerror');\n  builder.pluginContextData['@@_TraceKit.StackTrace'] = stackTrace;\n  builder.submit();\n}\n\nfunction processJQueryAjaxError(event, xhr, settings, error:Error): void {\n  var client = ExceptionlessClient.default;\n  if (xhr.status === 404) {\n    client.submitNotFound(settings.url);\n  } else if (xhr.status !== 401) {\n    client.createUnhandledException(error, 'JQuery.ajaxError')\n      .setSource(settings.url)\n      .setProperty('status', xhr.status)\n      .setProperty('request', settings.data)\n      .setProperty('response', xhr.responseText && xhr.responseText.slice && xhr.responseText.slice(0, 1024))\n      .submit();\n  }\n}\n\nvar defaults = Configuration.defaults;\nvar settings = getDefaultsSettingsFromScriptTag();\nif (settings && (settings.apiKey || settings.serverUrl)) {\n  defaults.apiKey = settings.apiKey;\n  defaults.serverUrl = settings.serverUrl;\n}\n\ndefaults.errorParser = new DefaultErrorParser();\ndefaults.moduleCollector = new DefaultModuleCollector();\ndefaults.requestInfoCollector = new DefaultRequestInfoCollector();\ndefaults.submissionClient = new DefaultSubmissionClient();\n\nTraceKit.report.subscribe(processUnhandledException);\nTraceKit.extendToAsynchronousCallbacks();\n\nif (typeof $ !== 'undefined' && $(document)) {\n  $(document).ajaxError(processJQueryAjaxError);\n}\n\n(<any>Error).stackTraceLimit = Infinity;\ndeclare var $;\n\n",null],"sourceRoot":"/source/"}