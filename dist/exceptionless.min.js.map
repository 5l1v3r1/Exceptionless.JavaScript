{"version":3,"sources":["tracekit.js","/source/exceptionless.ts","exceptionless.min.js"],"names":["window","undefined","_has","object","key","Object","prototype","hasOwnProperty","call","_isUndefined","what","TraceKit","_oldTraceKit","_slice","slice","UNKNOWN_FUNCTION","noConflict","wrap","func","wrapped","apply","this","arguments","e","report","subscribe","handler","installGlobalHandler","handlers","push","unsubscribe","i","length","splice","notifyHandlers","stack","windowError","exception","collectWindowErrors","concat","inner","traceKitWindowOnError","message","url","lineNo","columnNo","errorObj","computeStackTrace","lastExceptionStack","augmentStackTraceWithInitialElement","lastException","location","line","column","guessFunctionName","context","gatherContext","mode","document","href","useragent","navigator","userAgent","_oldOnerrorHandler","_onErrorHandlerInstalled","onerror","ex","args","s","setTimeout","incomplete","loadSource","remoteFetching","getXHR","XMLHttpRequest","ActiveXObject","request","open","send","responseText","getSource","sourceCache","source","indexOf","domain","split","m","reFunctionArgNames","reGuessFunction","maxLines","exec","linesBefore","Math","floor","linesOfContext","linesAfter","start","max","end","min","escapeRegExp","text","replace","escapeCodeAsRegExpForMatchingInsideHTML","body","findSourceInUrls","re","urls","j","join","substring","index","lastIndexOf","findSourceInLine","fragment","RegExp","findSourceByFunctionBody","parts","result","scripts","getElementsByTagName","code","codeRE","eventRE","script","src","name","event","computeStackTraceFromStackProp","element","chrome","gecko","winjs","lines","reference","columnNumber","computeStackTraceFromStacktraceProp","stacktrace","testRE","exc","computeStackTraceFromOperaMultiLineMessage","len","lineRE1","lineRE2","lineRE3","inlineScriptBlocks","item","relativeLine","pos","innerText","midline","stackInfo","initial","unshift","partial","computeStackTraceByWalkingCallerChain","depth","functionName","funcs","recursion","curr","caller","toString","input","description","sourceURL","fileName","lineNumber","debug","computeStackTraceOfCaller","Error","ofCaller","extendToAsynchronousCallbacks","_helper","fnName","originalFn","originalCallback","root","factory","define","amd","exports","module","require","Exceptionless","__extends","d","b","__","constructor","p","ContextData","setException","defineProperty","get","enumerable","configurable","getException","hasException","markAsUnhandledError","setSubmissionMethod","method","getSubmissionMethod","InMemoryLastReferenceIdManager","_lastReferenceId","getLast","clearLast","setLast","eventId","ConsoleLog","info","log","warn","error","level","console","NullLog","EventPluginContext","client","contextData","config","EventPluginManager","run","callback","plugin","next","cancelled","plugins","priority","wrappedPlugins","addDefaultPlugins","addPlugin","ConfigurationDefaultsPlugin","ErrorPlugin","DuplicateCheckerPlugin","ModuleInfoPlugin","RequestInfoPlugin","EnvironmentInfoPlugin","SubmissionMethodPlugin","ReferenceIdPlugin","reference_id","type","Utils","guid","DefaultEventQueue","_processingQueue","_config","enqueue","ensureQueueTimer","areQueuedItemsDiscarded","queuePath","Date","toJSON","randomNumber","storage","save","process","_this","enabled","apiKey","events","submissionBatchSize","serverUrl","submissionClient","submit","response","processSubmissionResponse","suspendProcessing","success","serviceUnavailable","requeueEvents","paymentRequired","unableToAuthenticate","notFound","badRequest","requestEntityTooLarge","round","_queueTimer","setInterval","onProcessQueue","isQueueProcessingSuspended","durationInMinutes","discardFutureQueuedItems","clearQueue","_suspendProcessingUntil","getTime","_discardQueuedItemsUntil","clear","Exception","InMemoryStorage","_items","path","value","searchPattern","limit","results","regex","test","count","getHashCode","hash","character","charCodeAt","getCookies","cookies","separator","cookie","s4","random","merge","defaultValues","values","parseVersion","versionRegex","matches","parseQueryString","query","pairs","pair","decodeURIComponent","stringify","data","stringifyImpl","cache","JSON","parse","Configuration","settings","inject","fn","_enabled","_serverUrl","_plugins","lastReferenceIdManager","defaultTags","defaultData","defaults","environmentInfoCollector","errorParser","moduleCollector","requestInfoCollector","queue","_apiKey","set","sort","p1","p2","pluginOrName","pluginAction","pluginExists","removePlugin","setVersion","version","setUserIdentity","userInfoOrIdentity","userInfo","identity","shouldRemove","useReferenceIds","useDebugLogger","_defaultSettings","EventBuilder","pluginContextData","target","setType","setSource","setSessionId","sessionId","isValidIdentifier","session_id","setReferenceId","referenceId","setMessage","setGeo","latitude","longitude","geo","setProperty","setValue","addTags","tags","_i","markAsCritical","critical","addRequestInfo","submitEvent","isDigit","isLetter","isMinus","ExceptionlessClient","settingsOrApiKey","createException","createEvent","submitException","createUnhandledException","submissionMethod","builder","submitUnhandledException","createFeatureUsage","feature","submitFeatureUsage","createLog","sourceOrMessage","callee","submitLog","createNotFound","resource","submitNotFound","createSessionStart","submitSessionStart","createSessionEnd","submitSessionEnd","date","getLastReferenceId","_instance","tag","parser","modules","getModules","ri","getRequestInfo","ei","getEnvironmentInfo","SettingsResponse","settingsVersion","SubmissionResponse","statusCode","os","NodeEnvironmentInfoCollector","environmentInfo","processor_count","cpus","total_physical_memory","totalmem","available_physical_memory","freemem","command_line","argv","process_name","title","process_id","pid","process_memory_size","memoryUsage","heapTotal","architecture","arch","o_s_name","o_s_version","release","ip_address","getIpAddresses","machine_name","hostname","runtime_version","loadavg","platform","tmpdir","uptime","endianness","ips","interfaces","networkInterfaces","keys","forEach","iface","family","internal","address","nodestacktrace","NodeErrorParser","stackFrames","stack_trace","getStackFrames","frames","frame","getMethodName","getFunctionName","file_name","getFileName","line_number","getLineNumber","getColumnNumber","declaring_type","getTypeName","is_native","isNative","filename","NodeRequestInfoCollector","client_ip_address","ip","user_agent","headers","is_secure","secure","http_method","host","post_data","query_string","params","SubmissionClientBase","sendRequest","status","submitDescription","encodeURIComponent","getSettings","https","NodeSubmissionClient","_super","complete","statusMessage","parsedHost","options","auth","port","parseInt","Content-Type","Content-Length","on","chunk","write","NodeBootstrapper","register","global","configDefaults","getExitCodeReason","WebErrorParser","stackTrace","parameters","getParameters","WebModuleCollector","module_id","innerHTML","WebRequestInfoCollector","requestInfo","protocol","pathname","search","referrer","DefaultSubmissionClient","createRequest","xhr","XDomainRequest","setRequestHeader","timeout","isCompleted","responseBody","statusText","onreadystatechange","readyState","ontimeout","onload","WindowBootstrapper","getDefaultsSettingsFromScriptTag","processUnhandledException","$","ajaxError","processJQueryAjaxError","pop","stackTraceLimit","Infinity"],"mappings":"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","file":"exceptionless.min.js","sourcesContent":["/*\r\n TraceKit - Cross brower stack traces - github.com/occ/TraceKit\r\n MIT license\r\n*/\r\n\r\n(function(window, undefined) {\r\n\r\n\r\nvar TraceKit = {};\r\nvar _oldTraceKit = window.TraceKit;\r\n\r\n// global reference to slice\r\nvar _slice = [].slice;\r\nvar UNKNOWN_FUNCTION = '?';\r\n\r\n\r\n/**\r\n * _has, a better form of hasOwnProperty\r\n * Example: _has(MainHostObject, property) === true/false\r\n *\r\n * @param {Object} host object to check property\r\n * @param {string} key to check\r\n */\r\nfunction _has(object, key) {\r\n    return Object.prototype.hasOwnProperty.call(object, key);\r\n}\r\n\r\nfunction _isUndefined(what) {\r\n    return typeof what === 'undefined';\r\n}\r\n\r\n/**\r\n * TraceKit.noConflict: Export TraceKit out to another variable\r\n * Example: var TK = TraceKit.noConflict()\r\n */\r\nTraceKit.noConflict = function noConflict() {\r\n    window.TraceKit = _oldTraceKit;\r\n    return TraceKit;\r\n};\r\n\r\n/**\r\n * TraceKit.wrap: Wrap any function in a TraceKit reporter\r\n * Example: func = TraceKit.wrap(func);\r\n *\r\n * @param {Function} func Function to be wrapped\r\n * @return {Function} The wrapped func\r\n */\r\nTraceKit.wrap = function traceKitWrapper(func) {\r\n    function wrapped() {\r\n        try {\r\n            return func.apply(this, arguments);\r\n        } catch (e) {\r\n            TraceKit.report(e);\r\n            throw e;\r\n        }\r\n    }\r\n    return wrapped;\r\n};\r\n\r\n/**\r\n * TraceKit.report: cross-browser processing of unhandled exceptions\r\n *\r\n * Syntax:\r\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\r\n *   TraceKit.report.unsubscribe(function(stackInfo) { ... })\r\n *   TraceKit.report(exception)\r\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\r\n *\r\n * Supports:\r\n *   - Firefox: full stack trace with line numbers, plus column number\r\n *              on top frame; column number is not guaranteed\r\n *   - Opera:   full stack trace with line and column numbers\r\n *   - Chrome:  full stack trace with line and column numbers\r\n *   - Safari:  line and column number for the top frame only; some frames\r\n *              may be missing, and column number is not guaranteed\r\n *   - IE:      line and column number for the top frame only; some frames\r\n *              may be missing, and column number is not guaranteed\r\n *\r\n * In theory, TraceKit should work on all of the following versions:\r\n *   - IE5.5+ (only 8.0 tested)\r\n *   - Firefox 0.9+ (only 3.5+ tested)\r\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\r\n *     Exceptions Have Stacktrace to be enabled in opera:config)\r\n *   - Safari 3+ (only 4+ tested)\r\n *   - Chrome 1+ (only 5+ tested)\r\n *   - Konqueror 3.5+ (untested)\r\n *\r\n * Requires TraceKit.computeStackTrace.\r\n *\r\n * Tries to catch all unhandled exceptions and report them to the\r\n * subscribed handlers. Please note that TraceKit.report will rethrow the\r\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\r\n * If the exception does not reach the top of the browser, you will only\r\n * get a stack trace from the point where TraceKit.report was called.\r\n *\r\n * Handlers receive a stackInfo object as described in the\r\n * TraceKit.computeStackTrace docs.\r\n */\r\nTraceKit.report = (function reportModuleWrapper() {\r\n    var handlers = [],\r\n        lastException = null,\r\n        lastExceptionStack = null;\r\n\r\n    /**\r\n     * Add a crash handler.\r\n     * @param {Function} handler\r\n     */\r\n    function subscribe(handler) {\r\n        installGlobalHandler();\r\n        handlers.push(handler);\r\n    }\r\n\r\n    /**\r\n     * Remove a crash handler.\r\n     * @param {Function} handler\r\n     */\r\n    function unsubscribe(handler) {\r\n        for (var i = handlers.length - 1; i >= 0; --i) {\r\n            if (handlers[i] === handler) {\r\n                handlers.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Dispatch stack information to all handlers.\r\n     * @param {Object.<string, *>} stack\r\n     */\r\n    function notifyHandlers(stack, windowError) {\r\n        var exception = null;\r\n        if (windowError && !TraceKit.collectWindowErrors) {\r\n          return;\r\n        }\r\n        for (var i in handlers) {\r\n            if (_has(handlers, i)) {\r\n                try {\r\n                    handlers[i].apply(null, [stack].concat(_slice.call(arguments, 2)));\r\n                } catch (inner) {\r\n                    exception = inner;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (exception) {\r\n            throw exception;\r\n        }\r\n    }\r\n\r\n    var _oldOnerrorHandler, _onErrorHandlerInstalled;\r\n\r\n    /**\r\n     * Ensures all global unhandled exceptions are recorded.\r\n     * Supported by Gecko and IE.\r\n     * @param {string} message Error message.\r\n     * @param {string} url URL of script that generated the exception.\r\n     * @param {(number|string)} lineNo The line number at which the error\r\n     * occurred.\r\n     */\r\n    function traceKitWindowOnError(message, url, lineNo, columnNo, errorObj) {\r\n        var stack = null;\r\n\r\n        if (errorObj) {\r\n          stack = TraceKit.computeStackTrace(errorObj);\r\n        }\r\n        else\r\n        {\r\n            if (lastExceptionStack) {\r\n                TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);\r\n                stack = lastExceptionStack;\r\n                lastExceptionStack = null;\r\n                lastException = null;\r\n            } else {\r\n                var location = {\r\n                    'url': url,\r\n                    'line': lineNo,\r\n                    'column': columnNo\r\n                };\r\n                location.func = TraceKit.computeStackTrace.guessFunctionName(location.url, location.line);\r\n                location.context = TraceKit.computeStackTrace.gatherContext(location.url, location.line);\r\n                stack = {\r\n                    'mode': 'onerror',\r\n                    'message': message,\r\n                    'url': document.location.href,\r\n                    'stack': [location],\r\n                    'useragent': navigator.userAgent\r\n                };\r\n            }\r\n        }\r\n\r\n        notifyHandlers(stack, 'from window.onerror');\r\n\r\n        if (_oldOnerrorHandler) {\r\n            return _oldOnerrorHandler.apply(this, arguments);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function installGlobalHandler ()\r\n    {\r\n        if (_onErrorHandlerInstalled === true) {\r\n           return;\r\n        }\r\n        _oldOnerrorHandler = window.onerror;\r\n        window.onerror = traceKitWindowOnError;\r\n        _onErrorHandlerInstalled = true;\r\n    }\r\n\r\n    /**\r\n     * Reports an unhandled Error to TraceKit.\r\n     * @param {Error} ex\r\n     */\r\n    function report(ex) {\r\n        var args = _slice.call(arguments, 1);\r\n        if (lastExceptionStack) {\r\n            if (lastException === ex) {\r\n                return; // already caught by an inner catch block, ignore\r\n            } else {\r\n                var s = lastExceptionStack;\r\n                lastExceptionStack = null;\r\n                lastException = null;\r\n                notifyHandlers.apply(null, [s, null].concat(args));\r\n            }\r\n        }\r\n\r\n        var stack = TraceKit.computeStackTrace(ex);\r\n        lastExceptionStack = stack;\r\n        lastException = ex;\r\n\r\n        // If the stack trace is incomplete, wait for 2 seconds for\r\n        // slow slow IE to see if onerror occurs or not before reporting\r\n        // this exception; otherwise, we will end up with an incomplete\r\n        // stack trace\r\n        window.setTimeout(function () {\r\n            if (lastException === ex) {\r\n                lastExceptionStack = null;\r\n                lastException = null;\r\n                notifyHandlers.apply(null, [stack, null].concat(args));\r\n            }\r\n        }, (stack.incomplete ? 2000 : 0));\r\n\r\n        throw ex; // re-throw to propagate to the top level (and cause window.onerror)\r\n    }\r\n\r\n    report.subscribe = subscribe;\r\n    report.unsubscribe = unsubscribe;\r\n    return report;\r\n}());\r\n\r\n/**\r\n * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript\r\n *\r\n * Syntax:\r\n *   s = TraceKit.computeStackTrace.ofCaller([depth])\r\n *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)\r\n * Returns:\r\n *   s.name              - exception name\r\n *   s.message           - exception message\r\n *   s.stack[i].url      - JavaScript or HTML file URL\r\n *   s.stack[i].func     - function name, or empty for anonymous functions (if guessing did not work)\r\n *   s.stack[i].args     - arguments passed to the function, if known\r\n *   s.stack[i].line     - line number, if known\r\n *   s.stack[i].column   - column number, if known\r\n *   s.stack[i].context  - an array of source code lines; the middle element corresponds to the correct line#\r\n *   s.mode              - 'stack', 'stacktrace', 'multiline', 'callers', 'onerror', or 'failed' -- method used to collect the stack trace\r\n *\r\n * Supports:\r\n *   - Firefox:  full stack trace with line numbers and unreliable column\r\n *               number on top frame\r\n *   - Opera 10: full stack trace with line and column numbers\r\n *   - Opera 9-: full stack trace with line numbers\r\n *   - Chrome:   full stack trace with line and column numbers\r\n *   - Safari:   line and column number for the topmost stacktrace element\r\n *               only\r\n *   - IE:       no line numbers whatsoever\r\n *\r\n * Tries to guess names of anonymous functions by looking for assignments\r\n * in the source code. In IE and Safari, we have to guess source file names\r\n * by searching for function bodies inside all page scripts. This will not\r\n * work for scripts that are loaded cross-domain.\r\n * Here be dragons: some function names may be guessed incorrectly, and\r\n * duplicate functions may be mismatched.\r\n *\r\n * TraceKit.computeStackTrace should only be used for tracing purposes.\r\n * Logging of unhandled exceptions should be done with TraceKit.report,\r\n * which builds on top of TraceKit.computeStackTrace and provides better\r\n * IE support by utilizing the window.onerror event to retrieve information\r\n * about the top of the stack.\r\n *\r\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\r\n * so computeStackTrace instead walks its *own* chain of callers.\r\n * This means that:\r\n *  * in Safari, some methods may be missing from the stack trace;\r\n *  * in IE, the topmost function in the stack trace will always be the\r\n *    caller of computeStackTrace.\r\n *\r\n * This is okay for tracing (because you are likely to be calling\r\n * computeStackTrace from the function you want to be the topmost element\r\n * of the stack trace anyway), but not okay for logging unhandled\r\n * exceptions (because your catch block will likely be far away from the\r\n * inner function that actually caused the exception).\r\n *\r\n * Tracing example:\r\n *     function trace(message) {\r\n *         var stackInfo = TraceKit.computeStackTrace.ofCaller();\r\n *         var data = message + \"\\n\";\r\n *         for(var i in stackInfo.stack) {\r\n *             var item = stackInfo.stack[i];\r\n *             data += (item.func || '[anonymous]') + \"() in \" + item.url + \":\" + (item.line || '0') + \"\\n\";\r\n *         }\r\n *         if (window.console)\r\n *             console.info(data);\r\n *         else\r\n *             alert(data);\r\n *     }\r\n */\r\nTraceKit.computeStackTrace = (function computeStackTraceWrapper() {\r\n    var debug = false,\r\n        sourceCache = {};\r\n\r\n    /**\r\n     * Attempts to retrieve source code via XMLHttpRequest, which is used\r\n     * to look up anonymous function names.\r\n     * @param {string} url URL of source code.\r\n     * @return {string} Source contents.\r\n     */\r\n    function loadSource(url) {\r\n        if (typeof url !== 'string') {\r\n          return [];\r\n        }\r\n        \r\n        if (!TraceKit.remoteFetching) { //Only attempt request if remoteFetching is on.\r\n            return '';\r\n        }\r\n        try {\r\n            var getXHR = function() {\r\n                try {\r\n                    return new window.XMLHttpRequest();\r\n                } catch (e) {\r\n                    // explicitly bubble up the exception if not found\r\n                    return new window.ActiveXObject('Microsoft.XMLHTTP');\r\n                }\r\n            };\r\n\r\n            var request = getXHR();\r\n            request.open('GET', url, false);\r\n            request.send('');\r\n            return request.responseText;\r\n        } catch (e) {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieves source code from the source code cache.\r\n     * @param {string} url URL of source code.\r\n     * @return {Array.<string>} Source contents.\r\n     */\r\n    function getSource(url) {\r\n        if (!_has(sourceCache, url)) {\r\n            // URL needs to be able to fetched within the acceptable domain.  Otherwise,\r\n            // cross-domain errors will be triggered.\r\n            var source = '';\r\n\r\n            url = url || \"\";\r\n\r\n            if (url.indexOf && url.indexOf(document.domain) !== -1) {\r\n                source = loadSource(url);\r\n            }\r\n            sourceCache[url] = source ? source.split('\\n') : [];\r\n        }\r\n\r\n        return sourceCache[url];\r\n    }\r\n\r\n    /**\r\n     * Tries to use an externally loaded copy of source code to determine\r\n     * the name of a function by looking at the name of the variable it was\r\n     * assigned to, if any.\r\n     * @param {string} url URL of source code.\r\n     * @param {(string|number)} lineNo Line number in source code.\r\n     * @return {string} The function name, if discoverable.\r\n     */\r\n    function guessFunctionName(url, lineNo) {\r\n        var reFunctionArgNames = /function ([^(]*)\\(([^)]*)\\)/,\r\n            reGuessFunction = /['\"]?([0-9A-Za-z$_]+)['\"]?\\s*[:=]\\s*(function|eval|new Function)/,\r\n            line = '',\r\n            maxLines = 10,\r\n            source = getSource(url),\r\n            m;\r\n\r\n        if (!source.length) {\r\n            return UNKNOWN_FUNCTION;\r\n        }\r\n\r\n        // Walk backwards from the first line in the function until we find the line which\r\n        // matches the pattern above, which is the function definition\r\n        for (var i = 0; i < maxLines; ++i) {\r\n            line = source[lineNo - i] + line;\r\n\r\n            if (!_isUndefined(line)) {\r\n                if ((m = reGuessFunction.exec(line))) {\r\n                    return m[1];\r\n                } else if ((m = reFunctionArgNames.exec(line))) {\r\n                    return m[1];\r\n                }\r\n            }\r\n        }\r\n\r\n        return UNKNOWN_FUNCTION;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the surrounding lines from where an exception occurred.\r\n     * @param {string} url URL of source code.\r\n     * @param {(string|number)} line Line number in source code to centre\r\n     * around for context.\r\n     * @return {?Array.<string>} Lines of source code.\r\n     */\r\n    function gatherContext(url, line) {\r\n        var source = getSource(url);\r\n\r\n        if (!source.length) {\r\n            return null;\r\n        }\r\n\r\n        var context = [],\r\n            // linesBefore & linesAfter are inclusive with the offending line.\r\n            // if linesOfContext is even, there will be one extra line\r\n            //   *before* the offending line.\r\n            linesBefore = Math.floor(TraceKit.linesOfContext / 2),\r\n            // Add one extra line if linesOfContext is odd\r\n            linesAfter = linesBefore + (TraceKit.linesOfContext % 2),\r\n            start = Math.max(0, line - linesBefore - 1),\r\n            end = Math.min(source.length, line + linesAfter - 1);\r\n\r\n        line -= 1; // convert to 0-based index\r\n\r\n        for (var i = start; i < end; ++i) {\r\n            if (!_isUndefined(source[i])) {\r\n                context.push(source[i]);\r\n            }\r\n        }\r\n\r\n        return context.length > 0 ? context : null;\r\n    }\r\n\r\n    /**\r\n     * Escapes special characters, except for whitespace, in a string to be\r\n     * used inside a regular expression as a string literal.\r\n     * @param {string} text The string.\r\n     * @return {string} The escaped string literal.\r\n     */\r\n    function escapeRegExp(text) {\r\n        return text.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#]/g, '\\\\$&');\r\n    }\r\n\r\n    /**\r\n     * Escapes special characters in a string to be used inside a regular\r\n     * expression as a string literal. Also ensures that HTML entities will\r\n     * be matched the same as their literal friends.\r\n     * @param {string} body The string.\r\n     * @return {string} The escaped string.\r\n     */\r\n    function escapeCodeAsRegExpForMatchingInsideHTML(body) {\r\n        return escapeRegExp(body).replace('<', '(?:<|&lt;)').replace('>', '(?:>|&gt;)').replace('&', '(?:&|&amp;)').replace('\"', '(?:\"|&quot;)').replace(/\\s+/g, '\\\\s+');\r\n    }\r\n\r\n    /**\r\n     * Determines where a code fragment occurs in the source code.\r\n     * @param {RegExp} re The function definition.\r\n     * @param {Array.<string>} urls A list of URLs to search.\r\n     * @return {?Object.<string, (string|number)>} An object containing\r\n     * the url, line, and column number of the defined function.\r\n     */\r\n    function findSourceInUrls(re, urls) {\r\n        var source, m;\r\n        for (var i = 0, j = urls.length; i < j; ++i) {\r\n            // console.log('searching', urls[i]);\r\n            if ((source = getSource(urls[i])).length) {\r\n                source = source.join('\\n');\r\n                if ((m = re.exec(source))) {\r\n                    // console.log('Found function in ' + urls[i]);\r\n\r\n                    return {\r\n                        'url': urls[i],\r\n                        'line': source.substring(0, m.index).split('\\n').length,\r\n                        'column': m.index - source.lastIndexOf('\\n', m.index) - 1\r\n                    };\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log('no match');\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Determines at which column a code fragment occurs on a line of the\r\n     * source code.\r\n     * @param {string} fragment The code fragment.\r\n     * @param {string} url The URL to search.\r\n     * @param {(string|number)} line The line number to examine.\r\n     * @return {?number} The column number.\r\n     */\r\n    function findSourceInLine(fragment, url, line) {\r\n        var source = getSource(url),\r\n            re = new RegExp('\\\\b' + escapeRegExp(fragment) + '\\\\b'),\r\n            m;\r\n\r\n        line -= 1;\r\n\r\n        if (source && source.length > line && (m = re.exec(source[line]))) {\r\n            return m.index;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Determines where a function was defined within the source code.\r\n     * @param {(Function|string)} func A function reference or serialized\r\n     * function definition.\r\n     * @return {?Object.<string, (string|number)>} An object containing\r\n     * the url, line, and column number of the defined function.\r\n     */\r\n    function findSourceByFunctionBody(func) {\r\n        var urls = [window.location.href],\r\n            scripts = document.getElementsByTagName('script'),\r\n            body,\r\n            code = '' + func,\r\n            codeRE = /^function(?:\\s+([\\w$]+))?\\s*\\(([\\w\\s,]*)\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/,\r\n            eventRE = /^function on([\\w$]+)\\s*\\(event\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/,\r\n            re,\r\n            parts,\r\n            result;\r\n\r\n        for (var i = 0; i < scripts.length; ++i) {\r\n            var script = scripts[i];\r\n            if (script.src) {\r\n                urls.push(script.src);\r\n            }\r\n        }\r\n\r\n        if (!(parts = codeRE.exec(code))) {\r\n            re = new RegExp(escapeRegExp(code).replace(/\\s+/g, '\\\\s+'));\r\n        }\r\n\r\n        // not sure if this is really necessary, but I don’t have a test\r\n        // corpus large enough to confirm that and it was in the original.\r\n        else {\r\n            var name = parts[1] ? '\\\\s+' + parts[1] : '',\r\n                args = parts[2].split(',').join('\\\\s*,\\\\s*');\r\n\r\n            body = escapeRegExp(parts[3]).replace(/;$/, ';?'); // semicolon is inserted if the function ends with a comment.replace(/\\s+/g, '\\\\s+');\r\n            re = new RegExp('function' + name + '\\\\s*\\\\(\\\\s*' + args + '\\\\s*\\\\)\\\\s*{\\\\s*' + body + '\\\\s*}');\r\n        }\r\n\r\n        // look for a normal function definition\r\n        if ((result = findSourceInUrls(re, urls))) {\r\n            return result;\r\n        }\r\n\r\n        // look for an old-school event handler function\r\n        if ((parts = eventRE.exec(code))) {\r\n            var event = parts[1];\r\n            body = escapeCodeAsRegExpForMatchingInsideHTML(parts[2]);\r\n\r\n            // look for a function defined in HTML as an onXXX handler\r\n            re = new RegExp('on' + event + '=[\\\\\\'\"]\\\\s*' + body + '\\\\s*[\\\\\\'\"]', 'i');\r\n\r\n            if ((result = findSourceInUrls(re, urls[0]))) {\r\n                return result;\r\n            }\r\n\r\n            // look for ???\r\n            re = new RegExp(body);\r\n\r\n            if ((result = findSourceInUrls(re, urls))) {\r\n                return result;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    // Contents of Exception in various browsers.\r\n    //\r\n    // SAFARI:\r\n    // ex.message = Can't find variable: qq\r\n    // ex.line = 59\r\n    // ex.sourceId = 580238192\r\n    // ex.sourceURL = http://...\r\n    // ex.expressionBeginOffset = 96\r\n    // ex.expressionCaretOffset = 98\r\n    // ex.expressionEndOffset = 98\r\n    // ex.name = ReferenceError\r\n    //\r\n    // FIREFOX:\r\n    // ex.message = qq is not defined\r\n    // ex.fileName = http://...\r\n    // ex.lineNumber = 59\r\n    // ex.stack = ...stack trace... (see the example below)\r\n    // ex.name = ReferenceError\r\n    //\r\n    // CHROME:\r\n    // ex.message = qq is not defined\r\n    // ex.name = ReferenceError\r\n    // ex.type = not_defined\r\n    // ex.arguments = ['aa']\r\n    // ex.stack = ...stack trace...\r\n    //\r\n    // INTERNET EXPLORER:\r\n    // ex.message = ...\r\n    // ex.name = ReferenceError\r\n    //\r\n    // OPERA:\r\n    // ex.message = ...message... (see the example below)\r\n    // ex.name = ReferenceError\r\n    // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\r\n    // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\r\n\r\n    /**\r\n     * Computes stack trace information from the stack property.\r\n     * Chrome and Gecko use this property.\r\n     * Added WinJS regex for Raygun4JS's offline caching support\r\n     * @param {Error} ex\r\n     * @return {?Object.<string, *>} Stack trace information.\r\n     */\r\n    function computeStackTraceFromStackProp(ex) {\r\n        if (!ex.stack) {\r\n            return null;\r\n        }\r\n\r\n        var chrome = /^\\s*at (.*?) ?\\(?((?:file|http|https|chrome-extension):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\r\n            gecko = /^\\s*(.*?)(?:\\((.*?)\\))?@?((?:file|http|https|chrome):.*?):(\\d+)(?::(\\d+))?\\s*$/i,\r\n            winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:ms-appx|http|https):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\r\n            lines = ex.stack.split('\\n'),\r\n            stack = [],\r\n            parts,\r\n            element,\r\n            reference = /^(.*) is undefined$/.exec(ex.message);\r\n\r\n        for (var i = 0, j = lines.length; i < j; ++i) {\r\n            if ((parts = gecko.exec(lines[i]))) {\r\n                element = {\r\n                    'url': parts[3],\r\n                    'func': parts[1] || UNKNOWN_FUNCTION,\r\n                    'args': parts[2] ? parts[2].split(',') : '',\r\n                    'line': +parts[4],\r\n                    'column': parts[5] ? +parts[5] : null\r\n                };\r\n            } else if ((parts = chrome.exec(lines[i]))) {\r\n                element = {\r\n                    'url': parts[2],\r\n                    'func': parts[1] || UNKNOWN_FUNCTION,\r\n                    'line': +parts[3],\r\n                    'column': parts[4] ? +parts[4] : null\r\n                };\r\n            } else if ((parts = winjs.exec(lines[i]))) {\r\n              element = {\r\n                'url': parts[2],\r\n                'func': parts[1] || UNKNOWN_FUNCTION,\r\n                'line': +parts[3],\r\n                'column': parts[4] ? +parts[4] : null\r\n              };\r\n            } else {\r\n                continue;\r\n            }\r\n\r\n            if (!element.func && element.line) {\r\n                element.func = guessFunctionName(element.url, element.line);\r\n            }\r\n\r\n            if (element.line) {\r\n                element.context = gatherContext(element.url, element.line);\r\n            }\r\n\r\n            stack.push(element);\r\n        }\r\n\r\n        if (stack[0] && stack[0].line && !stack[0].column && reference) {\r\n            stack[0].column = findSourceInLine(reference[1], stack[0].url, stack[0].line);\r\n        } else if (!stack[0].column && typeof ex.columnNumber !== 'undefined') {\r\n            // Firefox column number\r\n            stack[0].column = ex.columnNumber + 1;\r\n        }\r\n\r\n        if (!stack.length) {\r\n            return null;\r\n        }\r\n\r\n        return {\r\n            'mode': 'stack',\r\n            'name': ex.name,\r\n            'message': ex.message,\r\n            'url': document.location.href,\r\n            'stack': stack,\r\n            'useragent': navigator.userAgent\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Computes stack trace information from the stacktrace property.\r\n     * Opera 10 uses this property.\r\n     * @param {Error} ex\r\n     * @return {?Object.<string, *>} Stack trace information.\r\n     */\r\n    function computeStackTraceFromStacktraceProp(ex) {\r\n        // Access and store the stacktrace property before doing ANYTHING\r\n        // else to it because Opera is not very good at providing it\r\n        // reliably in other circumstances.\r\n        var stacktrace = ex.stacktrace;\r\n\r\n        var testRE = / line (\\d+), column (\\d+) in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\) in (.*):\\s*$/i,\r\n            lines = stacktrace.split('\\n'),\r\n            stack = [],\r\n            parts;\r\n\r\n        for (var i = 0, j = lines.length; i < j; i += 2) {\r\n            if ((parts = testRE.exec(lines[i]))) {\r\n                var element = {\r\n                    'line': +parts[1],\r\n                    'column': +parts[2],\r\n                    'func': parts[3] || parts[4],\r\n                    'args': parts[5] ? parts[5].split(',') : [],\r\n                    'url': parts[6]\r\n                };\r\n\r\n                if (!element.func && element.line) {\r\n                    element.func = guessFunctionName(element.url, element.line);\r\n                }\r\n                if (element.line) {\r\n                    try {\r\n                        element.context = gatherContext(element.url, element.line);\r\n                    } catch (exc) {}\r\n                }\r\n\r\n                if (!element.context) {\r\n                    element.context = [lines[i + 1]];\r\n                }\r\n\r\n                stack.push(element);\r\n            }\r\n        }\r\n\r\n        if (!stack.length) {\r\n            return null;\r\n        }\r\n\r\n        return {\r\n            'mode': 'stacktrace',\r\n            'name': ex.name,\r\n            'message': ex.message,\r\n            'url': document.location.href,\r\n            'stack': stack,\r\n            'useragent': navigator.userAgent\r\n        };\r\n    }\r\n\r\n    /**\r\n     * NOT TESTED.\r\n     * Computes stack trace information from an error message that includes\r\n     * the stack trace.\r\n     * Opera 9 and earlier use this method if the option to show stack\r\n     * traces is turned on in opera:config.\r\n     * @param {Error} ex\r\n     * @return {?Object.<string, *>} Stack information.\r\n     */\r\n    function computeStackTraceFromOperaMultiLineMessage(ex) {\r\n        // Opera includes a stack trace into the exception message. An example is:\r\n        //\r\n        // Statement on line 3: Undefined variable: undefinedFunc\r\n        // Backtrace:\r\n        //   Line 3 of linked script file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.js: In function zzz\r\n        //         undefinedFunc(a);\r\n        //   Line 7 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function yyy\r\n        //           zzz(x, y, z);\r\n        //   Line 3 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function xxx\r\n        //           yyy(a, a, a);\r\n        //   Line 1 of function script\r\n        //     try { xxx('hi'); return false; } catch(ex) { TraceKit.report(ex); }\r\n        //   ...\r\n\r\n        var lines = ex.message.split('\\n');\r\n        if (lines.length < 4) {\r\n            return null;\r\n        }\r\n\r\n        var lineRE1 = /^\\s*Line (\\d+) of linked script ((?:file|http|https)\\S+)(?:: in function (\\S+))?\\s*$/i,\r\n            lineRE2 = /^\\s*Line (\\d+) of inline#(\\d+) script in ((?:file|http|https)\\S+)(?:: in function (\\S+))?\\s*$/i,\r\n            lineRE3 = /^\\s*Line (\\d+) of function script\\s*$/i,\r\n            stack = [],\r\n            scripts = document.getElementsByTagName('script'),\r\n            inlineScriptBlocks = [],\r\n            parts,\r\n            i,\r\n            len,\r\n            source;\r\n\r\n        for (i in scripts) {\r\n            if (_has(scripts, i) && !scripts[i].src) {\r\n                inlineScriptBlocks.push(scripts[i]);\r\n            }\r\n        }\r\n\r\n        for (i = 2, len = lines.length; i < len; i += 2) {\r\n            var item = null;\r\n            if ((parts = lineRE1.exec(lines[i]))) {\r\n                item = {\r\n                    'url': parts[2],\r\n                    'func': parts[3],\r\n                    'line': +parts[1]\r\n                };\r\n            } else if ((parts = lineRE2.exec(lines[i]))) {\r\n                item = {\r\n                    'url': parts[3],\r\n                    'func': parts[4]\r\n                };\r\n                var relativeLine = (+parts[1]); // relative to the start of the <SCRIPT> block\r\n                var script = inlineScriptBlocks[parts[2] - 1];\r\n                if (script) {\r\n                    source = getSource(item.url);\r\n                    if (source) {\r\n                        source = source.join('\\n');\r\n                        var pos = source.indexOf(script.innerText);\r\n                        if (pos >= 0) {\r\n                            item.line = relativeLine + source.substring(0, pos).split('\\n').length;\r\n                        }\r\n                    }\r\n                }\r\n            } else if ((parts = lineRE3.exec(lines[i]))) {\r\n                var url = window.location.href.replace(/#.*$/, ''),\r\n                    line = parts[1];\r\n                var re = new RegExp(escapeCodeAsRegExpForMatchingInsideHTML(lines[i + 1]));\r\n                source = findSourceInUrls(re, [url]);\r\n                item = {\r\n                    'url': url,\r\n                    'line': source ? source.line : line,\r\n                    'func': ''\r\n                };\r\n            }\r\n\r\n            if (item) {\r\n                if (!item.func) {\r\n                    item.func = guessFunctionName(item.url, item.line);\r\n                }\r\n                var context = gatherContext(item.url, item.line);\r\n                var midline = (context ? context[Math.floor(context.length / 2)] : null);\r\n                if (context && midline.replace(/^\\s*/, '') === lines[i + 1].replace(/^\\s*/, '')) {\r\n                    item.context = context;\r\n                } else {\r\n                    // if (context) alert(\"Context mismatch. Correct midline:\\n\" + lines[i+1] + \"\\n\\nMidline:\\n\" + midline + \"\\n\\nContext:\\n\" + context.join(\"\\n\") + \"\\n\\nURL:\\n\" + item.url);\r\n                    item.context = [lines[i + 1]];\r\n                }\r\n                stack.push(item);\r\n            }\r\n        }\r\n        if (!stack.length) {\r\n            return null; // could not parse multiline exception message as Opera stack trace\r\n        }\r\n\r\n        return {\r\n            'mode': 'multiline',\r\n            'name': ex.name,\r\n            'message': lines[0],\r\n            'url': document.location.href,\r\n            'stack': stack,\r\n            'useragent': navigator.userAgent\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Adds information about the first frame to incomplete stack traces.\r\n     * Safari and IE require this to get complete data on the first frame.\r\n     * @param {Object.<string, *>} stackInfo Stack trace information from\r\n     * one of the compute* methods.\r\n     * @param {string} url The URL of the script that caused an error.\r\n     * @param {(number|string)} lineNo The line number of the script that\r\n     * caused an error.\r\n     * @param {string=} message The error generated by the browser, which\r\n     * hopefully contains the name of the object that caused the error.\r\n     * @return {boolean} Whether or not the stack information was\r\n     * augmented.\r\n     */\r\n    function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\r\n        var initial = {\r\n            'url': url,\r\n            'line': lineNo\r\n        };\r\n\r\n        if (initial.url && initial.line) {\r\n            stackInfo.incomplete = false;\r\n\r\n            if (!initial.func) {\r\n                initial.func = guessFunctionName(initial.url, initial.line);\r\n            }\r\n\r\n            if (!initial.context) {\r\n                initial.context = gatherContext(initial.url, initial.line);\r\n            }\r\n\r\n            var reference = / '([^']+)' /.exec(message);\r\n            if (reference) {\r\n                initial.column = findSourceInLine(reference[1], initial.url, initial.line);\r\n            }\r\n\r\n            if (stackInfo.stack.length > 0) {\r\n                if (stackInfo.stack[0].url === initial.url) {\r\n                    if (stackInfo.stack[0].line === initial.line) {\r\n                        return false; // already in stack trace\r\n                    } else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {\r\n                        stackInfo.stack[0].line = initial.line;\r\n                        stackInfo.stack[0].context = initial.context;\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            stackInfo.stack.unshift(initial);\r\n            stackInfo.partial = true;\r\n            return true;\r\n        } else {\r\n            stackInfo.incomplete = true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Computes stack trace information by walking the arguments.caller\r\n     * chain at the time the exception occurred. This will cause earlier\r\n     * frames to be missed but is the only way to get any stack trace in\r\n     * Safari and IE. The top frame is restored by\r\n     * {@link augmentStackTraceWithInitialElement}.\r\n     * @param {Error} ex\r\n     * @return {?Object.<string, *>} Stack trace information.\r\n     */\r\n    function computeStackTraceByWalkingCallerChain(ex, depth) {\r\n        var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i,\r\n            stack = [],\r\n            funcs = {},\r\n            recursion = false,\r\n            parts,\r\n            item,\r\n            source;\r\n\r\n        for (var curr = computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\r\n            if (curr === computeStackTrace || curr === TraceKit.report) {\r\n                // console.log('skipping internal function');\r\n                continue;\r\n            }\r\n\r\n            item = {\r\n                'url': null,\r\n                'func': UNKNOWN_FUNCTION,\r\n                'line': null,\r\n                'column': null\r\n            };\r\n\r\n            if (curr.name) {\r\n                item.func = curr.name;\r\n            } else if ((parts = functionName.exec(curr.toString()))) {\r\n                item.func = parts[1];\r\n            }\r\n\r\n            if (typeof item.func === 'undefined') {\r\n              try {\r\n                item.func = parts.input.substring(0, parts.input.indexOf('{'))\r\n              } catch (e) { }\r\n            }\r\n\r\n            if ((source = findSourceByFunctionBody(curr))) {\r\n                item.url = source.url;\r\n                item.line = source.line;\r\n\r\n                if (item.func === UNKNOWN_FUNCTION) {\r\n                    item.func = guessFunctionName(item.url, item.line);\r\n                }\r\n\r\n                var reference = / '([^']+)' /.exec(ex.message || ex.description);\r\n                if (reference) {\r\n                    item.column = findSourceInLine(reference[1], source.url, source.line);\r\n                }\r\n            }\r\n\r\n            if (funcs['' + curr]) {\r\n                recursion = true;\r\n            }else{\r\n                funcs['' + curr] = true;\r\n            }\r\n\r\n            stack.push(item);\r\n        }\r\n\r\n        if (depth) {\r\n            // console.log('depth is ' + depth);\r\n            // console.log('stack is ' + stack.length);\r\n            stack.splice(0, depth);\r\n        }\r\n\r\n        var result = {\r\n            'mode': 'callers',\r\n            'name': ex.name,\r\n            'message': ex.message,\r\n            'url': document.location.href,\r\n            'stack': stack,\r\n            'useragent': navigator.userAgent\r\n        };\r\n        augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Computes a stack trace for an exception.\r\n     * @param {Error} ex\r\n     * @param {(string|number)=} depth\r\n     */\r\n    function computeStackTrace(ex, depth) {\r\n        var stack = null;\r\n        depth = (depth == null ? 0 : +depth);\r\n\r\n        try {\r\n            // This must be tried first because Opera 10 *destroys*\r\n            // its stacktrace property if you try to access the stack\r\n            // property first!!\r\n            stack = computeStackTraceFromStacktraceProp(ex);\r\n            if (stack) {\r\n                return stack;\r\n            }\r\n        } catch (e) {\r\n            if (debug) {\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        try {\r\n            stack = computeStackTraceFromStackProp(ex);\r\n            if (stack) {\r\n                return stack;\r\n            }\r\n        } catch (e) {\r\n            if (debug) {\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        try {\r\n            stack = computeStackTraceFromOperaMultiLineMessage(ex);\r\n            if (stack) {\r\n                return stack;\r\n            }\r\n        } catch (e) {\r\n            if (debug) {\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        try {\r\n            stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);\r\n            if (stack) {\r\n                return stack;\r\n            }\r\n        } catch (e) {\r\n            if (debug) {\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        return {\r\n            'mode': 'failed'\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Logs a stacktrace starting from the previous call and working down.\r\n     * @param {(number|string)=} depth How many frames deep to trace.\r\n     * @return {Object.<string, *>} Stack trace information.\r\n     */\r\n    function computeStackTraceOfCaller(depth) {\r\n        depth = (depth == null ? 0 : +depth) + 1; // \"+ 1\" because \"ofCaller\" should drop one frame\r\n        try {\r\n            throw new Error();\r\n        } catch (ex) {\r\n            return computeStackTrace(ex, depth + 1);\r\n        }\r\n    }\r\n\r\n    computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;\r\n    computeStackTrace.guessFunctionName = guessFunctionName;\r\n    computeStackTrace.gatherContext = gatherContext;\r\n    computeStackTrace.ofCaller = computeStackTraceOfCaller;\r\n\r\n    return computeStackTrace;\r\n}());\r\n\r\n/**\r\n * Extends support for global error handling for asynchronous browser\r\n * functions. Adopted from Closure Library's errorhandler.js\r\n */\r\nTraceKit.extendToAsynchronousCallbacks = function () {\r\n    var _helper = function _helper(fnName) {\r\n        var originalFn = window[fnName];\r\n        window[fnName] = function traceKitAsyncExtension() {\r\n            // Make a copy of the arguments\r\n            var args = _slice.call(arguments);\r\n            var originalCallback = args[0];\r\n            if (typeof (originalCallback) === 'function') {\r\n                args[0] = TraceKit.wrap(originalCallback);\r\n            }\r\n            // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\r\n            // also only supports 2 argument and doesn't care what \"this\" is, so we\r\n            // can just call the original function directly.\r\n            if (originalFn.apply) {\r\n                return originalFn.apply(this, args);\r\n            } else {\r\n                return originalFn(args[0], args[1]);\r\n            }\r\n        };\r\n    };\r\n\r\n    _helper('setTimeout');\r\n    _helper('setInterval');\r\n};\r\n\r\n//Default options:\r\nif (!TraceKit.remoteFetching) {\r\n  TraceKit.remoteFetching = true;\r\n}\r\nif (!TraceKit.collectWindowErrors) {\r\n  TraceKit.collectWindowErrors = true;\r\n}\r\nif (!TraceKit.linesOfContext || TraceKit.linesOfContext < 1) {\r\n  // 5 lines before, the offending line, 5 lines after\r\n  TraceKit.linesOfContext = 11;\r\n}\r\n\r\n\r\n\r\n// Export to global object\r\nwindow.TraceKit = TraceKit;\r\n\r\n}(window));\r\n","export interface IBootstrapper {\n  register():void;\n}\n\nexport interface ILastReferenceIdManager {\r\n  getLast(): string;\r\n  clearLast(): void;\r\n  setLast(eventId:string): void;\r\n}\r\n\nexport interface ILog {\r\n  info(message:string):void;\r\n  warn(message:string):void;\r\n  error(message:string):void;\r\n}\r\n\nexport interface IEvent {\r\n  type?:string;\r\n  source?:string;\r\n  date?:Date;\r\n  tags?:string[];\r\n  message?:string;\r\n  geo?:string;\r\n  value?:number;\r\n  data?:any;\r\n  reference_id?:string;\r\n  session_id?:string;\r\n}\r\n\n                                          \r\n\r\nexport interface IEventQueue {\r\n  enqueue(event:IEvent):void;\r\n  process():void;\r\n  suspendProcessing(durationInMinutes?:number, discardFutureQueuedItems?:boolean, clearQueue?:boolean):void;\r\n}\r\n\nexport interface IEnvironmentInfo {\n  processor_count?:number;\n  total_physical_memory?:number;\n  available_physical_memory?:number;\n  command_line?:string;\n  process_name?:string;\n  process_id?:string;\n  process_memory_size?:number;\n  thread_id?:string;\n  architecture?:string;\n  o_s_name?:string;\n  o_s_version?:string;\n  ip_address?:string;\n  machine_name?:string;\n  install_id?:string;\n  runtime_version?:string;\n  data?:any;\n}\n\nexport class ContextData {\r\n  public setException(exception:Error): void {\r\n    if (exception) {\r\n      this['@@_Exception'] = exception;\r\n    }\r\n  }\r\n\r\n  public get hasException(): boolean {\r\n    return !!this['@@_Exception']\r\n  }\r\n\r\n  public getException(): Error {\r\n    return this.hasException ? this['@@_Exception'] : null;\r\n  }\r\n\r\n  public markAsUnhandledError(): void {\r\n    this['@@_IsUnhandledError'] = true;\r\n  }\r\n\r\n  public get isUnhandledError(): boolean {\r\n    return !!this['@@_IsUnhandledError'];\r\n  }\r\n\r\n  public setSubmissionMethod(method:string): void {\r\n    if (method && method.length > 0) {\r\n      this['@@_SubmissionMethod'] = method;\r\n    }\r\n  }\r\n\r\n  public getSubmissionMethod(): string {\r\n    return !!this['@@_SubmissionMethod'] ? this['@@_SubmissionMethod'] : null;\r\n  }\r\n}\r\n\n                                                                                                                                   \r\n\r\nexport interface IEnvironmentInfoCollector {\r\n  getEnvironmentInfo(context:EventPluginContext):IEnvironmentInfo;\r\n}\r\n\n                                                                                                               \r\n\r\nexport interface IErrorParser {\r\n  parse(context:EventPluginContext, exception:Error): void;\r\n}\r\n\n                                                                                                                \n\nexport interface IModuleCollector {\n  getModules(context:EventPluginContext):IModule[];\n}\n\n                                                                                                                           \r\n\r\nexport interface IRequestInfoCollector {\r\n  getRequestInfo(context:EventPluginContext):IRequestInfo;\r\n}\r\n\nexport interface IStorage<T>{\r\n  save<T>(path:string, value:T):boolean;\r\n  get(searchPattern?:string, limit?:number):T[];\r\n  clear(searchPattern?:string):void;\r\n  count(searchPattern?:string):number;\r\n}\r\n\n                                                                                                                                                                                                                                                                                               \r\n\r\nexport interface ISubmissionClient {\r\n  submit(events:IEvent[], config:Configuration, callback:(SubmissionResponse) => void):void;\r\n  submitDescription(referenceId:string, description:IUserDescription, config:Configuration, callback:(SubmissionResponse) => void):void;\r\n  getSettings(config:Configuration, callback:(SettingsResponse) => void):void;\r\n}\r\n\nn\nexport interface IConfigurationSettings {\n  apiKey?:string;\n  serverUrl?:string;\n  environmentInfoCollector?:IEnvironmentInfoCollector;\n  errorParser?:IErrorParser;\n  lastReferenceIdManager?:ILastReferenceIdManager;\n  log?:ILog;\n  moduleCollector?:IModuleCollector;\n  requestInfoCollector?:IRequestInfoCollector;\n  submissionBatchSize?:number;\n  submissionClient?:ISubmissionClient;\n  storage?:IStorage<any>;\n  queue?:IEventQueue;\n}\n\n                                                                    \r\n\r\nexport class InMemoryLastReferenceIdManager implements ILastReferenceIdManager {\r\n  private _lastReferenceId:string = null;\r\n\r\n  getLast(): string {\r\n    return this._lastReferenceId;\r\n  }\r\n\r\n  clearLast():void {\r\n    this._lastReferenceId = null;\r\n  }\r\n\r\n  setLast(eventId:string):void {\r\n    this._lastReferenceId = eventId;\r\n  }\r\n}\r\n\n                              \r\n\r\nexport class ConsoleLog implements ILog {\r\n  public info(message):void {\r\n    this.log('info', message);\r\n  }\r\n\r\n  public warn(message):void {\r\n    this.log('warn', message);\r\n  }\r\n\r\n  public error(message):void {\r\n    this.log('error', message);\r\n  }\r\n\r\n  private log(level:string, message:string) {\r\n    if (console && console[level]) {\r\n      console[level](`[${level}] Exceptionless: ${message}`);\r\n    }\r\n  }\r\n}\r\n\n                              \r\n\r\nexport class NullLog implements ILog {\r\n  public info(message):void {}\r\n  public warn(message):void {}\r\n  public error(message):void {}\r\n}\r\n\nexport interface IUserInfo {\n  identity?:string;\n  name?:string;\n  data?:any;\n}\n\n                                                                                                          \r\n\r\nexport interface IEventPlugin {\r\n  priority?:number;\r\n  name?:string;\r\n  run(context:EventPluginContext, next?:() => void): void;\r\n}\r\n\n                                                                                                                                                                                                                                            \n\nexport class EventPluginContext {\n  public cancelled:boolean;\n  public client:ExceptionlessClient;\n  public event:IEvent;\n  public contextData:ContextData;\n\n  constructor(client:ExceptionlessClient, event:IEvent, contextData?:ContextData) {\n    this.client = client;\n    this.event = event;\n    this.contextData = contextData ? contextData : new ContextData();\n  }\n\n  public get log(): ILog {\n    return this.client.config.log;\n  }\n}\n\nn\nexport class EventPluginManager {\n  public static run(context:EventPluginContext, callback:(context?:EventPluginContext) => void): void {\n    var wrap = function (plugin:IEventPlugin, next?:() => void): () => void {\n      return () => {\n        try {\n          if (!context.cancelled) {\n            plugin.run(context, next);\n          }\n        } catch (ex) {\n          context.cancelled = true;\n          context.log.error(`Error while running plugin '${plugin.name}': ${ex.message}. This event will be discarded.`);\n        }\n\n        if (context.cancelled && !!callback) {\n          callback(context);\n        }\n      };\n    };\n\n    var plugins:IEventPlugin[] = context.client.config.plugins;\n    if (!!callback) {\n      plugins.push({ name: 'callback', priority: 9007199254740992, run: callback });\n    }\n\n    var wrappedPlugins:{ (): void }[] = [];\n    for (var index = plugins.length - 1; index > -1; index--) {\n      wrappedPlugins[index] = wrap(plugins[index], index < plugins.length - 1 ? wrappedPlugins[index + 1] : null);\n    }\n\n    wrappedPlugins[0]();\n  }\n\n  public static addDefaultPlugins(config:Configuration): void {\n    config.addPlugin(new ConfigurationDefaultsPlugin());\n    config.addPlugin(new ErrorPlugin());\n    config.addPlugin(new DuplicateCheckerPlugin());\n    config.addPlugin(new ModuleInfoPlugin());\n    config.addPlugin(new RequestInfoPlugin());\n    config.addPlugin(new EnvironmentInfoPlugin());\n    config.addPlugin(new SubmissionMethodPlugin());\n  }\n}\n\n                                                                                                                                                  \r\n\r\nexport class ReferenceIdPlugin implements IEventPlugin {\r\n  public priority:number = 20;\r\n  public name:string = 'ReferenceIdPlugin';\r\n\r\n  public run(context:EventPluginContext, next?:() => void): void {\r\n    if ((!context.event.reference_id || context.event.reference_id.length === 0) && context.event.type === 'error') {\r\n      context.event.reference_id = Utils.guid().replace('-', '').substring(0, 10);\r\n    }\r\n\r\n    if (next) {\r\n      next();\r\n    }\r\n  }\r\n}\r\n\n                                                                                                                                                                                                                                                                       \n\nexport class DefaultEventQueue implements IEventQueue {\n  private _config:Configuration;\n  private _suspendProcessingUntil:Date;\n  private _discardQueuedItemsUntil:Date;\n  private _processingQueue:boolean = false;\n  private _queueTimer:any;\n\n  constructor(config:Configuration) {\n    this._config = config;\n  }\n\n  public enqueue(event:IEvent): void {\n    this.ensureQueueTimer();\n\n    if (this.areQueuedItemsDiscarded()) {\n      this._config.log.info('Queue items are currently being discarded. The event will not be queued.');\n      return;\n    }\n\n    var key = `${this.queuePath()}-${new Date().toJSON()}-${Utils.randomNumber()}`;\n    this._config.log.info(`Enqueuing event: ${key} type=${event.type} ${!!event.reference_id ? 'refid=' + event.reference_id : ''}`);\n    this._config.storage.save(key, event);\n  }\n\n  public process(): void {\n    this.ensureQueueTimer();\n\n    if (this._processingQueue) {\n      return;\n    }\n\n    this._config.log.info('Processing queue...');\n    if (!this._config.enabled) {\n      this._config.log.info('Configuration is disabled. The queue will not be processed.');\n      return;\n    }\n\n    if (!this._config.apiKey || this._config.apiKey.length < 10) {\n      this._config.log.info('ApiKey is not set. The queue will not be processed.');\n      return;\n    }\n\n    this._processingQueue = true;\n\n    try {\n      var events = this._config.storage.get(this.queuePath(), this._config.submissionBatchSize);\n      if (!events || events.length == 0) {\n        this._config.log.info('There are currently no queued events to process.');\n        this._processingQueue = false;\n        return;\n      }\n\n      this._config.log.info(`Sending ${events.length} events to ${this._config.serverUrl}.`);\n      this._config.submissionClient.submit(events, this._config, (response:SubmissionResponse) => {\n        this.processSubmissionResponse(response, events);\n        this._config.log.info('Finished processing queue.');\n        this._processingQueue = false;\n      });\n    } catch (ex) {\n      this._config.log.error(`An error occurred while processing the queue: ${ex}`);\n      this.suspendProcessing();\n      this._processingQueue = false;\n    }\n  }\n\n  private processSubmissionResponse(response:SubmissionResponse, events:IEvent[]): void {\n    if (response.success) {\n      this._config.log.info(`Sent ${events.length} events to ${this._config.serverUrl}.`);\n      return;\n    }\n\n    if (response.serviceUnavailable) {\n      // You are currently over your rate limit or the servers are under stress.\n      this._config.log.error('Server returned service unavailable.');\n      this.suspendProcessing();\n      this.requeueEvents(events);\n      return;\n    }\n\n    if (response.paymentRequired) {\n      // If the organization over the rate limit then discard the event.\n      this._config.log.info('Too many events have been submitted, please upgrade your plan.');\n      this.suspendProcessing(null, true, true);\n      return;\n    }\n\n    if (response.unableToAuthenticate) {\n      // The api key was suspended or could not be authorized.\n      this._config.log.info('Unable to authenticate, please check your configuration. The event will not be submitted.');\n      this.suspendProcessing(15);\n      return;\n    }\n\n    if (response.notFound || response.badRequest) {\n      // The service end point could not be found.\n      this._config.log.error(`Error while trying to submit data: ${response.message}`);\n      this.suspendProcessing(60 * 4);\n      return;\n    }\n\n    if (response.requestEntityTooLarge) {\n      if (this._config.submissionBatchSize > 1) {\n        this._config.log.error('Event submission discarded for being too large. The event will be retried with a smaller events size.');\n        this._config.submissionBatchSize = Math.max(1, Math.round(this._config.submissionBatchSize / 1.5));\n        this.requeueEvents(events);\n      } else {\n        this._config.log.error('Event submission discarded for being too large. The event will not be submitted.');\n      }\n\n      return;\n    }\n\n    if (!response.success) {\n      this._config.log.error(`An error occurred while submitting events: ${ response.message}`);\n      this.suspendProcessing();\n      this.requeueEvents(events);\n    }\n  }\n\n  private ensureQueueTimer(): void {\n    if (!this._queueTimer) {\n      this._queueTimer = setInterval(() => this.onProcessQueue(), 10000);\n    }\n  }\n\n  private onProcessQueue(): void {\n    if (!this.isQueueProcessingSuspended() && !this._processingQueue) {\n      this.process();\n    }\n  }\n\n  public suspendProcessing(durationInMinutes?:number, discardFutureQueuedItems?:boolean, clearQueue?:boolean): void {\n    if (!durationInMinutes || durationInMinutes <= 0) {\n      durationInMinutes = 5;\n    }\n\n    this._config.log.info(`Suspending processing for ${durationInMinutes} minutes.`);\n    this._suspendProcessingUntil = new Date(new Date().getTime() + (durationInMinutes * 60000));\n\n    if (discardFutureQueuedItems) {\n      this._discardQueuedItemsUntil = new Date(new Date().getTime() + (durationInMinutes * 60000));\n    }\n\n    if (!clearQueue) {\n      return;\n    }\n\n    // Account is over the limit and we want to ensure that the sample size being sent in will contain newer errors.\n    try {\n      this._config.storage.clear(this.queuePath());\n    } catch (Exception) { }\n  }\n\n  private requeueEvents(events:IEvent[]): void {\n    this._config.log.info(`Requeuing ${events.length} events.`);\n\n    for (var index = 0; index < events.length; index++) {\n      this.enqueue(events[index]);\n    }\n  }\n\n  private isQueueProcessingSuspended(): boolean {\n    return this._suspendProcessingUntil && this._suspendProcessingUntil > new Date();\n  }\n\n  private areQueuedItemsDiscarded(): boolean {\n    return this._discardQueuedItemsUntil && this._discardQueuedItemsUntil > new Date();\n  }\n\n  private queuePath(): string {\n    return 'ex-q';\n  }\n}\n\n                                      \n\nexport class InMemoryStorage<T> implements IStorage<T> {\n  private _items = {};\n\n  public save<T>(path:string, value:T):boolean {\n    this._items[path] = value;\n    return true;\n  }\n\n  public get(searchPattern?:string, limit?:number):T[] {\n    var results = [];\n    var regex = new RegExp(searchPattern || '.*');\n\n    for (var key in this._items) {\n      if (results.length >= limit) {\n        break;\n      }\n\n      if (regex.test(key)) {\n        results.push(this._items[key]);\n        delete this._items[key];\n      }\n    }\n\n    return results;\n  }\n\n  public clear(searchPattern?:string):void {\n    if (!searchPattern) {\n      this._items = {};\n      return;\n    }\n\n    var regex = new RegExp(searchPattern);\n    for (var key in this._items) {\n      if (regex.test(key)) {\n        delete this._items[key];\n      }\n    }\n  }\n\n  public count(searchPattern?:string):number {\n    var regex = new RegExp(searchPattern || '.*');\n    var results = [];\n    for (var key in this._items) {\n      if (regex.test(key)) {\n        results.push(key);\n      }\n    }\n\n    return results.length;\n  }\n}\n\n                                                 \n\nexport class Utils {\n  public static getHashCode(source:string): string {\n    if (!source || source.length === 0) {\n      return null;\n    }\n\n    var hash:number = 0;\n    for (var index = 0; index < source.length; index++) {\n      var character   = source.charCodeAt(index);\n      hash  = ((hash << 5) - hash) + character;\n      hash |= 0;\n    }\n\n    return hash.toString();\n  }\n\n  public static getCookies(cookies:string, separator:string): Object {\n    var result = {};\n\n    var parts = (cookies || '').split(separator || ', ');\n    for (var index = 0; index < parts.length; index++) {\n      var cookie = parts[index].split('=');\n      result[cookie[0]] = cookie[1];\n    }\n\n    return result;\n  }\n\n  public static guid(): string {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    }\n\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  }\n\n  public static merge(defaultValues:any, values:any) {\n    var result = {};\n\n    for (var key in defaultValues || {}) {\n      if (!!defaultValues[key]) {\n        result[key] = defaultValues[key];\n      }\n    }\n\n    for (var key in values || {}) {\n      if (!!values[key]) {\n        result[key] = values[key];\n      }\n    }\n\n    return result;\n  }\n\n  public static parseVersion(source:string): string {\n    if (!source) {\n      return null;\n    }\n\n    var versionRegex = /(v?((\\d+)\\.(\\d+)(\\.(\\d+))?)(?:-([\\dA-Za-z\\-]+(?:\\.[\\dA-Za-z\\-]+)*))?(?:\\+([\\dA-Za-z\\-]+(?:\\.[\\dA-Za-z\\-]+)*))?)/;\n    var matches = versionRegex.exec(source);\n    if (matches && matches.length > 0) {\n      return matches[0];\n    }\n\n    return null;\n  }\n\n  public static parseQueryString(query:string) {\n    if (!query || query.length === 0) {\n      return null;\n    }\n\n    var pairs = query.split('&');\n    if (pairs.length === 0) {\n      return null;\n    }\n\n    var result = {};\n    for (var index = 0; index < pairs.length; index++) {\n      var pair = pairs[index].split('=');\n      result[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n\n    return result;\n  }\n\n  public static randomNumber(): number {\n    return Math.floor(Math.random() * 9007199254740992);\n  }\n\n  public static stringify(data:any): string {\n    function stringifyImpl(data:any): string {\n      var cache = [];\n      return JSON.stringify(data, function(key:string, value:any) {\n        if (typeof value === 'object' && !!value) {\n          if (cache.indexOf(value) !== -1) {\n            // Circular reference found, discard key\n            return;\n          }\n\n          cache.push(value);\n        }\n\n        return value;\n      });\n    }\n\n    if (toString.call(data) === '[object Array]') {\n      var result = [];\n      for (var index = 0; index < data.length; index++) {\n        result[index] = JSON.parse(stringifyImpl(data[index]));\n      }\n\n      return JSON.stringify(result);\n    }\n\n    return stringifyImpl(data);\n  }\n}\n\nn\nexport class Configuration implements IConfigurationSettings {\n  private _apiKey:string;\n  private _enabled:boolean = true;\n  private _serverUrl:string = 'https://collector.exceptionless.io';\n  private _plugins:IEventPlugin[] = [];\n\n  public environmentInfoCollector:IEnvironmentInfoCollector;\n  public errorParser:IErrorParser;\n  public lastReferenceIdManager:ILastReferenceIdManager = new InMemoryLastReferenceIdManager();\n  public log:ILog;\n  public moduleCollector:IModuleCollector;\n  public requestInfoCollector:IRequestInfoCollector;\n  public submissionBatchSize;\n  public submissionClient:ISubmissionClient;\n  public storage:IStorage<any>;\n  public queue:IEventQueue;\n  public defaultTags:string[] = [];\n  public defaultData:Object = {};\n\n  constructor(settings?:IConfigurationSettings) {\n    function inject(fn:any) {\n      return typeof fn === 'function' ? fn(this) : fn;\n    }\n\n    settings = Utils.merge(Configuration.defaults, settings);\n\n    this.log = inject(settings.log) || new NullLog();\n    this.apiKey = settings.apiKey;\n    this.serverUrl = settings.serverUrl;\n\n    this.environmentInfoCollector = inject(settings.environmentInfoCollector);\n    this.errorParser = inject(settings.errorParser);\n    this.lastReferenceIdManager = inject(settings.lastReferenceIdManager) || new InMemoryLastReferenceIdManager();\n    this.moduleCollector = inject(settings.moduleCollector);\n    this.requestInfoCollector = inject(settings.requestInfoCollector);\n    this.submissionBatchSize = inject(settings.submissionBatchSize) || 50;\n    this.submissionClient = inject(settings.submissionClient);\n    this.storage = inject(settings.storage) || new InMemoryStorage<any>();\n    this.queue = inject(settings.queue) || new DefaultEventQueue(this);\n\n    EventPluginManager.addDefaultPlugins(this);\n  }\n\n  public get apiKey(): string {\n    return this._apiKey;\n  }\n\n  public set apiKey(value:string) {\n    this._apiKey = value || null;\n    this.log.info(`apiKey: ${this._apiKey}`);\n  }\n\n  public get serverUrl(): string {\n    return this._serverUrl;\n  }\n\n  public set serverUrl(value:string) {\n    if (!!value && value.length > 0) {\n      this._serverUrl = value;\n      this.log.info(`serverUrl: ${this._serverUrl}`);\n    }\n  }\n\n  public get enabled(): boolean {\n    return this._enabled;\n  }\n\n  public get plugins(): IEventPlugin[] {\n    return this._plugins.sort((p1:IEventPlugin, p2:IEventPlugin) => {\n      return (p1.priority < p2.priority) ? -1 : (p1.priority > p2.priority) ? 1 : 0;\n    });\n  }\n\n  public addPlugin(plugin:IEventPlugin): void;\n  public addPlugin(name:string, priority:number, pluginAction:(context:EventPluginContext, next?:() => void) => void): void;\n  public addPlugin(pluginOrName:IEventPlugin|string, priority?:number, pluginAction?:(context:EventPluginContext, next?:() => void) => void): void {\n    var plugin:IEventPlugin = !!pluginAction ? { name: <string>pluginOrName, priority: priority, run: pluginAction } : <IEventPlugin>pluginOrName;\n    if (!plugin || !plugin.run) {\n      this.log.error('Add plugin failed: No run method was defined.');\n      return;\n    }\n\n    if (!plugin.name) {\n      plugin.name = Utils.guid();\n    }\n\n    if (!plugin.priority) {\n      plugin.priority = 0;\n    }\n\n    var pluginExists:boolean = false;\n    for (var index = 0; index < this._plugins.length; index++) {\n      if (this._plugins[index].name === plugin.name) {\n        pluginExists = true;\n        break;\n      }\n    }\n\n    if (!pluginExists) {\n      this._plugins.push(plugin);\n    }\n  }\n\n  public removePlugin(plugin:IEventPlugin): void;\n  public removePlugin(name:string): void;\n  public removePlugin(pluginOrName:IEventPlugin|string): void {\n    var name:string = typeof pluginOrName === 'string' ? pluginOrName : pluginOrName.name;\n    if (!name) {\n      this.log.error('Remove plugin failed: No plugin name was defined.');\n      return;\n    }\n\n    for (var index = 0; index < this._plugins.length; index++) {\n      if (this._plugins[index].name === name) {\n        this._plugins.splice(index, 1);\n        break;\n      }\n    }\n  }\n\n  public setVersion(version:string): void {\n    if (!!version && version.length > 0) {\n      this.defaultData['@version'] = version;\n    }\n  }\n\n  public setUserIdentity(userInfo:IUserInfo): void;\n  public setUserIdentity(identity:string): void;\n  public setUserIdentity(identity:string, name:string): void;\n  public setUserIdentity(userInfoOrIdentity:IUserInfo|string, name?:string): void {\n    var userInfo:IUserInfo = typeof userInfoOrIdentity !== 'string' ? userInfoOrIdentity : { identity: userInfoOrIdentity, name: name };\n    var shouldRemove:boolean = !userInfo || (!userInfo.identity && !userInfo.name);\n    if (shouldRemove) {\n      delete this.defaultData['@user'];\n    } else {\n      this.defaultData['@user'] = userInfo;\n    }\n\n    this.log.info(`user identity: ${shouldRemove ? 'null' : userInfo.identity}`);\n  }\n\n  public useReferenceIds(): void {\n    this.addPlugin(new ReferenceIdPlugin());\n  }\n\n  // TODO: Support a min log level.\n  public useDebugLogger(): void {\n    this.log = new ConsoleLog();\n  }\n\n  private static _defaultSettings:IConfigurationSettings = null;\n  public static get defaults() {\n    if (Configuration._defaultSettings === null) {\n      Configuration._defaultSettings = {};\n    }\n\n    return Configuration._defaultSettings;\n  }\n}\n\n                                                                                                                                                                                                                                                                                                                                                                            \n\nexport class EventBuilder {\n  public target:IEvent;\n  public client:ExceptionlessClient;\n  public pluginContextData:ContextData;\n\n  constructor(event:IEvent, client:ExceptionlessClient, pluginContextData?:ContextData) {\n    this.target = event;\n    this.client = client;\n    this.pluginContextData = pluginContextData || new ContextData();\n  }\n\n  public setType(type:string): EventBuilder {\n    if (!!type && type.length > 0) {\n      this.target.type = type;\n    }\n\n    return this;\n  }\n\n  public setSource(source:string): EventBuilder {\n    if (!!source && source.length > 0) {\n      this.target.source = source;\n    }\n\n    return this;\n  }\n\n  public setSessionId(sessionId:string): EventBuilder {\n    if (!this.isValidIdentifier(sessionId)) {\n      throw new Error(\"SessionId must contain between 8 and 100 alphanumeric or '-' characters.\");\n    }\n\n    this.target.session_id = sessionId;\n    return this;\n  }\n\n  public setReferenceId(referenceId:string): EventBuilder {\n    if (!this.isValidIdentifier(referenceId)) {\n      throw new Error(\"SessionId must contain between 8 and 100 alphanumeric or '-' characters.\");\n    }\n\n    this.target.reference_id = referenceId;\n    return this;\n  }\n\n  public setMessage(message:string): EventBuilder {\n    if (!!message && message.length > 0) {\n      this.target.message = message;\n    }\n\n    return this;\n  }\n\n  public setGeo(latitude: number, longitude: number): EventBuilder {\n    if (latitude < -90.0 || latitude > 90.0)\n      throw new Error('Must be a valid latitude value between -90.0 and 90.0.');\n    if (longitude < -180.0 || longitude > 180.0)\n      throw new Error('Must be a valid longitude value between -180.0 and 180.0.');\n\n    this.target.geo = `${latitude},${longitude}`;\n    return this;\n  }\n\n  public setUserIdentity(userInfo:IUserInfo): EventBuilder;\n  public setUserIdentity(identity:string): EventBuilder;\n  public setUserIdentity(identity:string, name:string): EventBuilder;\n  public setUserIdentity(userInfoOrIdentity:IUserInfo|string, name?:string): EventBuilder {\n    var userInfo = typeof userInfoOrIdentity !== 'string' ? userInfoOrIdentity : { identity: userInfoOrIdentity, name: name };\n    if (!userInfo || (!userInfo.identity && !userInfo.name)) {\n      return this;\n    }\n\n    this.setProperty('@user', userInfo);\n    return this;\n  }\n\n  // TODO: we to see if it makes sense to add setUserDescription.\n\n  public setValue(value:number): EventBuilder {\n    if (!!value) {\n      this.target.value = value;\n    }\n\n    return this;\n  }\n\n  public addTags(...tags:string[]): EventBuilder {\n    if (!tags || tags.length === 0) {\n      return this;\n    }\n\n    if (!this.target.tags) {\n      this.target.tags = [];\n    }\n\n    for (var index = 0; index < tags.length; index++) {\n      if (tags[index] && this.target.tags.indexOf(tags[index]) < 0) {\n        this.target.tags.push(tags[index]);\n      }\n    }\n\n    return this;\n  }\n\n  public setProperty(name:string, value:any): EventBuilder {\n    if (!name || (value === undefined || value == null)) {\n      return this;\n    }\n\n    if (!this.target.data) {\n      this.target.data = {};\n    }\n\n    this.target.data[name] = value;\n    return this;\n  }\n\n  public markAsCritical(critical:boolean): EventBuilder {\n    if (critical) {\n      this.addTags('Critical');\n    }\n\n    return this;\n  }\n\n  public addRequestInfo(request:any): EventBuilder {\n    if (!!request) {\n      this.pluginContextData['@request'] = request;\n    }\n\n    return this;\n  }\n\n  public submit(callback?:(context:EventPluginContext) => void): void {\n    this.client.submitEvent(this.target, this.pluginContextData, callback);\n  }\n\n  private isValidIdentifier(value:string): boolean {\n    if (!value || !value.length) {\n      return true;\n    }\n\n    if (value.length < 8 || value.length > 100) {\n      return false;\n    }\n\n    for (var index = 0; index < value.length; index++) {\n      var code = value.charCodeAt(index);\n      var isDigit = (code >= 48) && (code <= 57);\n      var isLetter = ((code >= 65) && (code <= 90)) || ((code >= 97) && (code <= 122));\n      var isMinus = code === 45;\n\n      if (!(isDigit || isLetter) && !isMinus) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n\n                                                                                  \r\n\r\nexport interface IError extends IInnerError {\r\n  modules?:IModule[]\r\n}\r\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n\nexport class ExceptionlessClient {\n  public config:Configuration;\n\n  constructor();\n  constructor(settings:IConfigurationSettings);\n  constructor(apiKey:string, serverUrl?:string);\n  constructor(settingsOrApiKey?:IConfigurationSettings|string, serverUrl?:string) {\n    // TODO: populate this in a plugin..\n    //var settings = this.getSettingsFromScriptTag() || {};\n\n    if (typeof settingsOrApiKey !== 'object') {\n      this.config = new Configuration(settingsOrApiKey);\n    } else {\n      this.config = new Configuration({ apiKey: <string>settingsOrApiKey, serverUrl: serverUrl });\n    }\n  }\n\n  public createException(exception:Error): EventBuilder {\n    var pluginContextData = new ContextData();\n    pluginContextData.setException(exception);\n    return this.createEvent(pluginContextData).setType('error');\n  }\n\n  public submitException(exception:Error, callback?:(context:EventPluginContext) => void): void {\n    this.createException(exception).submit(callback);\n  }\n\n  public createUnhandledException(exception:Error, submissionMethod?:string): EventBuilder {\n    var builder = this.createException(exception);\n    builder.pluginContextData.markAsUnhandledError();\n    builder.pluginContextData.setSubmissionMethod(submissionMethod);\n\n    return builder;\n  }\n\n  public submitUnhandledException(exception:Error, submissionMethod?:string, callback?:(context:EventPluginContext) => void) {\n    this.createUnhandledException(exception, submissionMethod).submit(callback);\n  }\n\n  public createFeatureUsage(feature:string): EventBuilder {\n    return this.createEvent().setType('usage').setSource(feature);\n  }\n\n  public submitFeatureUsage(feature:string, callback?:(context:EventPluginContext) => void): void {\n    this.createFeatureUsage(feature).submit(callback);\n  }\n\n  public createLog(message:string): EventBuilder;\n  public createLog(source:string, message:string): EventBuilder;\n  public createLog(source:string, message:string, level:string): EventBuilder;\n  public createLog(sourceOrMessage:string, message?:string, level?:string): EventBuilder {\n    var builder = this.createEvent().setType('log');\n\n    if (sourceOrMessage && message && level) {\n      builder = builder.setSource(sourceOrMessage).setMessage(message).setProperty('@level', level);\n    } else if (sourceOrMessage && message) {\n      builder = builder.setSource(sourceOrMessage).setMessage(message);\n    } else {\n      // TODO: Look into using https://www.stevefenton.co.uk/Content/Blog/Date/201304/Blog/Obtaining-A-Class-Name-At-Runtime-In-TypeScript/\n      var source = (<any>(arguments.callee.caller)).name;\n      builder = builder.setSource(source).setMessage(sourceOrMessage);\n    }\n\n    return builder;\n  }\n\n  public submitLog(message:string): void;\n  public submitLog(source:string, message:string): void;\n  public submitLog(source:string, message:string, level:string, callback?:(context:EventPluginContext) => void): void;\n  public submitLog(sourceOrMessage:string, message?:string, level?:string, callback?:(context:EventPluginContext) => void): void {\n    this.createLog(sourceOrMessage, message, level).submit(callback);\n  }\n\n  public createNotFound(resource:string): EventBuilder {\n    return this.createEvent().setType('404').setSource(resource);\n  }\n\n  public submitNotFound(resource:string, callback?:(context:EventPluginContext) => void): void {\n    this.createNotFound(resource).submit(callback);\n  }\n\n  public createSessionStart(sessionId:string): EventBuilder {\n    return this.createEvent().setType('start').setSessionId(sessionId);\n  }\n\n  public submitSessionStart(sessionId:string, callback?:(context:EventPluginContext) => void): void {\n    this.createSessionStart(sessionId).submit(callback);\n  }\n\n  public createSessionEnd(sessionId:string): EventBuilder {\n    return this.createEvent().setType('end').setSessionId(sessionId);\n  }\n\n  public submitSessionEnd(sessionId:string, callback?:(context:EventPluginContext) => void): void {\n    this.createSessionEnd(sessionId).submit(callback);\n  }\n\n  public createEvent(pluginContextData?:ContextData): EventBuilder {\n    return new EventBuilder({ date: new Date() }, this, pluginContextData);\n  }\n\n  public submitEvent(event:IEvent, pluginContextData?:ContextData, callback?:(context:EventPluginContext) => void): void {\n    if (!event) {\n      return;\n    }\n\n    if (!this.config.enabled) {\n      return this.config.log.info('Event submission is currently disabled.');\n    }\n\n    if (!event.data) {\n      event.data = {};\n    }\n\n    if (!event.tags || !event.tags.length) {\n      event.tags = [];\n    }\n\n    var context = new EventPluginContext(this, event, pluginContextData);\n    EventPluginManager.run(context, (context:EventPluginContext) => {\n      if (!context.cancelled) {\n        // ensure all required data\n        if (!event.type || event.type.length === 0) {\n          event.type = 'log';\n        }\n\n        if (!event.date) {\n          event.date = new Date();\n        }\n\n        this.config.queue.enqueue(event);\n\n        if (event.reference_id && event.reference_id.length > 0) {\n          this.config.log.info(`Setting last reference id '${event.reference_id}'`);\n          this.config.lastReferenceIdManager.setLast(event.reference_id);\n        }\n      }\n\n      if (!!callback) {\n        callback(context);\n      }\n    });\n  }\n\n  public getLastReferenceId(): string {\n    return this.config.lastReferenceIdManager.getLast();\n  }\n\n  private static _instance:ExceptionlessClient = null;\n  public static get default() {\n    if(ExceptionlessClient._instance === null) {\n      ExceptionlessClient._instance = new ExceptionlessClient(null);\n    }\n    return ExceptionlessClient._instance;\n  }\n}\n\nexport interface IParameter {\r\n  data?:any;\r\n  generic_arguments?:string[];\r\n\r\n  name?:string;\r\n  type?:string;\r\n  type_namespace?:string;\r\n}\r\n\n                                          \r\n\r\nexport interface IMethod {\r\n  data?:any;\r\n  generic_arguments?:string[];\r\n  parameters?:IParameter[];\r\n\r\n  is_signature_target?:boolean;\r\n  declaring_namespace?:string;\r\n  declaring_type?:string;\r\n  name?:string;\r\n  module_id?:number;\r\n}\r\n\n                                    \n\nexport interface IStackFrame extends IMethod {\n  file_name?:string;\n  line_number?:number;\n  column?:number;\n}\n\n                                                                                  \r\n\r\nexport interface IInnerError {\r\n  message?:string;\r\n  type?:string;\r\n  code?:string;\r\n  data?:any;\r\n  inner?:IInnerError\r\n  stack_trace?:IStackFrame[];\r\n  target_method?:IMethod;\r\n}\r\n\nexport interface IModule {\r\n  data?:any;\r\n\r\n  module_id?:number;\r\n  name?:string;\r\n  version?:string;\r\n  is_entry?:boolean;\r\n  created_date?:Date;\r\n  modified_date?:Date;\r\n}\r\n\n                                                                                                            \r\n\r\nexport class ConfigurationDefaultsPlugin implements IEventPlugin {\r\n  public priority:number = 10;\r\n  public name:string = 'ConfigurationDefaultsPlugin';\r\n\r\n  public run(context:EventPluginContext, next?:() => void): void {\r\n    var defaultTags = context.client.config.defaultTags || [];\r\n    for (var index = 0; index < defaultTags.length; index++) {\r\n      var tag = defaultTags[index];\r\n      if (!!tag && context.event.tags.indexOf(tag) < 0) {\r\n        context.event.tags.push(tag)\r\n      }\r\n    }\r\n\r\n    var defaultData = context.client.config.defaultData || {};\r\n    for (var key in defaultData) {\r\n      if (!!defaultData[key]) {\r\n        context.event.data[key] = defaultData[key];\r\n      }\r\n    }\r\n\r\n    if (next) {\r\n      next();\r\n    }\r\n  }\r\n}\r\n\n                                                                                                            \r\n\r\nexport class ErrorPlugin implements IEventPlugin {\r\n  public priority:number = 30;\r\n  public name:string = 'ErrorPlugin';\r\n\r\n  public run(context:EventPluginContext, next?:() => void): void {\r\n    var exception = context.contextData.getException();\r\n    if (!!exception) {\r\n      context.event.type = 'error';\r\n\r\n      if (!context.event.data['@error']) {\r\n        var parser = context.client.config.errorParser;\r\n        if (!parser) {\r\n          throw new Error('No error parser was defined.');\r\n        }\r\n\r\n        parser.parse(context, exception);\r\n      }\r\n    }\r\n\r\n    if (next) {\r\n      next();\r\n    }\r\n  }\r\n}\r\n\n                                                                                                            \r\n\r\nexport class DuplicateCheckerPlugin implements IEventPlugin {\r\n  public priority:number = 50;\r\n  public name:string = 'DuplicateCheckerPlugin';\r\n\r\n  public run(context:EventPluginContext, next?:() => void): void {\r\n    // TODO: Implement\r\n    if (next) {\r\n      next();\r\n    }\r\n  }\r\n}\r\n\n                                                                                                                                                                                                   \r\n\r\nexport class ModuleInfoPlugin implements IEventPlugin {\r\n  public priority:number = 40;\r\n  public name:string = 'ModuleInfoPlugin';\r\n\r\n  public run(context:EventPluginContext, next?:() => void): void {\r\n    var moduleCollector = context.client.config.moduleCollector;\r\n    if (context.event.data['@error'] && !context.event.data['@error'].modules && !!moduleCollector) {\r\n      var modules = moduleCollector.getModules(context);\r\n      if (modules && modules.length > 0) {\r\n        context.event.data['@error'].modules = modules;\r\n      }\r\n    }\r\n\r\n    if (next) {\r\n      next();\r\n    }\r\n  }\r\n}\r\n\nexport interface IRequestInfo {\r\n  user_agent?:string;\r\n  http_method?:string;\r\n  is_secure?:boolean;\r\n  host?:string;\r\n  port?:number;\r\n  path?:string;\r\n  referrer?:string;\r\n  client_ip_address?:string;\r\n  cookies?:any;\r\n  post_data?:any;\r\n  query_string?:any;\r\n  data?:any\r\n}\r\n\n                                                                                                                                                                       \r\n\r\nexport class RequestInfoPlugin implements IEventPlugin {\r\n  public priority:number = 60;\r\n  public name:string = 'RequestInfoPlugin';\r\n\r\n  public run(context:EventPluginContext, next?:() => void): void {\r\n    var requestInfoCollector = context.client.config.requestInfoCollector;\r\n    if (!context.event.data['@request'] && !!requestInfoCollector) {\r\n      var ri = requestInfoCollector.getRequestInfo(context);\r\n      if (!!ri) {\r\n        context.event.data['@request'] = ri;\r\n      }\r\n    }\r\n\r\n    if (next) {\r\n      next();\r\n    }\r\n  }\r\n}\r\n\n                                                                                                                                                                               \r\n\r\nexport class EnvironmentInfoPlugin implements IEventPlugin {\r\n  public priority:number = 70;\r\n  public name:string = 'EnvironmentInfoPlugin';\r\n\r\n  public run(context:EventPluginContext, next?:() => void): void {\r\n    if (!context.event.data['@environment'] && context.client.config.environmentInfoCollector) {\r\n      var ei = context.client.config.environmentInfoCollector.getEnvironmentInfo(context);\r\n      if (!!ei) {\r\n        context.event.data['@environment'] = ei;\r\n      }\r\n    }\r\n\r\n    if (next) {\r\n      next();\r\n    }\r\n  }\r\n}\r\n\n                                                                                                            \r\n\r\nexport class SubmissionMethodPlugin implements IEventPlugin {\r\n  public priority:number = 100;\r\n  public name:string = 'SubmissionMethodPlugin';\r\n\r\n  public run(context:EventPluginContext, next?:() => void): void {\r\n    var submissionMethod:string = context.contextData.getSubmissionMethod();\r\n    if (!!submissionMethod) {\r\n      context.event.data['@submission_method'] = submissionMethod;\r\n    }\r\n\r\n    if (next) {\r\n      next();\r\n    }\r\n  }\r\n}\r\n\nexport interface IUserDescription {\r\n  email_address?:string;\r\n  description?:string;\r\n  data?:any;\r\n}\r\n\nexport class SettingsResponse {\r\n  success:boolean = false;\r\n  settings:any;\r\n  settingsVersion:number = -1;\r\n  message:string;\r\n  exception:any;\r\n\r\n  constructor(success:boolean, settings:any, settingsVersion:number = -1, exception:any = null, message:string = null) {\r\n    this.success = success;\r\n    this.settings = settings;\r\n    this.settingsVersion = settingsVersion;\r\n    this.exception = exception;\r\n    this.message = message;\r\n  }\r\n}\r\n\nexport class SubmissionResponse {\r\n  success:boolean = false;\r\n  badRequest:boolean = false;\r\n  serviceUnavailable:boolean = false;\r\n  paymentRequired:boolean = false;\r\n  unableToAuthenticate:boolean = false;\r\n  notFound:boolean = false;\r\n  requestEntityTooLarge:boolean = false;\r\n  statusCode:number;\r\n  message:string;\r\n\r\n  constructor(statusCode:number, message?:string) {\r\n    this.statusCode = statusCode;\r\n    this.message = message;\r\n\r\n    this.success = statusCode >= 200 && statusCode <= 299;\r\n    this.badRequest = statusCode === 400;\r\n    this.serviceUnavailable = statusCode === 503;\r\n    this.paymentRequired = statusCode === 402;\r\n    this.unableToAuthenticate = statusCode === 401 || statusCode === 403;\r\n    this.notFound = statusCode === 404;\r\n    this.requestEntityTooLarge = statusCode === 413;\r\n  }\r\n}\r\n\n                                                                                                                                                                                                             \r\n\r\nimport os = require('os');\r\n\r\nexport class NodeEnvironmentInfoCollector implements IEnvironmentInfoCollector {\r\n  public getEnvironmentInfo(context:EventPluginContext): IEnvironmentInfo {\r\n    if (!os) {\r\n      return null;\r\n    }\r\n\r\n    var environmentInfo: IEnvironmentInfo = {\r\n      processor_count: os.cpus().length,\r\n      total_physical_memory: os.totalmem(),\r\n      available_physical_memory: os.freemem(),\r\n      command_line: process.argv.join(' '),\r\n      process_name: process.title,\r\n      process_id: process.pid + '',\r\n      process_memory_size: process.memoryUsage().heapTotal,\r\n      //thread_id: '',\r\n      architecture: os.arch(),\r\n      o_s_name: os.type(),\r\n      o_s_version: os.release(),\r\n      ip_address: this.getIpAddresses(),\r\n      machine_name: os.hostname(),\r\n      //install_id: '',\r\n      runtime_version: process.version,\r\n      data: {\r\n        loadavg: os.loadavg(),\r\n        platform: os.platform(),\r\n        tmpdir: os.tmpdir(),\r\n        uptime: os.uptime()\r\n      }\r\n    };\r\n\r\n    if ((<any>os).endianness) {\r\n      environmentInfo.data.endianness = (<any>os).endianness();\r\n    }\r\n\r\n    return environmentInfo;\r\n  }\r\n\r\n  private getIpAddresses():string {\r\n    var ips = [];\r\n    var interfaces = os.networkInterfaces();\r\n    Object.keys(interfaces).forEach((name) => {\r\n      interfaces[name].forEach((iface:any) => {\r\n        if ('IPv4' === iface.family && !iface.internal) {\r\n          ips.push(iface.address);\r\n        }\r\n      });\r\n    });\r\n\r\n    return ips.join(', ');\r\n  }\r\n}\r\n\n                                                                                                                                                                                                                \n\nimport nodestacktrace = require('stack-trace');\n\nexport class NodeErrorParser implements IErrorParser {\n  public parse(context:EventPluginContext, exception:Error): void {\n    if (!nodestacktrace) {\n      throw new Error('Unable to load the stack trace library.');\n    }\n\n    var stackFrames = nodestacktrace.parse(exception) || [];\n    var error:IError = {\n      type: exception.name,\n      message: exception.message,\n      stack_trace: this.getStackFrames(context, stackFrames)\n    };\n\n    context.event.data['@error'] = error;\n  }\n\n  private getStackFrames(context:EventPluginContext, stackFrames:any[]): IStackFrame[] {\n    var frames:IStackFrame[] = [];\n\n    for (var index = 0; index < stackFrames.length; index++) {\n      var frame = stackFrames[index];\n      frames.push({\n        name: frame.getMethodName() || frame.getFunctionName(),\n        //parameters: frame.args,\n        file_name: frame.getFileName(),\n        line_number: frame.getLineNumber(),\n        column: frame.getColumnNumber(),\n        declaring_type: frame.getTypeName(),\n        data: {\n          is_native: frame.isNative() || (!!frame.filename && frame.filename[0] !== '/' && frame.filename[0] !== '.')\n        }\n      });\n    }\n\n    return frames;\n  }\n}\n\n                                                                                                                                                                                                                              \r\n\r\nexport class NodeRequestInfoCollector implements IRequestInfoCollector {\r\n  getRequestInfo(context:EventPluginContext):IRequestInfo {\r\n    if (!context.contextData['@request']) {\r\n      return null;\r\n    }\r\n\r\n    var request = context.contextData['@request'];\r\n    var ri:IRequestInfo = {\r\n      client_ip_address: request.ip,\r\n      user_agent: request.headers['user-agent'],\r\n      is_secure: request.secure,\r\n      http_method: request.method,\r\n      host: request.hostname || request.host,\r\n      //port: TODO,\r\n      path: request.path,\r\n      post_data: request.body,\r\n      //referrer: TODO,\r\n      cookies: Utils.getCookies((request || {}).headers['cookie'], '; '),\r\n      query_string: request.params\r\n    };\r\n\r\n    return ri;\r\n  }\r\n}\r\n\n                                                                                                                                                                                                                                                                                                                                                                                      \n\nexport class SubmissionClientBase implements ISubmissionClient {\n  public submit(events:IEvent[], config:Configuration, callback:(SubmissionResponse) => void):void {\n    return this.sendRequest('POST', config.serverUrl, '/api/v2/events', config.apiKey, Utils.stringify(events), (status:number, message:string, data:string) => {\n      callback(new SubmissionResponse(status, message));\n    });\n  }\n\n  public submitDescription(referenceId:string, description:IUserDescription, config:Configuration, callback:(SubmissionResponse) => void):void {\n    var path = `/api/v2/events/by-ref/${encodeURIComponent(referenceId)}/user-description`;\n    return this.sendRequest('POST', config.serverUrl, path, config.apiKey, Utils.stringify(description), (status:number, message:string, data:string) => {\n      callback(new SubmissionResponse(status, message));\n    });\n  }\n\n  public getSettings(config:Configuration, callback:(SettingsResponse) => void):void {\n    return this.sendRequest('GET', config.serverUrl, '/api/v2/projects/config', config.apiKey, null, (status:number, message:string, data:string) => {\n        if (status !== 200) {\n          return callback(new SettingsResponse(false, null, -1, null, message));\n        }\n\n        var settings;\n        try {\n          settings = JSON.parse(data);\n        } catch (e) {\n          config.log.error(`Unable to parse settings: '${data}'`);\n        }\n\n        if (!settings || !settings.settings || !settings.version) {\n          return callback(new SettingsResponse(false, null, -1, null, 'Invalid configuration settings.'));\n        }\n\n        callback(new SettingsResponse(true, settings.settings, settings.version));\n    });\n  }\n\n  public sendRequest(method:string, host:string, path:string, data:string, apiKey:string, callback: (status:number, message:string, data?:string) => void): void {\n    callback(500, 'Not Implemented');\n  }\n}\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                            \r\n\r\nimport http = require('http');\r\nimport https = require('https');\r\nimport url = require('url');\r\n\r\nexport class NodeSubmissionClient extends SubmissionClientBase {\r\n  public sendRequest(method:string, host:string, path:string, apiKey:string, data:string, callback: (status:number, message:string, data?:string) => void): void {\r\n    function complete(response:http.IncomingMessage, data:string) {\r\n      var message:string;\r\n      if (response.statusCode === 0) {\r\n        message = 'Unable to connect to server.';\r\n      } else if (response.statusCode < 200 || response.statusCode > 299) {\r\n        message = response.statusMessage || (<any>response).message;\r\n      }\r\n\r\n      callback(response.statusCode || 500, message, data);\r\n    }\r\n\r\n    var parsedHost = url.parse(host);\r\n    var options:https.RequestOptions = {\r\n      auth: `client:${apiKey}`,\r\n      hostname: parsedHost.hostname,\r\n      method: method,\r\n      port: parsedHost.port && parseInt(parsedHost.port),\r\n      path: path\r\n    };\r\n\r\n    if (method === 'POST') {\r\n      options.headers = {\r\n        'Content-Type': 'application/json',\r\n        'Content-Length': data.length\r\n      }\r\n    }\r\n\r\n    var request:http.ClientRequest = https.request(options, (response:http.IncomingMessage) => {\r\n      var body = '';\r\n      response.on('data', chunk => body += chunk);\r\n      response.on('end', () => {\r\n        complete(response, body);\r\n      });\r\n    });\r\n\r\n    request.on('error', function(e) {\r\n      callback(500, e.message);\r\n    });\r\n\r\n    request.write(data);\r\n    request.end();\r\n  }\r\n}\r\n\nn\nexport class NodeBootstrapper implements IBootstrapper {\n  public register(): void {\n    if (!(typeof window === 'undefined' && typeof global !== 'undefined' && {}.toString.call(global) === '[object global]')) {\n      return;\n    }\n\n    var configDefaults = Configuration.defaults;\n    configDefaults.environmentInfoCollector = new NodeEnvironmentInfoCollector();\n    configDefaults.errorParser = new NodeErrorParser();\n    configDefaults.requestInfoCollector = new NodeRequestInfoCollector();\n    configDefaults.submissionClient = new NodeSubmissionClient();\n\n    process.on('uncaughtException', function(error) {\n      ExceptionlessClient.default.submitUnhandledException(error, 'uncaughtException');\n    });\n\n    process.on('beforeExit', (code:number) => {\n      var client = ExceptionlessClient.default;\n\n      var message = this.getExitCodeReason(code);\n      if (message !== null) {\n        client.submitLog('beforeExit', message, 'Error')\n      }\n\n      client.config.queue.process()\n    });\n  }\n\n  // exit codes: https://nodejs.org/api/process.html#process_event_exit\n  private getExitCodeReason(code:number): string {\n    if (code === 1) {\n      return 'Uncaught Fatal Exception';\n    }\n\n    if (code === 3) {\n      return 'Internal JavaScript Parse Error';\n    }\n\n    if (code === 4) {\n      return 'Internal JavaScript Evaluation Failure';\n    }\n\n    if (code === 5) {\n      return 'Fatal Exception';\n    }\n\n    if (code === 6) {\n      return 'Non-function Internal Exception Handler ';\n    }\n\n    if (code === 7) {\n      return 'Internal Exception Handler Run-Time Failure';\n    }\n\n    if (code === 8) {\n      return 'Uncaught Exception';\n    }\n\n    if (code === 9) {\n      return 'Invalid Argument';\n    }\n\n    if (code === 10) {\n      return 'Internal JavaScript Run-Time Failure';\n    }\n\n    if (code === 12) {\n      return 'Invalid Debug Argument';\n    }\n\n    if (code > 128) {\n      return 'Signal Exits';\n    }\n\n    return null;\n  }\n}\n\n                                                                                                                                                                                                                                                                   \n\nexport class WebErrorParser implements IErrorParser {\n  public parse(context:EventPluginContext, exception:Error): void {\n    var stackTrace:TraceKit.StackTrace = !!context.contextData['@@_TraceKit.StackTrace']\n      ? context.contextData['@@_TraceKit.StackTrace']\n      : TraceKit.computeStackTrace(exception, 25);\n\n    if (!stackTrace) {\n      throw new Error('Unable to parse the exceptions stack trace.');\n    }\n\n    var error:IError = {\n      type: stackTrace.name,\n      message: stackTrace.message || exception.message,\n      stack_trace: this.getStackFrames(context, stackTrace.stack || [])\n    };\n\n    context.event.data['@error'] = error;\n  }\n\n  private getStackFrames(context:EventPluginContext, stackFrames:TraceKit.StackFrame[]): IStackFrame[] {\n    var frames:IStackFrame[] = [];\n\n    for (var index = 0; index < stackFrames.length; index++) {\n      var frame = stackFrames[index];\n      frames.push({\n        name: frame.func,\n        parameters: this.getParameters(frame.args),\n        file_name: frame.url,\n        line_number: frame.line,\n        column: frame.column\n      });\n    }\n\n    return frames;\n  }\n\n  private getParameters(parameters:string|string[]): IParameter[] {\n    var params:string[] = (typeof parameters === 'string' ? [parameters] : parameters) || [];\n\n    var result:IParameter[] = [];\n    for (var index = 0; index < params.length; index++) {\n      result.push({ name: params[index] })\n    }\n\n    return result;\n  }\n}\n\n                                                                                                                                                                                                       \n\nexport class WebModuleCollector implements IModuleCollector {\n  public getModules(context:EventPluginContext): IModule[] {\n    if (document && document.getElementsByTagName) {\n      return null;\n    }\n\n    var modules:IModule[] = [];\n    var scripts = document.getElementsByTagName('script');\n    if (scripts && scripts.length > 0) {\n      for (var index = 0; index < scripts.length; index++) {\n        if (scripts[index].src) {\n          modules.push({\n            module_id: index,\n            name: scripts[index].src,\n            version: Utils.parseVersion(scripts[index].src)\n          });\n        } else if (!!scripts[index].innerHTML) {\n          modules.push({\n            module_id: index,\n            name: 'Script Tag',\n            version: Utils.getHashCode(scripts[index].innerHTML)\n          });\n        }\n      }\n    }\n\n    return modules;\n  }\n}\n\n                                                                                                                                                                                                                              \r\n\r\nexport class WebRequestInfoCollector implements IRequestInfoCollector {\r\n  public getRequestInfo(context:EventPluginContext): IRequestInfo {\r\n    if (!document || !navigator || !location) {\r\n      return null;\r\n    }\r\n\r\n    var requestInfo:IRequestInfo = {\r\n      user_agent: navigator.userAgent,\r\n      is_secure: location.protocol === 'https:',\r\n      host: location.hostname,\r\n      port: location.port && location.port !== '' ? parseInt(location.port) : 80,\r\n      path: location.pathname,\r\n      //client_ip_address: 'TODO',\r\n      cookies: Utils.getCookies(document.cookie, ', '),\r\n      query_string: Utils.parseQueryString(location.search.substring(1))\r\n    };\r\n\r\n    if (document.referrer && document.referrer !== '') {\r\n      requestInfo.referrer = document.referrer;\r\n    }\r\n  }\r\n}\r\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                     \n\ndeclare var XDomainRequest:{ new (); create(); };\n\nexport class DefaultSubmissionClient extends SubmissionClientBase {\n  private createRequest(method:string, url:string): XMLHttpRequest {\n    var xhr:any = new XMLHttpRequest();\n    if ('withCredentials' in xhr) {\n      xhr.open(method, url, true);\n    } else if (typeof XDomainRequest != 'undefined') {\n      xhr = new XDomainRequest();\n      xhr.open(method, url);\n    } else {\n      xhr = null;\n    }\n\n    if (xhr) {\n      if (method === 'POST' && xhr.setRequestHeader) {\n        xhr.setRequestHeader('Content-Type', 'application/json');\n      }\n\n      xhr.timeout = 10000;\n    }\n\n    return xhr;\n  }\n\n  public sendRequest(method:string, host:string, path:string, apiKey:string, data:string, callback: (status:number, message:string, data?:string) => void): void {\n    var isCompleted = false;\n    function complete(xhr:XMLHttpRequest) {\n      if (isCompleted) {\n        return;\n      } else {\n        isCompleted = true;\n      }\n\n      var message:string;\n      if (xhr.status === 0) {\n        message = 'Unable to connect to server.';\n      } else if (xhr.status < 200 || xhr.status > 299) {\n        if (!!xhr.responseBody && !!xhr.responseBody.message) {\n          message = xhr.responseBody.message;\n        } else if (!!xhr.responseText && xhr.responseText.indexOf('message') !== -1) {\n          try {\n            message =  JSON.parse(xhr.responseText).message;\n          } catch (e) {\n            message = xhr.responseText;\n          }\n        } else {\n          message = xhr.statusText;\n        }\n      }\n\n      callback(xhr.status || 500, message, xhr.responseText);\n    }\n\n    var url = `${host}${path}?access_token=${encodeURIComponent(apiKey)}`;\n    var xhr = this.createRequest(method || 'POST', url);\n    if (!xhr) {\n      return callback(503,'CORS not supported.');\n    }\n\n    if ('withCredentials' in xhr) {\n      xhr.onreadystatechange = () => {\n        // xhr not ready.\n        if (xhr.readyState !== 4) {\n          return;\n        }\n\n        complete(xhr);\n      };\n    }\n\n    xhr.ontimeout = () => complete(xhr);\n    xhr.onerror = () => complete(xhr);\n    xhr.onload = () => complete(xhr);\n\n    xhr.send(data);\n  }\n}\n\nn\nexport class WindowBootstrapper implements IBootstrapper {\n  public register(): void {\n    if (typeof window === 'undefined' || typeof document === 'undefined') {\n      return;\n    }\n\n    var configDefaults = Configuration.defaults;\n    var settings = this.getDefaultsSettingsFromScriptTag();\n    if (settings && (settings.apiKey || settings.serverUrl)) {\n      configDefaults.apiKey = settings.apiKey;\n      configDefaults.serverUrl = settings.serverUrl;\n    }\n\n    configDefaults.errorParser = new WebErrorParser();\n    configDefaults.moduleCollector = new WebModuleCollector();\n    configDefaults.requestInfoCollector = new WebRequestInfoCollector();\n    configDefaults.submissionClient = new DefaultSubmissionClient();\n\n    TraceKit.report.subscribe(this.processUnhandledException);\n    TraceKit.extendToAsynchronousCallbacks();\n\n    if (typeof $ !== 'undefined' && $(document)) {\n      $(document).ajaxError(this.processJQueryAjaxError);\n    }\n  }\n\n  private getDefaultsSettingsFromScriptTag(): IConfigurationSettings {\n    if (!document || !document.getElementsByTagName) {\n      return null;\n    }\n\n    var scripts = document.getElementsByTagName('script');\n    for (var index = 0; index < scripts.length; index++) {\n      if (scripts[index].src && scripts[index].src.indexOf('/exceptionless') > -1) {\n        return Utils.parseQueryString(scripts[index].src.split('?').pop());\n      }\n    }\n    return null;\n  }\n\n  private processUnhandledException(stackTrace:TraceKit.StackTrace, options): void {\n    var builder = ExceptionlessClient.default.createUnhandledException(new Error(stackTrace.message || (options || {}).status || 'Script error'), 'onerror');\n    builder.pluginContextData['@@_TraceKit.StackTrace'] = stackTrace;\n    builder.submit();\n  }\n\n  private processJQueryAjaxError(event, xhr, settings, error): void {\n    var client = ExceptionlessClient.default;\n    if (xhr.status === 404) {\n      client.submitNotFound(settings.url);\n    } else if (xhr.status !== 401) {\n      client.createUnhandledException(error, 'JQuery.ajaxError')\n        .setSource(settings.url)\n        .setProperty('status', xhr.status)\n        .setProperty('request', settings.data)\n        .setProperty('response', xhr.responseText && xhr.responseText.slice ? xhr.responseText.slice(0, 1024) : undefined)\n        .submit();\n    }\n  }\n}\n\ndeclare var $;\n\nr\n\r\nnew NodeBootstrapper().register();\r\nnew WindowBootstrapper().register();\r\n(<any>Error).stackTraceLimit = Infinity;\r\n\n",null],"sourceRoot":"/source/"}