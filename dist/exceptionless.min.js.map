{"version":3,"sources":["es6-promise.js","stackframe.js","error-stack-parser.js","stack-generator.js","stacktrace-gps.js","stacktrace.js","exceptionless.js"],"names":["lib$es6$promise$utils$$objectOrFunction","x","lib$es6$promise$utils$$isFunction","lib$es6$promise$utils$$isMaybeThenable","lib$es6$promise$asap$$asap","callback","arg","lib$es6$promise$asap$$queue","lib$es6$promise$asap$$len","lib$es6$promise$asap$$scheduleFlush","lib$es6$promise$asap$$useNextTick","nextTick","process","version","versions","node","match","Array","isArray","setImmediate","lib$es6$promise$asap$$flush","lib$es6$promise$asap$$useVertxTimer","lib$es6$promise$asap$$vertxNext","lib$es6$promise$asap$$useMutationObserver","iterations","observer","lib$es6$promise$asap$$BrowserMutationObserver","document","createTextNode","observe","characterData","data","lib$es6$promise$asap$$useMessageChannel","channel","MessageChannel","port1","onmessage","port2","postMessage","lib$es6$promise$asap$$useSetTimeout","setTimeout","i","undefined","lib$es6$promise$asap$$attemptVertex","r","require","vertx","runOnLoop","runOnContext","e","lib$es6$promise$$internal$$noop","lib$es6$promise$$internal$$selfFullfillment","TypeError","lib$es6$promise$$internal$$cannotReturnOwn","lib$es6$promise$$internal$$getThen","promise","then","error","lib$es6$promise$$internal$$GET_THEN_ERROR","lib$es6$promise$$internal$$tryThen","value","fulfillmentHandler","rejectionHandler","call","lib$es6$promise$$internal$$handleForeignThenable","thenable","lib$es6$promise$asap$$default","sealed","lib$es6$promise$$internal$$resolve","lib$es6$promise$$internal$$fulfill","reason","lib$es6$promise$$internal$$reject","_label","lib$es6$promise$$internal$$handleOwnThenable","_state","lib$es6$promise$$internal$$FULFILLED","_result","lib$es6$promise$$internal$$REJECTED","lib$es6$promise$$internal$$subscribe","lib$es6$promise$$internal$$handleMaybeThenable","maybeThenable","constructor","lib$es6$promise$$internal$$publishRejection","_onerror","lib$es6$promise$$internal$$publish","lib$es6$promise$$internal$$PENDING","_subscribers","length","parent","child","onFulfillment","onRejection","subscribers","settled","detail","lib$es6$promise$$internal$$invokeCallback","lib$es6$promise$$internal$$ErrorObject","this","lib$es6$promise$$internal$$tryCatch","lib$es6$promise$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","lib$es6$promise$$internal$$initializePromise","resolver","lib$es6$promise$enumerator$$Enumerator","Constructor","input","enumerator","_instanceConstructor","_validateInput","_input","_remaining","_init","_enumerate","_validationError","lib$es6$promise$promise$all$$all","entries","lib$es6$promise$enumerator$$default","lib$es6$promise$promise$race$$race","lib$es6$promise$utils$$isArray","resolve","lib$es6$promise$promise$resolve$$resolve","object","lib$es6$promise$promise$reject$$reject","lib$es6$promise$promise$$needsResolver","lib$es6$promise$promise$$needsNew","lib$es6$promise$promise$$Promise","_id","lib$es6$promise$promise$$counter","lib$es6$promise$polyfill$$polyfill","local","global","self","Function","Error","P","Promise","Object","prototype","toString","cast","lib$es6$promise$promise$$default","lib$es6$promise$utils$$_isArray","lib$es6$promise$asap$$browserWindow","window","lib$es6$promise$asap$$browserGlobal","MutationObserver","WebKitMutationObserver","lib$es6$promise$asap$$isNode","lib$es6$promise$asap$$isWorker","Uint8ClampedArray","importScripts","_eachEntry","entry","c","_settledAt","_willSettleAt","state","lib$es6$promise$promise$all$$default","lib$es6$promise$promise$race$$default","lib$es6$promise$promise$resolve$$default","lib$es6$promise$promise$reject$$default","all","race","reject","result","arguments","catch","lib$es6$promise$polyfill$$default","lib$es6$promise$umd$$ES6Promise","polyfill","define","module","root","factory","amd","exports","StackFrame","_isNumber","n","isNaN","parseFloat","isFinite","functionName","args","fileName","lineNumber","columnNumber","setFunctionName","setArgs","setFileName","setLineNumber","setColumnNumber","getFunctionName","v","String","getArgs","getFileName","getLineNumber","Number","getColumnNumber","join","ErrorStackParser","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","parse","stacktrace","parseOpera","stack","parseV8OrIE","parseFFOrSafari","extractLocation","urlLike","locationParts","split","lastNumber","pop","possibleNumber","slice","map","line","tokens","replace","filter","shift","message","indexOf","parseOpera9","parseOpera11","parseOpera10","lineRE","lines","len","exec","push","argsRaw","functionCall","StackGenerator","backtrace","opts","maxStackSize","curr","callee","test","RegExp","$1","caller","StackTraceGPS","SourceMap","ES6Promise","_createXMLHTTPObject","xmlhttp","XMLHttpFactories","XMLHttpRequest","ActiveXObject","_xdr","url","errback","req","open","onerror","onreadystatechange","readyState","status","responseText","send","_findFunctionName","source","m","commentPos","reFunctionDeclaration","reFunctionExpression","reFunctionEvaluation","code","maxLines","Math","min","substr","_ensureSupportedEnvironment","defineProperty","create","_ensureStackFrameIsLegit","stackframe","_findSourceMappingURL","_newLocationInfoFromSourceMap","rawSourceMap","loc","SourceMapConsumer","originalPositionFor","column","name","sourceCache","_get","location","offline","bind","pinpoint","getMappedLocation","findFunctionName","guessedFunctionName","StackTrace","_merge","first","second","target","forEach","obj","prop","hasOwnProperty","_isShapedLikeParsableError","err","_options","get","fromError","generateArtificially","stackframes","sf","resolveOriginal","_","stackFrames","instrument","fn","thisArg","__stacktraceOriginalFn","instrumented","apply","deinstrument","Exceptionless","ExceptionlessClient","apiKey","serverUrl","settings","getSettingsFromScriptTag","config","Configuration","createException","exception","pluginContextData","ContextData","setException","createEvent","setType","submitException","submit","createUnhandledException","builder","markAsUnhandledError","submitUnhandledException","createFeatureUsage","feature","setSource","submitFeatureUsage","createLog","sourceOrMessage","level","setMessage","setProperty","submitLog","createNotFound","resource","submitNotFound","createSessionStart","sessionId","setSessionId","submitSessionStart","createSessionEnd","submitSessionEnd","EventBuilder","date","Date","submitEvent","event","_this","enabled","log","info","context","EventPluginContext","EventPluginManager","run","cancel","reference_id","type","queue","enqueue","lastReferenceIdManager","setLast","getLastReferenceId","getLast","register","oldOnErrorHandler","filename","lineno","colno","stack_trace","file_name","line_number","scripts","getElementsByTagName","index","src","Utils","parseQueryString","_instance","enumerable","configurable","_enabled","_serverUrl","_plugins","InMemoryLastReferenceIdManager","NullLog","submissionBatchSize","submissionClient","SubmissionClient","storage","InMemoryStorage","defaultTags","defaultData","EventQueue","addDefaultPlugins","_apiKey","set","sort","p1","p2","priority","addPlugin","pluginOrName","pluginAction","plugin","guid","pluginExists","removePlugin","splice","useReferenceIds","ReferenceIdPlugin","warn","ConsoleLog","console","_processingQueue","_config","ensureQueueTimer","areQueuedItemsDiscarded","key","queuePath","toJSON","randomNumber","save","events","response","processSubmissionResponse","ex","suspendProcessing","success","serviceUnavailable","requeueEvents","paymentRequired","unableToAuthenticate","notFound","badRequest","requestEntityTooLarge","max","round","_queueTimer","setInterval","onProcessQueue","isQueueProcessingSuspended","durationInMinutes","discardFutureQueuedItems","clearQueue","_suspendProcessingUntil","getTime","_discardQueuedItemsUntil","clear","Exception","encodeURIComponent","sendRequest","JSON","stringify","xhr","SubmissionResponse","getResponseMessage","submitDescription","referenceId","description","getSettings","SettingsResponse","responseBody","statusText","createRequest","method","XDomainRequest","setRequestHeader","timeout","ontimeout","onload","statusCode","settingsVersion","_items","path","searchPattern","limit","results","regex","count","_lastReferenceId","clearLast","eventId","client","isValidIdentifier","session_id","setReferenceId","setGeo","latitude","longitude","geo","setValue","addTags","tags","_i","markAsCritical","critical","charCodeAt","isDigit","isLetter","isMinus","getException","hasException","setSubmissionMethod","getSubmissionMethod","contextData","plugins","reduce","ConfigurationDefaultsPlugin","ErrorPlugin","DuplicateCheckerPlugin","ModuleInfoPlugin","RequestInfoPlugin","SubmissionMethodPlugin","tag","substring","processError","onParseError","getStackFrames","frames","modules","module_id","parseVersion","innerHTML","getHashCode","requestInfo","user_agent","navigator","userAgent","is_secure","protocol","host","hostname","port","parseInt","pathname","cookies","getCookies","query_string","search","referrer","cookie","submissionMethod","hash","character","s4","floor","random","versionRegex","matches","query","pairs","pair","decodeURIComponent"],"mappings":"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","file":"exceptionless.min.js","sourcesContent":["/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   2.1.0\n */\n\n(function() {\n    \"use strict\";\n    function lib$es6$promise$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function lib$es6$promise$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function lib$es6$promise$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var lib$es6$promise$utils$$_isArray;\n    if (!Array.isArray) {\n      lib$es6$promise$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      lib$es6$promise$utils$$_isArray = Array.isArray;\n    }\n\n    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n    var lib$es6$promise$asap$$len = 0;\n    var lib$es6$promise$asap$$toString = {}.toString;\n    var lib$es6$promise$asap$$vertxNext;\n    function lib$es6$promise$asap$$asap(callback, arg) {\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n      lib$es6$promise$asap$$len += 2;\n      if (lib$es6$promise$asap$$len === 2) {\n        // If len is 2, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        lib$es6$promise$asap$$scheduleFlush();\n      }\n    }\n\n    var lib$es6$promise$asap$$default = lib$es6$promise$asap$$asap;\n\n    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n    var lib$es6$promise$asap$$isNode = typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n    // test for web worker but not in IE10\n    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function lib$es6$promise$asap$$useNextTick() {\n      var nextTick = process.nextTick;\n      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n      // setImmediate should be used instead instead\n      var version = process.versions.node.match(/^(?:(\\d+)\\.)?(?:(\\d+)\\.)?(\\*|\\d+)$/);\n      if (Array.isArray(version) && version[1] === '0' && version[2] === '10') {\n        nextTick = setImmediate;\n      }\n      return function() {\n        nextTick(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    // vertx\n    function lib$es6$promise$asap$$useVertxTimer() {\n      return function() {\n        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    function lib$es6$promise$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function lib$es6$promise$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = lib$es6$promise$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function lib$es6$promise$asap$$useSetTimeout() {\n      return function() {\n        setTimeout(lib$es6$promise$asap$$flush, 1);\n      };\n    }\n\n    var lib$es6$promise$asap$$queue = new Array(1000);\n    function lib$es6$promise$asap$$flush() {\n      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {\n        var callback = lib$es6$promise$asap$$queue[i];\n        var arg = lib$es6$promise$asap$$queue[i+1];\n\n        callback(arg);\n\n        lib$es6$promise$asap$$queue[i] = undefined;\n        lib$es6$promise$asap$$queue[i+1] = undefined;\n      }\n\n      lib$es6$promise$asap$$len = 0;\n    }\n\n    function lib$es6$promise$asap$$attemptVertex() {\n      try {\n        var r = require;\n        var vertx = r('vertx');\n        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n        return lib$es6$promise$asap$$useVertxTimer();\n      } catch(e) {\n        return lib$es6$promise$asap$$useSetTimeout();\n      }\n    }\n\n    var lib$es6$promise$asap$$scheduleFlush;\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (lib$es6$promise$asap$$isNode) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n    } else if (lib$es6$promise$asap$$isWorker) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n    } else if (lib$es6$promise$asap$$browserWindow === undefined && typeof require === 'function') {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertex();\n    } else {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n    }\n\n    function lib$es6$promise$$internal$$noop() {}\n\n    var lib$es6$promise$$internal$$PENDING   = void 0;\n    var lib$es6$promise$$internal$$FULFILLED = 1;\n    var lib$es6$promise$$internal$$REJECTED  = 2;\n\n    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$selfFullfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function lib$es6$promise$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.');\n    }\n\n    function lib$es6$promise$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n        return lib$es6$promise$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n       lib$es6$promise$asap$$default(function(promise) {\n        var sealed = false;\n        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            lib$es6$promise$$internal$$resolve(promise, value);\n          } else {\n            lib$es6$promise$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          lib$es6$promise$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          lib$es6$promise$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n      } else if (promise._state === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, thenable._result);\n      } else {\n        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable) {\n      if (maybeThenable.constructor === promise.constructor) {\n        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        var then = lib$es6$promise$$internal$$getThen(maybeThenable);\n\n        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        } else if (lib$es6$promise$utils$$isFunction(then)) {\n          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function lib$es6$promise$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFullfillment());\n      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n        lib$es6$promise$$internal$$handleMaybeThenable(promise, value);\n      } else {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      lib$es6$promise$$internal$$publish(promise);\n    }\n\n    function lib$es6$promise$$internal$$fulfill(promise, value) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = lib$es6$promise$$internal$$FULFILLED;\n\n      if (promise._subscribers.length !== 0) {\n        lib$es6$promise$asap$$default(lib$es6$promise$$internal$$publish, promise);\n      }\n    }\n\n    function lib$es6$promise$$internal$$reject(promise, reason) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n      promise._state = lib$es6$promise$$internal$$REJECTED;\n      promise._result = reason;\n\n      lib$es6$promise$asap$$default(lib$es6$promise$$internal$$publishRejection, promise);\n    }\n\n    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        lib$es6$promise$asap$$default(lib$es6$promise$$internal$$publish, parent);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function lib$es6$promise$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = lib$es6$promise$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n\n        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      } else if (failed) {\n        lib$es6$promise$$internal$$reject(promise, error);\n      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        lib$es6$promise$$internal$$reject(promise, e);\n      }\n    }\n\n    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n      var enumerator = this;\n\n      enumerator._instanceConstructor = Constructor;\n      enumerator.promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (enumerator._validateInput(input)) {\n        enumerator._input     = input;\n        enumerator.length     = input.length;\n        enumerator._remaining = input.length;\n\n        enumerator._init();\n\n        if (enumerator.length === 0) {\n          lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n        } else {\n          enumerator.length = enumerator.length || 0;\n          enumerator._enumerate();\n          if (enumerator._remaining === 0) {\n            lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n          }\n        }\n      } else {\n        lib$es6$promise$$internal$$reject(enumerator.promise, enumerator._validationError());\n      }\n    }\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validateInput = function(input) {\n      return lib$es6$promise$utils$$isArray(input);\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validationError = function() {\n      return new Error('Array Methods must be provided an Array');\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._init = function() {\n      this._result = new Array(this.length);\n    };\n\n    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {\n      var enumerator = this;\n\n      var length  = enumerator.length;\n      var promise = enumerator.promise;\n      var input   = enumerator._input;\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        enumerator._eachEntry(input[i], i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var enumerator = this;\n      var c = enumerator._instanceConstructor;\n\n      if (lib$es6$promise$utils$$isMaybeThenable(entry)) {\n        if (entry.constructor === c && entry._state !== lib$es6$promise$$internal$$PENDING) {\n          entry._onerror = null;\n          enumerator._settledAt(entry._state, i, entry._result);\n        } else {\n          enumerator._willSettleAt(c.resolve(entry), i);\n        }\n      } else {\n        enumerator._remaining--;\n        enumerator._result[i] = entry;\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var enumerator = this;\n      var promise = enumerator.promise;\n\n      if (promise._state === lib$es6$promise$$internal$$PENDING) {\n        enumerator._remaining--;\n\n        if (state === lib$es6$promise$$internal$$REJECTED) {\n          lib$es6$promise$$internal$$reject(promise, value);\n        } else {\n          enumerator._result[i] = value;\n        }\n      }\n\n      if (enumerator._remaining === 0) {\n        lib$es6$promise$$internal$$fulfill(promise, enumerator._result);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n      });\n    };\n    function lib$es6$promise$promise$all$$all(entries) {\n      return new lib$es6$promise$enumerator$$default(this, entries).promise;\n    }\n    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n    function lib$es6$promise$promise$race$$race(entries) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (!lib$es6$promise$utils$$isArray(entries)) {\n        lib$es6$promise$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n        return promise;\n      }\n\n      var length = entries.length;\n\n      function onFulfillment(value) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      }\n\n      function onRejection(reason) {\n        lib$es6$promise$$internal$$reject(promise, reason);\n      }\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        lib$es6$promise$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n      }\n\n      return promise;\n    }\n    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n    function lib$es6$promise$promise$resolve$$resolve(object) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$resolve(promise, object);\n      return promise;\n    }\n    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n    function lib$es6$promise$promise$reject$$reject(reason) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$reject(promise, reason);\n      return promise;\n    }\n    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n\n    var lib$es6$promise$promise$$counter = 0;\n\n    function lib$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function lib$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise’s eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function lib$es6$promise$promise$$Promise(resolver) {\n      this._id = lib$es6$promise$promise$$counter++;\n      this._state = undefined;\n      this._result = undefined;\n      this._subscribers = [];\n\n      if (lib$es6$promise$$internal$$noop !== resolver) {\n        if (!lib$es6$promise$utils$$isFunction(resolver)) {\n          lib$es6$promise$promise$$needsResolver();\n        }\n\n        if (!(this instanceof lib$es6$promise$promise$$Promise)) {\n          lib$es6$promise$promise$$needsNew();\n        }\n\n        lib$es6$promise$$internal$$initializePromise(this, resolver);\n      }\n    }\n\n    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n\n    lib$es6$promise$promise$$Promise.prototype = {\n      constructor: lib$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: function(onFulfillment, onRejection) {\n        var parent = this;\n        var state = parent._state;\n\n        if (state === lib$es6$promise$$internal$$FULFILLED && !onFulfillment || state === lib$es6$promise$$internal$$REJECTED && !onRejection) {\n          return this;\n        }\n\n        var child = new this.constructor(lib$es6$promise$$internal$$noop);\n        var result = parent._result;\n\n        if (state) {\n          var callback = arguments[state - 1];\n          lib$es6$promise$asap$$default(function(){\n            lib$es6$promise$$internal$$invokeCallback(state, child, callback, result);\n          });\n        } else {\n          lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n        }\n\n        return child;\n      },\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n    function lib$es6$promise$polyfill$$polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n          local = global;\n      } else if (typeof self !== 'undefined') {\n          local = self;\n      } else {\n          try {\n              local = Function('return this')();\n          } catch (e) {\n              throw new Error('polyfill failed because global object is unavailable in this environment');\n          }\n      }\n\n      var P = local.Promise;\n\n      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n        return;\n      }\n\n      local.Promise = lib$es6$promise$promise$$default;\n    }\n    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n\n    var lib$es6$promise$umd$$ES6Promise = {\n      'Promise': lib$es6$promise$promise$$default,\n      'polyfill': lib$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return lib$es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = lib$es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n    }\n\n    lib$es6$promise$polyfill$$default();\n}).call(this);\n\n","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function () {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function StackFrame(functionName, args, fileName, lineNumber, columnNumber) {\n        if (functionName !== undefined) {\n            this.setFunctionName(functionName);\n        }\n        if (args !== undefined) {\n            this.setArgs(args);\n        }\n        if (fileName !== undefined) {\n            this.setFileName(fileName);\n        }\n        if (lineNumber !== undefined) {\n            this.setLineNumber(lineNumber);\n        }\n        if (columnNumber !== undefined) {\n            this.setColumnNumber(columnNumber);\n        }\n    }\n\n    StackFrame.prototype = {\n        getFunctionName: function () {\n            return this.functionName;\n        },\n        setFunctionName: function (v) {\n            this.functionName = String(v);\n        },\n\n        getArgs: function () {\n            return this.args;\n        },\n        setArgs: function (v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        // NOTE: Property name may be misleading as it includes the path,\n        // but it somewhat mirrors V8's JavaScriptStackTraceApi\n        // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's\n        // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14\n        getFileName: function () {\n            return this.fileName;\n        },\n        setFileName: function (v) {\n            this.fileName = String(v);\n        },\n\n        getLineNumber: function () {\n            return this.lineNumber;\n        },\n        setLineNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Line Number must be a Number');\n            }\n            this.lineNumber = Number(v);\n        },\n\n        getColumnNumber: function () {\n            return this.columnNumber;\n        },\n        setColumnNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Column Number must be a Number');\n            }\n            this.columnNumber = Number(v);\n        },\n\n        toString: function() {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    return StackFrame;\n}));\n","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /\\S+\\:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /\\s+at /;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         * @param error {Error}\n         * @return Array[StackFrame]\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack && error.stack.match(FIREFOX_SAFARI_STACK_REGEXP)) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        /**\n         * Separate line and column numbers from a URL-like string.\n         * @param urlLike String\n         * @return Array[String]\n         */\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            var locationParts = urlLike.split(':');\n            var lastNumber = locationParts.pop();\n            var possibleNumber = locationParts[locationParts.length - 1];\n            if (!isNaN(parseFloat(possibleNumber)) && isFinite(possibleNumber)) {\n                var lineNumber = locationParts.pop();\n                return [locationParts.join(':'), lineNumber, lastNumber];\n            } else {\n                return [locationParts.join(':'), lastNumber, undefined];\n            }\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            return error.stack.split('\\n').slice(1).map(function (line) {\n                var tokens = line.replace(/^\\s+/, '').split(/\\s+/).slice(1);\n                var locationParts = this.extractLocation(tokens.pop().replace(/[\\(\\)\\s]/g, ''));\n                var functionName = (!tokens[0] || tokens[0] === 'Anonymous') ? undefined : tokens[0];\n                return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2]);\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            return error.stack.split('\\n').filter(function (line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP);\n            }, this).map(function (line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = tokens.shift() || undefined;\n                return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2]);\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame(undefined, undefined, match[2], match[1]));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame(match[3] || undefined, undefined, match[2], match[1]));\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            return error.stack.split('\\n').filter(function (line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) &&\n                    !line.match(/^Error created at/);\n            }, this).map(function (line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ? undefined : argsRaw.split(',');\n                return new StackFrame(functionName, args, locationParts[0], locationParts[1], locationParts[2]);\n            }, this);\n        }\n    };\n}));\n\n","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n    if (typeof define === 'function' && define.amd) {\n        define('stack-generator', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.StackGenerator = factory(root.StackFrame);\n    }\n}(this, function (StackFrame) {\n    return {\n        backtrace: function StackGenerator$$backtrace(opts) {\n            var stack = [];\n            var maxStackSize = 10;\n\n            if (typeof opts === 'object' && typeof opts.maxStackSize === 'number') {\n                maxStackSize = opts.maxStackSize;\n            }\n\n            var curr = arguments.callee;\n            while (curr && stack.length < maxStackSize) {\n                var args = [].slice.call(curr['arguments']);\n                if (/function(?:\\s+([\\w$]+))?\\s*\\(/.test(curr.toString())) {\n                    stack.push(new StackFrame(RegExp.$1 || undefined, args));\n                } else {\n                    stack.push(new StackFrame(undefined, args));\n                }\n\n                try {\n                    curr = curr.caller;\n                } catch (e) {\n                    break;\n                }\n            }\n            return stack;\n        }\n    };\n}));\n","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n    if (typeof define === 'function' && define.amd) {\n        define('stacktrace-gps', ['source-map', 'es6-promise', 'stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('source-map/lib/source-map/source-map-consumer'), require('es6-promise'), require('stackframe'));\n    } else {\n        root.StackTraceGPS = factory(root.SourceMap, root.ES6Promise, root.StackFrame);\n    }\n}(this, function (SourceMap, ES6Promise) {\n    'use strict';\n    ES6Promise.polyfill();\n    var Promise = ES6Promise.Promise;\n\n    /**\n     * Create XHR or equivalent object for this environment.\n     * @returns XMLHttpRequest, XDomainRequest or ActiveXObject\n     * @private\n     */\n    function _createXMLHTTPObject() {\n        var xmlhttp;\n        var XMLHttpFactories = [\n            function () {\n                return new XMLHttpRequest();\n            }, function () {\n                return new ActiveXObject('Microsoft.XMLHTTP');\n            }\n        ];\n        for (var i = 0; i < XMLHttpFactories.length; i++) {\n            try {\n                xmlhttp = XMLHttpFactories[i]();\n                // Use memoization to cache the factory\n                _createXMLHTTPObject = XMLHttpFactories[i]; // jshint ignore:line\n                return xmlhttp;\n            } catch (e) {\n            }\n        }\n    }\n\n    /**\n     * Make a X-Domain request to url and callback.\n     *\n     * @param url [String]\n     * @param callback [Function] to callback on completion\n     * @param errback [Function] to callback on error\n     */\n    function _xdr(url, callback, errback) {\n        var req = _createXMLHTTPObject();\n        req.open('get', url);\n        req.onerror = errback;\n        req.onreadystatechange = function onreadystatechange() {\n            if (req.readyState === 4) {\n                if (req.status >= 200 && req.status < 400) {\n                    return callback(req.responseText);\n                } else {\n                    errback(new Error('Unable to retrieve ' + url));\n                }\n            }\n        };\n        req.send();\n    }\n\n    function _findFunctionName(source, lineNumber, columnNumber) {\n        // function {name}({args}) m[1]=name m[2]=args\n        var reFunctionDeclaration = /function\\s+([^(]*?)\\s*\\(([^)]*)\\)/;\n        // {name} = function ({args}) TODO args capture\n        var reFunctionExpression = /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*function\\b/;\n        // {name} = eval()\n        var reFunctionEvaluation = /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*(?:eval|new Function)\\b/;\n        var lines = source.split(\"\\n\");\n\n        // Walk backwards in the source lines until we find the line which matches one of the patterns above\n        var code = '', line, maxLines = Math.min(lineNumber, 20), m, commentPos;\n        for (var i = 0; i < maxLines; ++i) {\n            // lineNo is 1-based, source[] is 0-based\n            line = lines[lineNumber - i - 1];\n            commentPos = line.indexOf('//');\n            if (commentPos >= 0) {\n                line = line.substr(0, commentPos);\n            }\n\n            if (line) {\n                code = line + code;\n                m = reFunctionExpression.exec(code);\n                if (m && m[1]) {\n                    return m[1];\n                }\n                m = reFunctionDeclaration.exec(code);\n                if (m && m[1]) {\n                    //return m[1] + \"(\" + (m[2] || \"\") + \")\";\n                    return m[1];\n                }\n                m = reFunctionEvaluation.exec(code);\n                if (m && m[1]) {\n                    return m[1];\n                }\n            }\n        }\n        return undefined;\n    }\n\n    function _ensureSupportedEnvironment() {\n        if (typeof Object.defineProperty !== 'function' || typeof Object.create !== 'function') {\n            throw new Error('Unable to consume source maps in older browsers');\n        }\n    }\n\n    function _ensureStackFrameIsLegit(stackframe) {\n        if (typeof stackframe !== 'object') {\n            throw new TypeError('Given StackFrame is not an object');\n        } else if (typeof stackframe.fileName !== 'string') {\n            throw new TypeError('Given file name is not a String');\n        } else if (typeof stackframe.lineNumber !== 'number' || stackframe.lineNumber % 1 !== 0 || stackframe.lineNumber < 1) {\n            throw new TypeError('Given line number must be a positive integer');\n        } else if (typeof stackframe.columnNumber !== 'number' || stackframe.columnNumber % 1 !== 0 || stackframe.columnNumber < 0) {\n            throw new TypeError('Given column number must be a non-negative integer');\n        }\n        return true;\n    }\n\n    function _findSourceMappingURL(source) {\n        var m = /\\/\\/[#@] ?sourceMappingURL=([^\\s'\"]+)$/.exec(source);\n        if (m && m[1]) {\n            return m[1];\n        } else {\n            throw new Error('sourceMappingURL not found');\n        }\n    }\n\n    function _newLocationInfoFromSourceMap(rawSourceMap, args, lineNumber, columnNumber) {\n        var loc = new SourceMap.SourceMapConsumer(rawSourceMap)\n            .originalPositionFor({line: lineNumber, column: columnNumber});\n        return new StackFrame(loc.name, args, loc.source, loc.line, loc.column);\n    }\n\n    /**\n     * @param opts: [Object] options.\n     *      opts.sourceCache = {url: \"Source String\"} => preload source cache\n     *      opts.offline = True to prevent network requests.\n     *              Best effort without sources or source maps.\n     */\n    return function StackTraceGPS(opts) {\n        if (!(this instanceof StackTraceGPS)) {\n            return new StackTraceGPS(opts);\n        }\n        opts = opts || {};\n\n        this.sourceCache = opts.sourceCache || {};\n\n        this._get = function _get(location) {\n            return new Promise(function (resolve, reject) {\n                if (this.sourceCache[location]) {\n                    resolve(this.sourceCache[location]);\n                } else if (opts.offline) {\n                    reject(new Error('Cannot make network requests in offline mode'));\n                } else {\n                    _xdr(location, function (source) {\n                        this.sourceCache[location] = source;\n                        resolve(source);\n                    }.bind(this), reject);\n                }\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, enhance function name and use source maps for a\n         * better StackFrame.\n         *\n         * @param stackframe - {StackFrame}-like object\n         *      {fileName: 'path/to/file.js', lineNumber: 100, columnNumber: 5}\n         * @return StackFrame with source-mapped location\n         */\n        this.pinpoint = function StackTraceGPS$$pinpoint(stackframe) {\n            return this.getMappedLocation(stackframe)\n                .then(this.findFunctionName.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, guess function name from location information.\n         *\n         * @param stackframe - {StackFrame}-like object\n         *      {fileName: 'path/to/file.js', lineNumber: 100, columnNumber: 5}\n         * @return StackFrame with guessed function name\n         */\n        this.findFunctionName = function StackTraceGPS$$findFunctionName(stackframe) {\n            return new Promise(function (resolve, reject) {\n                _ensureStackFrameIsLegit(stackframe);\n                this._get(stackframe.fileName).then(function getSourceCallback(source) {\n                    var guessedFunctionName = _findFunctionName(source, stackframe.lineNumber, stackframe.columnNumber);\n                    resolve(new StackFrame(guessedFunctionName, stackframe.args, stackframe.fileName, stackframe.lineNumber, stackframe.columnNumber));\n                }, reject);\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, seek source-mapped location and return new enhanced StackFrame.\n         *\n         * @param stackframe - {StackFrame}-like object\n         *      {fileName: 'path/to/file.js', lineNumber: 100, columnNumber: 5}\n         * @return StackFrame with source-mapped location\n         */\n        this.getMappedLocation = function StackTraceGPS$$getMappedLocation(stackframe) {\n            return new Promise(function (resolve, reject) {\n                _ensureSupportedEnvironment();\n                _ensureStackFrameIsLegit(stackframe);\n\n                this._get(stackframe.fileName).then(function (source) {\n                    this._get(_findSourceMappingURL(source)).then(function (map) {\n                        var lineNumber = stackframe.lineNumber;\n                        var columnNumber = stackframe.columnNumber;\n                        resolve(_newLocationInfoFromSourceMap(map, stackframe.args, lineNumber, columnNumber));\n                    }, reject)['catch'](reject);\n                }.bind(this), reject)['catch'](reject);\n            }.bind(this));\n        };\n    };\n}));\n","(function (root, factory) {\r\n    'use strict';\r\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('stacktrace', ['error-stack-parser', 'stack-generator', 'stacktrace-gps', 'es6-promise'], factory);\r\n    } else if (typeof exports === 'object') {\r\n        module.exports = factory(require('error-stack-parser'), require('stack-generator'), require('stacktrace-gps'), require('es6-promise'));\r\n    } else {\r\n        root.StackTrace = factory(root.ErrorStackParser, root.StackGenerator, root.StackTraceGPS, root.ES6Promise);\r\n    }\r\n}(this, function StackTrace(ErrorStackParser, StackGenerator, StackTraceGPS, ES6Promise) {\r\n    ES6Promise.polyfill();\r\n    var Promise = ES6Promise.Promise;\r\n\r\n    var _options = {\r\n        filter: function (stackframe) {\r\n            // Filter out stackframes for this library by default\r\n            return (stackframe.functionName || '').indexOf('StackTrace$$') === -1 &&\r\n                (stackframe.functionName || '').indexOf('ErrorStackParser$$') === -1 &&\r\n                (stackframe.functionName || '').indexOf('StackTraceGPS$$') === -1 &&\r\n                (stackframe.functionName || '').indexOf('StackGenerator$$') === -1;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Merge 2 given Objects. If a conflict occurs the second object wins.\r\n     * Does not do deep merges.\r\n     * @param first Object\r\n     * @param second Object\r\n     * @returns new Object merged first and second\r\n     * @private\r\n     */\r\n    function _merge(first, second) {\r\n        var target = {};\r\n\r\n        [first, second].forEach(function (obj) {\r\n            for (var prop in obj) {\r\n                if (obj.hasOwnProperty(prop)) {\r\n                    target[prop] = obj[prop];\r\n                }\r\n            }\r\n            return target;\r\n        });\r\n\r\n        return target;\r\n    }\r\n\r\n    function _isShapedLikeParsableError(err) {\r\n        return err.stack || err['opera#sourceloc'];\r\n    }\r\n\r\n    return {\r\n        /**\r\n         * Get a backtrace from invocation point.\r\n         * @param opts Options Object\r\n         * @return Array[StackFrame]\r\n         */\r\n        get: function StackTrace$$get(opts) {\r\n            try {\r\n                // Error must be thrown to get stack in IE\r\n                throw new Error();\r\n            } catch (err) {\r\n                if (_isShapedLikeParsableError(err)) {\r\n                    return this.fromError(err, opts);\r\n                } else {\r\n                    return this.generateArtificially(opts);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Given an error object, parse it.\r\n         * @param error Error object\r\n         * @param opts Object for options\r\n         * @return Array[StackFrame]\r\n         */\r\n        fromError: function StackTrace$$fromError(error, opts) {\r\n            opts = _merge(_options, opts);\r\n            return new Promise(function (resolve) {\r\n                var stackframes = ErrorStackParser.parse(error);\r\n                if (typeof opts.filter === 'function') {\r\n                    stackframes = stackframes.filter(opts.filter);\r\n                }\r\n                resolve(Promise.all(stackframes.map(function (sf) {\r\n                    return new Promise(function (resolve) {\r\n                        function resolveOriginal(_) {\r\n                            resolve(sf);\r\n                        }\r\n\r\n                        new StackTraceGPS(opts).pinpoint(sf)\r\n                            .then(resolve, resolveOriginal)['catch'](resolveOriginal);\r\n                    });\r\n                })));\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Use StackGenerator to generate a backtrace.\r\n         * @param opts Object options\r\n         * @returns Array[StackFrame]\r\n         */\r\n        generateArtificially: function StackTrace$$generateArtificially(opts) {\r\n            opts = _merge(_options, opts);\r\n            var stackFrames = StackGenerator.backtrace(opts);\r\n            if (typeof opts.filter === 'function') {\r\n                stackFrames = stackFrames.filter(opts.filter);\r\n            }\r\n            return Promise.resolve(stackFrames);\r\n        },\r\n\r\n        /**\r\n         * Given a function, wrap it such that invocations trigger a callback that\r\n         * is called with a stack trace.\r\n         *\r\n         * @param {Function} fn to be instrumented\r\n         * @param {Function} callback function to call with a stack trace on invocation\r\n         * @param {Function} errback optional function to call with error if unable to get stack trace.\r\n         * @param {Object} thisArg optional context object (e.g. window)\r\n         */\r\n        instrument: function StackTrace$$instrument(fn, callback, errback, thisArg) {\r\n            if (typeof fn !== 'function') {\r\n                throw new Error('Cannot instrument non-function object');\r\n            } else if (typeof fn.__stacktraceOriginalFn === 'function') {\r\n                // Already instrumented, return given Function\r\n                return fn;\r\n            }\r\n\r\n            var instrumented = function StackTrace$$instrumented() {\r\n                try {\r\n                    this.get().then(callback, errback)['catch'](errback);\r\n                    fn.apply(thisArg || this, arguments);\r\n                } catch (e) {\r\n                    if (_isShapedLikeParsableError(e)) {\r\n                        this.fromError(e).then(callback, errback)['catch'](errback);\r\n                    }\r\n                    throw e;\r\n                }\r\n            }.bind(this);\r\n            instrumented.__stacktraceOriginalFn = fn;\r\n\r\n            return instrumented;\r\n        },\r\n\r\n        /**\r\n         * Given a function that has been instrumented,\r\n         * revert the function to it's original (non-instrumented) state.\r\n         *\r\n         * @param fn {Function}\r\n         */\r\n        deinstrument: function StackTrace$$deinstrument(fn) {\r\n            if (typeof fn !== 'function') {\r\n                throw new Error('Cannot de-instrument non-function object');\r\n            } else if (typeof fn.__stacktraceOriginalFn === 'function') {\r\n                return fn.__stacktraceOriginalFn;\r\n            } else {\r\n                // Function not instrumented, return original\r\n                return fn;\r\n            }\r\n        }\r\n    };\r\n}));\r\n","var Exceptionless;\n(function (Exceptionless) {\n    var ExceptionlessClient = (function () {\n        function ExceptionlessClient(apiKey, serverUrl) {\n            var settings = this.getSettingsFromScriptTag() || {};\n            this.config = new Configuration(apiKey || settings.apiKey, serverUrl || settings.serverUrl);\n        }\n        ExceptionlessClient.prototype.createException = function (exception) {\n            var pluginContextData = new ContextData();\n            pluginContextData.setException(exception);\n            return this.createEvent(pluginContextData).setType('error');\n        };\n        ExceptionlessClient.prototype.submitException = function (exception) {\n            return this.createException(exception).submit();\n        };\n        ExceptionlessClient.prototype.createUnhandledException = function (exception) {\n            var builder = this.createException(exception);\n            builder.pluginContextData.markAsUnhandledError();\n            return builder;\n        };\n        ExceptionlessClient.prototype.submitUnhandledException = function (exception) {\n            return this.createUnhandledException(exception).submit();\n        };\n        ExceptionlessClient.prototype.createFeatureUsage = function (feature) {\n            return this.createEvent().setType('usage').setSource(feature);\n        };\n        ExceptionlessClient.prototype.submitFeatureUsage = function (feature) {\n            return this.createFeatureUsage(feature).submit();\n        };\n        ExceptionlessClient.prototype.createLog = function (sourceOrMessage, message, level) {\n            var builder = this.createEvent().setType('log');\n            if (sourceOrMessage && message && level) {\n                builder = builder.setSource(sourceOrMessage).setMessage(message).setProperty('@level', level);\n            }\n            else if (sourceOrMessage && message) {\n                builder = builder.setSource(sourceOrMessage).setMessage(message);\n            }\n            else {\n                var source = (arguments.callee.caller).name;\n                builder = builder.setSource(source).setMessage(sourceOrMessage);\n            }\n            return builder;\n        };\n        ExceptionlessClient.prototype.submitLog = function (sourceOrMessage, message, level) {\n            return this.createLog(sourceOrMessage, message, level).submit();\n        };\n        ExceptionlessClient.prototype.createNotFound = function (resource) {\n            return this.createEvent().setType('404').setSource(resource);\n        };\n        ExceptionlessClient.prototype.submitNotFound = function (resource) {\n            return this.createNotFound(resource).submit();\n        };\n        ExceptionlessClient.prototype.createSessionStart = function (sessionId) {\n            return this.createEvent().setType('start').setSessionId(sessionId);\n        };\n        ExceptionlessClient.prototype.submitSessionStart = function (sessionId) {\n            return this.createSessionStart(sessionId).submit();\n        };\n        ExceptionlessClient.prototype.createSessionEnd = function (sessionId) {\n            return this.createEvent().setType('end').setSessionId(sessionId);\n        };\n        ExceptionlessClient.prototype.submitSessionEnd = function (sessionId) {\n            return this.createSessionEnd(sessionId).submit();\n        };\n        ExceptionlessClient.prototype.createEvent = function (pluginContextData) {\n            return new EventBuilder({ date: new Date() }, this, pluginContextData);\n        };\n        ExceptionlessClient.prototype.submitEvent = function (event, pluginContextData) {\n            var _this = this;\n            if (!event) {\n                return Promise.reject(new Error('Unable to submit undefined event.'));\n            }\n            if (!this.config.enabled) {\n                var message = 'Event submission is currently disabled.';\n                this.config.log.info(message);\n                return Promise.reject(new Error(message));\n            }\n            var context = new EventPluginContext(this, event, pluginContextData);\n            return EventPluginManager.run(context).then(function () {\n                if (context.cancel) {\n                    var message = 'Event submission cancelled by plugin\": id=' + event.reference_id + ' type=' + event.type;\n                    _this.config.log.info(message);\n                    return Promise.reject(new Error(message));\n                }\n                if (!event.type || event.type.length === 0) {\n                    event.type = 'log';\n                }\n                if (!event.date) {\n                    event.date = new Date();\n                }\n                _this.config.log.info('Submitting event: type=' + event.type + !!event.reference_id ? ' refid=' + event.reference_id : '');\n                _this.config.queue.enqueue(event);\n                if (event.reference_id && event.reference_id.length > 0) {\n                    _this.config.log.info('Setting last reference id \"' + event.reference_id + '\"');\n                    _this.config.lastReferenceIdManager.setLast(event.reference_id);\n                }\n                return Promise.resolve();\n            }).catch(function (error) {\n                var message = 'Event submission cancelled. An error occurred while running the plugins: ' + error && error.message ? error.message : error;\n                _this.config.log.error(message);\n                return Promise.reject(new Error(message));\n            });\n        };\n        ExceptionlessClient.prototype.getLastReferenceId = function () {\n            return this.config.lastReferenceIdManager.getLast();\n        };\n        ExceptionlessClient.prototype.register = function () {\n            var _this = this;\n            var oldOnErrorHandler = window.onerror;\n            window.onerror = function (message, filename, lineno, colno, error) {\n                if (error !== null && typeof error === 'object') {\n                    _this.submitUnhandledException(error);\n                }\n                else {\n                    var e = { message: message, stack_trace: [{ file_name: filename, line_number: lineno, column: colno }] };\n                    _this.createUnhandledException(new Error(message)).setMessage(message).setProperty('@error', e).submit();\n                }\n                if (oldOnErrorHandler) {\n                    try {\n                        return oldOnErrorHandler(message, filename, lineno, colno, error);\n                    }\n                    catch (e) {\n                        _this.config.log.error('An error occurred while calling previous error handler: ' + e.message);\n                    }\n                }\n                return false;\n            };\n        };\n        ExceptionlessClient.prototype.getSettingsFromScriptTag = function () {\n            var scripts = document.getElementsByTagName('script');\n            for (var index = 0; index < scripts.length; index++) {\n                if (scripts[index].src && scripts[index].src.indexOf('/exceptionless') > -1) {\n                    return Utils.parseQueryString(scripts[index].src.split('?').pop());\n                }\n            }\n            return null;\n        };\n        Object.defineProperty(ExceptionlessClient, \"default\", {\n            get: function () {\n                if (ExceptionlessClient._instance === null) {\n                    ExceptionlessClient._instance = new ExceptionlessClient(null);\n                }\n                return ExceptionlessClient._instance;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ExceptionlessClient._instance = null;\n        return ExceptionlessClient;\n    })();\n    Exceptionless.ExceptionlessClient = ExceptionlessClient;\n    var Configuration = (function () {\n        function Configuration(apiKey, serverUrl) {\n            this._enabled = false;\n            this._serverUrl = 'https://collector.exceptionless.io';\n            this._plugins = [];\n            this.lastReferenceIdManager = new InMemoryLastReferenceIdManager();\n            this.log = new NullLog();\n            this.submissionBatchSize = 50;\n            this.submissionClient = new SubmissionClient();\n            this.storage = new InMemoryStorage();\n            this.defaultTags = [];\n            this.defaultData = {};\n            this.apiKey = apiKey;\n            this.serverUrl = serverUrl;\n            this.queue = new EventQueue(this);\n            EventPluginManager.addDefaultPlugins(this);\n        }\n        Object.defineProperty(Configuration.prototype, \"apiKey\", {\n            get: function () {\n                return this._apiKey;\n            },\n            set: function (value) {\n                this._apiKey = value;\n                this._enabled = !!value && value.length > 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Configuration.prototype, \"serverUrl\", {\n            get: function () {\n                return this._serverUrl;\n            },\n            set: function (value) {\n                if (!!value && value.length > 0) {\n                    this._serverUrl = value;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Configuration.prototype, \"enabled\", {\n            get: function () {\n                return this._enabled;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Configuration.prototype, \"plugins\", {\n            get: function () {\n                return this._plugins.sort(function (p1, p2) {\n                    return (p1.priority < p2.priority) ? -1 : (p1.priority > p2.priority) ? 1 : 0;\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Configuration.prototype.addPlugin = function (pluginOrName, priority, pluginAction) {\n            var plugin = !!pluginAction ? { name: pluginOrName, priority: priority, run: pluginAction } : pluginOrName;\n            if (!plugin || !plugin.run) {\n                this.log.error('Unable to add plugin: No run method was found.');\n                return;\n            }\n            if (!plugin.name) {\n                plugin.name = Utils.guid();\n            }\n            if (!plugin.priority) {\n                plugin.priority = 0;\n            }\n            var pluginExists = false;\n            for (var index = 0; index < this._plugins.length; index++) {\n                if (this._plugins[index].name === plugin.name) {\n                    pluginExists = true;\n                    break;\n                }\n            }\n            if (!pluginExists) {\n                this._plugins.push(plugin);\n            }\n        };\n        Configuration.prototype.removePlugin = function (pluginOrName) {\n            var name = typeof pluginOrName === 'string' ? pluginOrName : pluginOrName.name;\n            if (!name) {\n                this.log.error('Unable to remove plugin: No plugin name was specified.');\n                return;\n            }\n            for (var index = 0; index < this._plugins.length; index++) {\n                if (this._plugins[index].name === name) {\n                    this._plugins.splice(index, 1);\n                    break;\n                }\n            }\n        };\n        Configuration.prototype.useReferenceIds = function () {\n            this.addPlugin(new ReferenceIdPlugin());\n        };\n        return Configuration;\n    })();\n    Exceptionless.Configuration = Configuration;\n    var NullLog = (function () {\n        function NullLog() {\n        }\n        NullLog.prototype.info = function (message) {\n        };\n        NullLog.prototype.warn = function (message) {\n        };\n        NullLog.prototype.error = function (message) {\n        };\n        return NullLog;\n    })();\n    Exceptionless.NullLog = NullLog;\n    var ConsoleLog = (function () {\n        function ConsoleLog() {\n        }\n        ConsoleLog.prototype.info = function (message) {\n            if (console && console.log) {\n                console.log('[INFO] Exceptionless:' + message);\n            }\n        };\n        ConsoleLog.prototype.warn = function (message) {\n            if (console && console.log) {\n                console.log('[Warn] Exceptionless:' + message);\n            }\n        };\n        ConsoleLog.prototype.error = function (message) {\n            if (console && console.log) {\n                console.log('[Error] Exceptionless:' + message);\n            }\n        };\n        return ConsoleLog;\n    })();\n    Exceptionless.ConsoleLog = ConsoleLog;\n    var EventQueue = (function () {\n        function EventQueue(config) {\n            this._processingQueue = false;\n            this._config = config;\n        }\n        EventQueue.prototype.enqueue = function (event) {\n            this.ensureQueueTimer();\n            if (this.areQueuedItemsDiscarded()) {\n                this._config.log.info('Queue items are currently being discarded. The event will not be queued.');\n                return;\n            }\n            var key = this.queuePath() + '-' + new Date().toJSON() + '-' + Utils.randomNumber();\n            this._config.log.info('Enqueuing event: ' + key);\n            return this._config.storage.save(key, event);\n        };\n        EventQueue.prototype.process = function () {\n            var _this = this;\n            this.ensureQueueTimer();\n            if (this._processingQueue) {\n                return;\n            }\n            this._config.log.info('Processing queue...');\n            if (!this._config.enabled) {\n                this._config.log.info('Configuration is disabled. The queue will not be processed.');\n                return;\n            }\n            this._processingQueue = true;\n            try {\n                var events = this._config.storage.get(this.queuePath(), this._config.submissionBatchSize);\n                if (!events || events.length == 0) {\n                    this._config.log.info('There are currently no queued events to process.');\n                    return;\n                }\n                this._config.log.info('Sending ' + events.length + ' events to ' + this._config.serverUrl + '.');\n                this._config.submissionClient.submit(events, this._config).then(function (response) { return _this.processSubmissionResponse(response, events); }, function (response) { return _this.processSubmissionResponse(response, events); }).then(function () {\n                    _this._config.log.info('Finished processing queue.');\n                    _this._processingQueue = false;\n                });\n            }\n            catch (ex) {\n                this._config.log.error('An error occurred while processing the queue: ' + ex);\n                this.suspendProcessing();\n                this._processingQueue = false;\n            }\n        };\n        EventQueue.prototype.processSubmissionResponse = function (response, events) {\n            if (response.success) {\n                this._config.log.info('Sent ' + events.length + ' events to ' + this._config.serverUrl + '.');\n                return;\n            }\n            if (response.serviceUnavailable) {\n                this._config.log.error('Server returned service unavailable.');\n                this.suspendProcessing();\n                this.requeueEvents(events);\n                return;\n            }\n            if (response.paymentRequired) {\n                this._config.log.info('Too many events have been submitted, please upgrade your plan.');\n                this.suspendProcessing(null, true, true);\n                return;\n            }\n            if (response.unableToAuthenticate) {\n                this._config.log.info('Unable to authenticate, please check your configuration. The event will not be submitted.');\n                this.suspendProcessing(15);\n                return;\n            }\n            if (response.notFound || response.badRequest) {\n                this._config.log.error('Error while trying to submit data: ' + response.message);\n                this.suspendProcessing(60 * 4);\n                return;\n            }\n            if (response.requestEntityTooLarge) {\n                if (this._config.submissionBatchSize > 1) {\n                    this._config.log.error('Event submission discarded for being too large. The event will be retried with a smaller events size.');\n                    this._config.submissionBatchSize = Math.max(1, Math.round(this._config.submissionBatchSize / 1.5));\n                    this.requeueEvents(events);\n                }\n                else {\n                    this._config.log.error('Event submission discarded for being too large. The event will not be submitted.');\n                }\n                return;\n            }\n            if (!response.success) {\n                this._config.log.error('An error occurred while submitting events: ' + response.message);\n                this.suspendProcessing();\n                this.requeueEvents(events);\n            }\n        };\n        EventQueue.prototype.ensureQueueTimer = function () {\n            var _this = this;\n            if (!this._queueTimer) {\n                this._queueTimer = setInterval(function () { return _this.onProcessQueue(); }, 10000);\n            }\n        };\n        EventQueue.prototype.onProcessQueue = function () {\n            if (!this.isQueueProcessingSuspended() && !this._processingQueue) {\n                this.process();\n            }\n        };\n        EventQueue.prototype.suspendProcessing = function (durationInMinutes, discardFutureQueuedItems, clearQueue) {\n            if (!durationInMinutes || durationInMinutes <= 0) {\n                durationInMinutes = 5;\n            }\n            this._config.log.info('Suspending processing for ' + durationInMinutes + ' minutes.');\n            this._suspendProcessingUntil = new Date(new Date().getTime() + (durationInMinutes * 60000));\n            if (discardFutureQueuedItems) {\n                this._discardQueuedItemsUntil = new Date(new Date().getTime() + (durationInMinutes * 60000));\n            }\n            if (!clearQueue) {\n                return;\n            }\n            try {\n                this._config.storage.clear(this.queuePath());\n            }\n            catch (Exception) {\n            }\n        };\n        EventQueue.prototype.requeueEvents = function (events) {\n            this._config.log.info('Requeuing ' + events.length + ' events.');\n            for (var index = 0; index < events.length; index++) {\n                this.enqueue(events[index]);\n            }\n        };\n        EventQueue.prototype.isQueueProcessingSuspended = function () {\n            return this._suspendProcessingUntil && this._suspendProcessingUntil > new Date();\n        };\n        EventQueue.prototype.areQueuedItemsDiscarded = function () {\n            return this._discardQueuedItemsUntil && this._discardQueuedItemsUntil > new Date();\n        };\n        EventQueue.prototype.queuePath = function () {\n            return !!this._config.apiKey ? 'ex-' + this._config.apiKey.slice(0, 8) + '-q' : null;\n        };\n        return EventQueue;\n    })();\n    Exceptionless.EventQueue = EventQueue;\n    var SubmissionClient = (function () {\n        function SubmissionClient() {\n        }\n        SubmissionClient.prototype.submit = function (events, config) {\n            var _this = this;\n            var url = config.serverUrl + '/api/v2/events?access_token=' + encodeURIComponent(config.apiKey);\n            return this.sendRequest('POST', url, JSON.stringify(events)).then(function (xhr) {\n                return new SubmissionResponse(xhr.status, _this.getResponseMessage(xhr));\n            }, function (xhr) {\n                return new SubmissionResponse(xhr.status || 500, _this.getResponseMessage(xhr));\n            });\n        };\n        SubmissionClient.prototype.submitDescription = function (referenceId, description, config) {\n            var _this = this;\n            var url = config.serverUrl + '/api/v2/events/by-ref/' + encodeURIComponent(referenceId) + '/user-description?access_token=' + encodeURIComponent(config.apiKey);\n            return this.sendRequest('POST', url, JSON.stringify(description)).then(function (xhr) {\n                return new SubmissionResponse(xhr.status, _this.getResponseMessage(xhr));\n            }, function (xhr) {\n                return new SubmissionResponse(xhr.status || 500, _this.getResponseMessage(xhr));\n            });\n        };\n        SubmissionClient.prototype.getSettings = function (config) {\n            var _this = this;\n            var url = config.serverUrl + '/api/v2/projects/config?access_token=' + encodeURIComponent(config.apiKey);\n            return this.sendRequest('GET', url).then(function (xhr) {\n                if (xhr.status !== 200) {\n                    return new SettingsResponse(false, null, -1, null, 'Unable to retrieve configuration settings: ' + _this.getResponseMessage(xhr));\n                }\n                var settings;\n                try {\n                    settings = JSON.parse(xhr.responseText);\n                }\n                catch (e) {\n                    config.log.error('An error occurred while parsing the settings response text: \"' + xhr.responseText + '\"');\n                }\n                if (!settings || !settings.settings || !settings.version) {\n                    return new SettingsResponse(true, null, -1, null, 'Invalid configuration settings.');\n                }\n                return new SettingsResponse(true, settings.settings, settings.version);\n            }, function (xhr) {\n                return new SettingsResponse(false, null, -1, null, _this.getResponseMessage(xhr));\n            });\n        };\n        SubmissionClient.prototype.getResponseMessage = function (xhr) {\n            if (!xhr || (xhr.status >= 200 && xhr.status <= 299)) {\n                return null;\n            }\n            if (xhr.status === 0) {\n                return 'Unable to connect to server.';\n            }\n            if (xhr.responseBody) {\n                return xhr.responseBody.message;\n            }\n            if (xhr.responseText) {\n                try {\n                    return JSON.parse(xhr.responseText).message;\n                }\n                catch (e) {\n                    return xhr.responseText;\n                }\n            }\n            return xhr.statusText;\n        };\n        SubmissionClient.prototype.createRequest = function (method, url) {\n            var xhr = new XMLHttpRequest();\n            if ('withCredentials' in xhr) {\n                xhr.open(method, url, true);\n            }\n            else if (typeof XDomainRequest != 'undefined') {\n                xhr = new XDomainRequest();\n                xhr.open(method, url);\n            }\n            else {\n                xhr = null;\n            }\n            if (xhr) {\n                if (method === 'POST' && xhr.setRequestHeader) {\n                    xhr.setRequestHeader('Content-Type', 'application/json');\n                }\n                xhr.timeout = 10000;\n            }\n            return xhr;\n        };\n        SubmissionClient.prototype.sendRequest = function (method, url, data) {\n            var xhr = this.createRequest(method || 'POST', url);\n            return new Promise(function (resolve, reject) {\n                if (!xhr) {\n                    return reject({ status: 503, message: 'CORS not supported.' });\n                }\n                if ('withCredentials' in xhr) {\n                    xhr.onreadystatechange = function () {\n                        if (xhr.readyState !== 4) {\n                            return;\n                        }\n                        if (xhr.status >= 200 && xhr.status <= 299) {\n                            resolve(xhr);\n                        }\n                        else {\n                            reject(xhr);\n                        }\n                    };\n                }\n                xhr.ontimeout = function () { return reject(xhr); };\n                xhr.onerror = function () { return reject(xhr); };\n                xhr.onload = function () { return resolve(xhr); };\n                xhr.send(data);\n            });\n        };\n        return SubmissionClient;\n    })();\n    Exceptionless.SubmissionClient = SubmissionClient;\n    var SubmissionResponse = (function () {\n        function SubmissionResponse(statusCode, message) {\n            this.success = false;\n            this.badRequest = false;\n            this.serviceUnavailable = false;\n            this.paymentRequired = false;\n            this.unableToAuthenticate = false;\n            this.notFound = false;\n            this.requestEntityTooLarge = false;\n            this.statusCode = statusCode;\n            this.message = message;\n            this.success = statusCode >= 200 && statusCode <= 299;\n            this.badRequest = statusCode === 400;\n            this.serviceUnavailable = statusCode === 503;\n            this.paymentRequired = statusCode === 402;\n            this.unableToAuthenticate = statusCode === 401 || statusCode === 403;\n            this.notFound = statusCode === 404;\n            this.requestEntityTooLarge = statusCode === 413;\n        }\n        return SubmissionResponse;\n    })();\n    Exceptionless.SubmissionResponse = SubmissionResponse;\n    var SettingsResponse = (function () {\n        function SettingsResponse(success, settings, settingsVersion, exception, message) {\n            if (settingsVersion === void 0) { settingsVersion = -1; }\n            if (exception === void 0) { exception = null; }\n            if (message === void 0) { message = null; }\n            this.success = false;\n            this.settingsVersion = -1;\n            this.success = success;\n            this.settings = settings;\n            this.settingsVersion = settingsVersion;\n            this.exception = exception;\n            this.message = message;\n        }\n        return SettingsResponse;\n    })();\n    Exceptionless.SettingsResponse = SettingsResponse;\n    var InMemoryStorage = (function () {\n        function InMemoryStorage() {\n            this._items = {};\n        }\n        InMemoryStorage.prototype.save = function (path, value) {\n            this._items[path] = value;\n            return true;\n        };\n        InMemoryStorage.prototype.get = function (searchPattern, limit) {\n            var results = [];\n            var regex = new RegExp(searchPattern || '.*');\n            for (var key in this._items) {\n                if (results.length >= limit) {\n                    break;\n                }\n                if (regex.test(key)) {\n                    results.push(this._items[key]);\n                    delete this._items[key];\n                }\n            }\n            return results;\n        };\n        InMemoryStorage.prototype.clear = function (searchPattern) {\n            if (!searchPattern) {\n                this._items = {};\n                return;\n            }\n            var regex = new RegExp(searchPattern);\n            for (var key in this._items) {\n                if (regex.test(key)) {\n                    delete this._items[key];\n                }\n            }\n        };\n        InMemoryStorage.prototype.count = function (searchPattern) {\n            var regex = new RegExp(searchPattern || '.*');\n            var results = [];\n            for (var key in this._items) {\n                if (regex.test(key)) {\n                    results.push(key);\n                }\n            }\n            return results.length;\n        };\n        return InMemoryStorage;\n    })();\n    Exceptionless.InMemoryStorage = InMemoryStorage;\n    var InMemoryLastReferenceIdManager = (function () {\n        function InMemoryLastReferenceIdManager() {\n            this._lastReferenceId = null;\n        }\n        InMemoryLastReferenceIdManager.prototype.getLast = function () {\n            return this._lastReferenceId;\n        };\n        InMemoryLastReferenceIdManager.prototype.clearLast = function () {\n            this._lastReferenceId = null;\n        };\n        InMemoryLastReferenceIdManager.prototype.setLast = function (eventId) {\n            this._lastReferenceId = eventId;\n        };\n        return InMemoryLastReferenceIdManager;\n    })();\n    Exceptionless.InMemoryLastReferenceIdManager = InMemoryLastReferenceIdManager;\n    var EventBuilder = (function () {\n        function EventBuilder(event, client, pluginContextData) {\n            this.target = event;\n            this.client = client;\n            this.pluginContextData = pluginContextData;\n        }\n        EventBuilder.prototype.setType = function (type) {\n            if (!!type && type.length > 0) {\n                this.target.type = type;\n            }\n            return this;\n        };\n        EventBuilder.prototype.setSource = function (source) {\n            if (!!source && source.length > 0) {\n                this.target.source = source;\n            }\n            return this;\n        };\n        EventBuilder.prototype.setSessionId = function (sessionId) {\n            if (!this.isValidIdentifier(sessionId)) {\n                throw new Error(\"SessionId must contain between 8 and 100 alphanumeric or '-' characters.\");\n            }\n            this.target.session_id = sessionId;\n            return this;\n        };\n        EventBuilder.prototype.setReferenceId = function (referenceId) {\n            if (!this.isValidIdentifier(referenceId)) {\n                throw new Error(\"SessionId must contain between 8 and 100 alphanumeric or '-' characters.\");\n            }\n            this.target.reference_id = referenceId;\n            return this;\n        };\n        EventBuilder.prototype.setMessage = function (message) {\n            if (!!message && message.length > 0) {\n                this.target.message = message;\n            }\n            return this;\n        };\n        EventBuilder.prototype.setGeo = function (latitude, longitude) {\n            if (latitude < -90.0 || latitude > 90.0)\n                throw new Error('Must be a valid latitude value between -90.0 and 90.0.');\n            if (longitude < -180.0 || longitude > 180.0)\n                throw new Error('Must be a valid longitude value between -180.0 and 180.0.');\n            this.target.geo = latitude + ',' + longitude;\n            return this;\n        };\n        EventBuilder.prototype.setValue = function (value) {\n            if (!!value) {\n                this.target.value = value;\n            }\n            return this;\n        };\n        EventBuilder.prototype.addTags = function () {\n            var tags = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                tags[_i - 0] = arguments[_i];\n            }\n            if (!tags || tags.length === 0) {\n                return this;\n            }\n            if (!this.target.tags) {\n                this.target.tags = [];\n            }\n            for (var index = 0; index < tags.length; index++) {\n                if (tags[index] && this.target.tags.indexOf(tags[index]) < 0) {\n                    this.target.tags.push(tags[index]);\n                }\n            }\n            return this;\n        };\n        EventBuilder.prototype.setProperty = function (name, value) {\n            if (!name || (value === undefined || value == null)) {\n                return this;\n            }\n            if (!this.target.data) {\n                this.target.data = {};\n            }\n            this.target.data[name] = value;\n            return this;\n        };\n        EventBuilder.prototype.markAsCritical = function (critical) {\n            if (critical) {\n                this.addTags('Critical');\n            }\n            return this;\n        };\n        EventBuilder.prototype.submit = function () {\n            return this.client.submitEvent(this.target, this.pluginContextData);\n        };\n        EventBuilder.prototype.isValidIdentifier = function (value) {\n            if (!value || !value.length) {\n                return true;\n            }\n            if (value.length < 8 || value.length > 100) {\n                return false;\n            }\n            for (var index = 0; index < value.length; index++) {\n                var code = value.charCodeAt(index);\n                var isDigit = (code >= 48) && (code <= 57);\n                var isLetter = ((code >= 65) && (code <= 90)) || ((code >= 97) && (code <= 122));\n                var isMinus = code === 45;\n                if (!(isDigit || isLetter) && !isMinus) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return EventBuilder;\n    })();\n    Exceptionless.EventBuilder = EventBuilder;\n    var ContextData = (function () {\n        function ContextData() {\n        }\n        ContextData.prototype.setException = function (exception) {\n            this['@@_Exception'] = exception;\n        };\n        Object.defineProperty(ContextData.prototype, \"hasException\", {\n            get: function () {\n                return !!this['@@_Exception'];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ContextData.prototype.getException = function () {\n            if (!this.hasException) {\n                return null;\n            }\n            return this['@@_Exception'];\n        };\n        ContextData.prototype.markAsUnhandledError = function () {\n            this['@@_IsUnhandledError'] = true;\n        };\n        Object.defineProperty(ContextData.prototype, \"isUnhandledError\", {\n            get: function () {\n                return !!this['@@_IsUnhandledError'];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ContextData.prototype.setSubmissionMethod = function (method) {\n            this['@@_SubmissionMethod'] = method;\n        };\n        ContextData.prototype.getSubmissionMethod = function () {\n            if (!!this['@@_SubmissionMethod']) {\n                return null;\n            }\n            return this['@@_SubmissionMethod'];\n        };\n        return ContextData;\n    })();\n    Exceptionless.ContextData = ContextData;\n    var EventPluginContext = (function () {\n        function EventPluginContext(client, event, contextData) {\n            this.cancel = false;\n            this.client = client;\n            this.event = event;\n            this.contextData = contextData ? contextData : new ContextData();\n        }\n        Object.defineProperty(EventPluginContext.prototype, \"log\", {\n            get: function () {\n                return this.client.config.log;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return EventPluginContext;\n    })();\n    Exceptionless.EventPluginContext = EventPluginContext;\n    var EventPluginManager = (function () {\n        function EventPluginManager() {\n        }\n        EventPluginManager.run = function (context) {\n            return context.client.config.plugins.reduce(function (promise, plugin) {\n                return promise.then(function () {\n                    return plugin.run(context);\n                });\n            }, Promise.resolve());\n        };\n        EventPluginManager.addDefaultPlugins = function (config) {\n            config.addPlugin(new ConfigurationDefaultsPlugin());\n            config.addPlugin(new ErrorPlugin());\n            config.addPlugin(new DuplicateCheckerPlugin());\n            config.addPlugin(new ModuleInfoPlugin());\n            config.addPlugin(new RequestInfoPlugin());\n            config.addPlugin(new SubmissionMethodPlugin());\n        };\n        return EventPluginManager;\n    })();\n    var ConfigurationDefaultsPlugin = (function () {\n        function ConfigurationDefaultsPlugin() {\n            this.priority = 10;\n            this.name = 'ConfigurationDefaultsPlugin';\n        }\n        ConfigurationDefaultsPlugin.prototype.run = function (context) {\n            if (!!context.client.config.defaultTags) {\n                if (!context.event.tags) {\n                    context.event.tags = [];\n                }\n                for (var index = 0; index < context.client.config.defaultTags.length; index++) {\n                    var tag = context.client.config.defaultTags[index];\n                    if (tag && context.client.config.defaultTags.indexOf(tag) < 0) {\n                        context.event.tags.push(tag);\n                    }\n                }\n            }\n            if (!!context.client.config.defaultData) {\n                if (!context.event.data) {\n                    context.event.data = {};\n                }\n                for (var key in context.client.config.defaultData) {\n                    if (!!context.client.config.defaultData[key]) {\n                        context.event.data[key] = context.client.config.defaultData[key];\n                    }\n                }\n            }\n            return Promise.resolve();\n        };\n        return ConfigurationDefaultsPlugin;\n    })();\n    var ReferenceIdPlugin = (function () {\n        function ReferenceIdPlugin() {\n            this.priority = 20;\n            this.name = 'ReferenceIdPlugin';\n        }\n        ReferenceIdPlugin.prototype.run = function (context) {\n            if ((!context.event.reference_id || context.event.reference_id.length === 0) && context.event.type === 'error') {\n                context.event.reference_id = Utils.guid().replace('-', '').substring(0, 10);\n            }\n            return Promise.resolve();\n        };\n        return ReferenceIdPlugin;\n    })();\n    var ErrorPlugin = (function () {\n        function ErrorPlugin() {\n            this.priority = 30;\n            this.name = 'ErrorPlugin';\n        }\n        ErrorPlugin.prototype.run = function (context) {\n            var _this = this;\n            var exception = context.contextData.getException();\n            if (exception == null) {\n                return Promise.resolve();\n            }\n            if (!context.event.data) {\n                context.event.data = {};\n            }\n            context.event.type = 'error';\n            if (!!context.event.data['@error']) {\n                return Promise.resolve();\n            }\n            return StackTrace.fromError(exception).then(function (stackFrames) { return _this.processError(context, exception, stackFrames); }, function () { return _this.onParseError(context); });\n        };\n        ErrorPlugin.prototype.processError = function (context, exception, stackFrames) {\n            var error = {\n                message: exception.message,\n                stack_trace: this.getStackFrames(context, stackFrames || [])\n            };\n            context.event.data['@error'] = error;\n            return Promise.resolve();\n        };\n        ErrorPlugin.prototype.onParseError = function (context) {\n            context.cancel = true;\n            return Promise.reject(new Error('Unable to parse the exceptions stack trace. This exception will be discarded.'));\n        };\n        ErrorPlugin.prototype.getStackFrames = function (context, stackFrames) {\n            var frames = [];\n            for (var index = 0; index < stackFrames.length; index++) {\n                frames.push({\n                    name: stackFrames[index].functionName,\n                    file_name: stackFrames[index].fileName,\n                    line_number: stackFrames[index].lineNumber,\n                    column: stackFrames[index].columnNumber\n                });\n            }\n            return frames;\n        };\n        return ErrorPlugin;\n    })();\n    var ModuleInfoPlugin = (function () {\n        function ModuleInfoPlugin() {\n            this.priority = 40;\n            this.name = 'ModuleInfoPlugin';\n        }\n        ModuleInfoPlugin.prototype.run = function (context) {\n            console.log(context);\n            if (!context.event.data || !context.event.data['@error'] || !!context.event.data['@error'].modules) {\n                return Promise.resolve();\n            }\n            try {\n                var modules = [];\n                var scripts = document.getElementsByTagName('script');\n                if (scripts && scripts.length > 0) {\n                    for (var index = 0; index < scripts.length; index++) {\n                        if (scripts[index].src) {\n                            modules.push({ module_id: index, name: scripts[index].src, version: Utils.parseVersion(scripts[index].src) });\n                        }\n                        else if (!!scripts[index].innerHTML) {\n                            modules.push({ module_id: index, name: 'Script Tag', version: Utils.getHashCode(scripts[index].innerHTML) });\n                        }\n                    }\n                    context.event.data['@error'].modules = modules;\n                }\n            }\n            catch (e) {\n                context.log.error('Unable to get module info. Exception: ' + e.message);\n            }\n            return Promise.resolve();\n        };\n        return ModuleInfoPlugin;\n    })();\n    var DuplicateCheckerPlugin = (function () {\n        function DuplicateCheckerPlugin() {\n            this.priority = 50;\n            this.name = 'DuplicateCheckerPlugin';\n        }\n        DuplicateCheckerPlugin.prototype.run = function (context) {\n            return Promise.resolve();\n        };\n        return DuplicateCheckerPlugin;\n    })();\n    var RequestInfoPlugin = (function () {\n        function RequestInfoPlugin() {\n            this.priority = 60;\n            this.name = 'RequestInfoPlugin';\n        }\n        RequestInfoPlugin.prototype.run = function (context) {\n            if (!!context.event.data && !!context.event.data['@request']) {\n                return Promise.resolve();\n            }\n            if (!context.event.data) {\n                context.event.data = {};\n            }\n            var requestInfo = {\n                user_agent: navigator.userAgent,\n                is_secure: location.protocol === 'https:',\n                host: location.hostname,\n                port: location.port && location.port !== '' ? parseInt(location.port) : 80,\n                path: location.pathname,\n                cookies: this.getCookies(),\n                query_string: Utils.parseQueryString(location.search.substring(1))\n            };\n            if (document.referrer && document.referrer !== '') {\n                requestInfo.referrer = document.referrer;\n            }\n            context.event.data['@request'] = requestInfo;\n            return Promise.resolve();\n        };\n        RequestInfoPlugin.prototype.getCookies = function () {\n            if (!document.cookie) {\n                return null;\n            }\n            var result = {};\n            var cookies = document.cookie.split(', ');\n            for (var index = 0; index < cookies.length; index++) {\n                var cookie = cookies[index].split('=');\n                result[cookie[0]] = cookie[1];\n            }\n            return result;\n        };\n        return RequestInfoPlugin;\n    })();\n    var SubmissionMethodPlugin = (function () {\n        function SubmissionMethodPlugin() {\n            this.priority = 100;\n            this.name = 'SubmissionMethodPlugin';\n        }\n        SubmissionMethodPlugin.prototype.run = function (context) {\n            var submissionMethod = context.contextData.getSubmissionMethod();\n            if (!!submissionMethod) {\n                if (!context.event.data) {\n                    context.event.data = {};\n                }\n                context.event.data['@submission_method'] = submissionMethod;\n            }\n            return Promise.resolve();\n        };\n        return SubmissionMethodPlugin;\n    })();\n    var Utils = (function () {\n        function Utils() {\n        }\n        Utils.getHashCode = function (source) {\n            if (!source || source.length === 0) {\n                return null;\n            }\n            var hash = 0;\n            for (var index = 0; index < source.length; index++) {\n                var character = source.charCodeAt(index);\n                hash = ((hash << 5) - hash) + character;\n                hash |= 0;\n            }\n            return hash.toString();\n        };\n        Utils.guid = function () {\n            function s4() {\n                return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n            }\n            return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n        };\n        Utils.parseVersion = function (source) {\n            if (!source) {\n                return null;\n            }\n            var versionRegex = /(v?((\\d+)\\.(\\d+)(\\.(\\d+))?)(?:-([\\dA-Za-z\\-]+(?:\\.[\\dA-Za-z\\-]+)*))?(?:\\+([\\dA-Za-z\\-]+(?:\\.[\\dA-Za-z\\-]+)*))?)/;\n            var matches = versionRegex.exec(source);\n            if (matches && matches.length > 0) {\n                return matches[0];\n            }\n            return null;\n        };\n        Utils.parseQueryString = function (query) {\n            if (!query || query.length === 0) {\n                return null;\n            }\n            var pairs = query.split('&');\n            if (pairs.length === 0) {\n                return null;\n            }\n            var result = {};\n            for (var index = 0; index < pairs.length; index++) {\n                var pair = pairs[index].split('=');\n                result[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n            return result;\n        };\n        Utils.randomNumber = function () {\n            return Math.floor(Math.random() * 9007199254740992);\n        };\n        return Utils;\n    })();\n    Exceptionless.Utils = Utils;\n})(Exceptionless || (Exceptionless = {}));\n"],"sourceRoot":"/source/"}