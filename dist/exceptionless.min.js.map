{"version":3,"sources":["tracekit.js","/source/exceptionless.ts","exceptionless.min.js"],"names":["window","undefined","_has","object","key","Object","prototype","hasOwnProperty","call","_isUndefined","what","TraceKit","_oldTraceKit","_slice","slice","UNKNOWN_FUNCTION","noConflict","wrap","func","wrapped","apply","this","arguments","e","report","subscribe","handler","installGlobalHandler","handlers","push","unsubscribe","i","length","splice","notifyHandlers","stack","isWindowError","exception","collectWindowErrors","concat","inner","traceKitWindowOnError","message","url","lineNo","columnNo","errorObj","computeStackTrace","lastExceptionStack","augmentStackTraceWithInitialElement","lastException","location","line","column","guessFunctionName","context","gatherContext","mode","document","href","useragent","navigator","userAgent","_oldOnerrorHandler","_onErrorHandlerInstalled","onerror","ex","args","s","setTimeout","incomplete","loadSource","remoteFetching","getXHR","XMLHttpRequest","ActiveXObject","request","open","send","responseText","getSource","sourceCache","source","indexOf","domain","split","m","reFunctionArgNames","reGuessFunction","maxLines","exec","linesBefore","Math","floor","linesOfContext","linesAfter","start","max","end","min","escapeRegExp","text","replace","escapeCodeAsRegExpForMatchingInsideHTML","body","findSourceInUrls","re","urls","j","join","substring","index","lastIndexOf","findSourceInLine","fragment","RegExp","findSourceByFunctionBody","parts","result","scripts","getElementsByTagName","code","codeRE","eventRE","script","src","name","event","computeStackTraceFromStackProp","element","chrome","gecko","winjs","lines","reference","columnNumber","computeStackTraceFromStacktraceProp","stacktrace","testRE","exc","computeStackTraceFromOperaMultiLineMessage","len","lineRE1","lineRE2","lineRE3","inlineScriptBlocks","item","relativeLine","pos","innerText","midline","stackInfo","initial","unshift","partial","computeStackTraceByWalkingCallerChain","depth","functionName","funcs","recursion","curr","caller","toString","input","description","sourceURL","fileName","lineNumber","debug","computeStackTraceOfCaller","Error","ofCaller","extendToAsynchronousCallbacks","_helper","fnName","originalFn","originalCallback","global","root","factory","define","amd","exports","module","require","Exceptionless","__extends","d","b","__","constructor","p","ContextData","setException","defineProperty","get","enumerable","configurable","getException","markAsUnhandledError","setSubmissionMethod","method","getSubmissionMethod","SettingsManager","changed","config","_handlers","onChanged","applySavedServerSettings","log","info","settings","Utils","merge","getSavedServerSettings","storage","_configPath","checkVersion","version","savedConfigVersion","parseInt","isNaN","updateSettings","_this","isValid","submissionClient","getSettings","response","success","savedServerSettings","path","save","settingsVersion","error","DefaultLastReferenceIdManager","_lastReferenceId","getLast","clearLast","setLast","eventId","ConsoleLog","warn","level","console","NullLog","EventPluginContext","client","contextData","EventPluginManager","run","callback","plugin","next","cancelled","plugins","wrappedPlugins","priority","addDefaultPlugins","addPlugin","ConfigurationDefaultsPlugin","ErrorPlugin","ModuleInfoPlugin","RequestInfoPlugin","EnvironmentInfoPlugin","SubmissionMethodPlugin","ReferenceIdPlugin","reference_id","type","guid","DefaultEventQueue","_processingQueue","_config","enqueue","ensureQueueTimer","areQueuedItemsDiscarded","queuePath","Date","toJSON","randomNumber","process","queueNotProcessed","enabled","events","submissionBatchSize","serverUrl","postEvents","processSubmissionResponse","suspendProcessing","noSubmission","serviceUnavailable","requeueEvents","paymentRequired","unableToAuthenticate","notFound","badRequest","requestEntityTooLarge","round","_queueTimer","setInterval","onProcessQueue","isQueueProcessingSuspended","durationInMinutes","discardFutureQueuedItems","clearQueue","_suspendProcessingUntil","getTime","_discardQueuedItemsUntil","clear","Exception","InMemoryStorage","_items","value","searchPattern","limit","results","regex","test","count","addRange","target","values","_i","getHashCode","hash","character","charCodeAt","getCookies","cookies","cookie","s4","random","defaultValues","parseVersion","versionRegex","matches","parseQueryString","query","pairs","pair","decodeURIComponent","stringify","data","exclusions","checkForMatch","pattern","trim","toLowerCase","startsWithWildcard","endsWithWildcard","stringifyImpl","cache","JSON","parse","Configuration","configSettings","inject","fn","defaultTags","defaultData","lastReferenceIdManager","_serverUrl","_dataExclusions","_plugins","defaults","apiKey","environmentInfoCollector","errorParser","moduleCollector","requestInfoCollector","queue","_apiKey","set","addDataExclusions","sort","p1","p2","pluginOrName","pluginAction","pluginExists","removePlugin","setVersion","setUserIdentity","userInfoOrIdentity","user","userInfo","identity","shouldRemove","useReferenceIds","useDebugLogger","_defaultSettings","EventBuilder","pluginContextData","_validIdentifierErrorMessage","setType","setSource","setSessionId","sessionId","isValidIdentifier","session_id","setReferenceId","referenceId","setMessage","setGeo","latitude","longitude","geo","setProperty","setValue","addTags","tags","markAsCritical","critical","addRequestInfo","submit","submitEvent","isDigit","isLetter","isMinus","SubmissionResponse","statusCode","ExceptionlessClient","settingsOrApiKey","createException","createEvent","submitException","createUnhandledException","submissionMethod","builder","submitUnhandledException","createFeatureUsage","feature","submitFeatureUsage","createLog","sourceOrMessage","callee","submitLog","createNotFound","resource","submitNotFound","createSessionStart","submitSessionStart","createSessionEnd","submitSessionEnd","date","ev","updateUserEmailAndDescription","email","userDescription","email_address","postUserDescription","getLastReferenceId","_instance","tag","parser","collector","modules","getModules","requestInfo","getRequestInfo","environment","environmentInfo","getEnvironmentInfo","SettingsResponse","os","NodeEnvironmentInfoCollector","getIpAddresses","ips","interfaces","networkInterfaces","keys","forEach","iface","family","internal","address","processor_count","cpus","total_physical_memory","totalmem","available_physical_memory","freemem","command_line","argv","process_name","title","process_id","pid","process_memory_size","memoryUsage","heapTotal","architecture","arch","o_s_name","o_s_version","release","ip_address","machine_name","hostname","runtime_version","loadavg","platform","tmpdir","uptime","endianness","nodestacktrace","NodeErrorParser","getStackFrames","stackFrames","frames","frame","getMethodName","getFunctionName","file_name","getFileName","line_number","getLineNumber","getColumnNumber","declaring_type","getTypeName","is_native","isNative","filename","stack_trace","NodeRequestInfoCollector","requestKey","client_ip_address","ip","user_agent","headers","is_secure","secure","http_method","host","post_data","query_string","params","port","DefaultSubmissionClient","configurationVersionHeader","sendRequest","dataExclusions","status","encodeURIComponent","complete","xhr","parseResponseHeaders","headerStr","headerPairs","headerPair","separator","isCompleted","responseBody","statusText","getAllResponseHeaders","createRequest","XDomainRequest","setRequestHeader","timeout","onreadystatechange","readyState","ontimeout","onload","http","https","NodeSubmissionClient","_super","statusMessage","parsedHost","options","auth","Content-Type","Content-Length","protocol","on","chunk","write","NodeBootstrapper","register","beforeExit","uncaughtException","getExitCodeReason","DefaultErrorParser","getParameters","parameters","traceKitStackTrace","stackTrace","DefaultModuleCollector","module_id","innerHTML","DefaultRequestInfoCollector","pathname","search","referrer","DefaultBootstrapper","getDefaultsSettingsFromScriptTag","pop","processUnhandledException","processJQueryAjaxError","$","ajaxError","stackTraceLimit","Infinity"],"mappings":"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","file":"exceptionless.min.js","sourcesContent":["/*\n TraceKit - Cross brower stack traces - github.com/csnover/TraceKit\n MIT license\n*/\n\n(function(window, undefined) {\nif (!window) {\n    return;\n}\n\nvar TraceKit = {};\nvar _oldTraceKit = window.TraceKit;\n\n// global reference to slice\nvar _slice = [].slice;\nvar UNKNOWN_FUNCTION = '?';\n\n\n/**\n * _has, a better form of hasOwnProperty\n * Example: _has(MainHostObject, property) === true/false\n *\n * @param {Object} object to check property\n * @param {string} key to check\n */\nfunction _has(object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n}\n\nfunction _isUndefined(what) {\n    return typeof what === 'undefined';\n}\n\n/**\n * TraceKit.noConflict: Export TraceKit out to another variable\n * Example: var TK = TraceKit.noConflict()\n */\nTraceKit.noConflict = function noConflict() {\n    window.TraceKit = _oldTraceKit;\n    return TraceKit;\n};\n\n/**\n * TraceKit.wrap: Wrap any function in a TraceKit reporter\n * Example: func = TraceKit.wrap(func);\n *\n * @param {Function} func Function to be wrapped\n * @return {Function} The wrapped func\n */\nTraceKit.wrap = function traceKitWrapper(func) {\n    function wrapped() {\n        try {\n            return func.apply(this, arguments);\n        } catch (e) {\n            TraceKit.report(e);\n            throw e;\n        }\n    }\n    return wrapped;\n};\n\n/**\n * TraceKit.report: cross-browser processing of unhandled exceptions\n *\n * Syntax:\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\n *   TraceKit.report.unsubscribe(function(stackInfo) { ... })\n *   TraceKit.report(exception)\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\n *\n * Supports:\n *   - Firefox: full stack trace with line numbers, plus column number\n *              on top frame; column number is not guaranteed\n *   - Opera:   full stack trace with line and column numbers\n *   - Chrome:  full stack trace with line and column numbers\n *   - Safari:  line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *   - IE:      line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *\n * In theory, TraceKit should work on all of the following versions:\n *   - IE5.5+ (only 8.0 tested)\n *   - Firefox 0.9+ (only 3.5+ tested)\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\n *     Exceptions Have Stacktrace to be enabled in opera:config)\n *   - Safari 3+ (only 4+ tested)\n *   - Chrome 1+ (only 5+ tested)\n *   - Konqueror 3.5+ (untested)\n *\n * Requires TraceKit.computeStackTrace.\n *\n * Tries to catch all unhandled exceptions and report them to the\n * subscribed handlers. Please note that TraceKit.report will rethrow the\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\n * If the exception does not reach the top of the browser, you will only\n * get a stack trace from the point where TraceKit.report was called.\n *\n * Handlers receive a stackInfo object as described in the\n * TraceKit.computeStackTrace docs.\n */\nTraceKit.report = (function reportModuleWrapper() {\n    var handlers = [],\n        lastException = null,\n        lastExceptionStack = null;\n\n    /**\n     * Add a crash handler.\n     * @param {Function} handler\n     */\n    function subscribe(handler) {\n        installGlobalHandler();\n        handlers.push(handler);\n    }\n\n    /**\n     * Remove a crash handler.\n     * @param {Function} handler\n     */\n    function unsubscribe(handler) {\n        for (var i = handlers.length - 1; i >= 0; --i) {\n            if (handlers[i] === handler) {\n                handlers.splice(i, 1);\n            }\n        }\n    }\n\n    /**\n     * Dispatch stack information to all handlers.\n     * @param {Object.<string, *>} stack\n     */\n    function notifyHandlers(stack, isWindowError) {\n        var exception = null;\n        if (isWindowError && !TraceKit.collectWindowErrors) {\n          return;\n        }\n        for (var i in handlers) {\n            if (_has(handlers, i)) {\n                try {\n                    handlers[i].apply(null, [stack].concat(_slice.call(arguments, 2)));\n                } catch (inner) {\n                    exception = inner;\n                }\n            }\n        }\n\n        if (exception) {\n            throw exception;\n        }\n    }\n\n    var _oldOnerrorHandler, _onErrorHandlerInstalled;\n\n    /**\n     * Ensures all global unhandled exceptions are recorded.\n     * Supported by Gecko and IE.\n     * @param {string} message Error message.\n     * @param {string} url URL of script that generated the exception.\n     * @param {(number|string)} lineNo The line number at which the error\n     * occurred.\n     * @param {?(number|string)} columnNo The column number at which the error\n     * occurred.\n     * @param {?Error} errorObj The actual Error object.\n     */\n    function traceKitWindowOnError(message, url, lineNo, columnNo, errorObj) {\n        var stack = null;\n\n        if (errorObj) {\n          stack = TraceKit.computeStackTrace(errorObj);\n        }\n        else\n        {\n            if (lastExceptionStack) {\n                TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);\n                stack = lastExceptionStack;\n                lastExceptionStack = null;\n                lastException = null;\n            } else {\n                var location = {\n                    'url': url,\n                    'line': lineNo,\n                    'column': columnNo\n                };\n                location.func = TraceKit.computeStackTrace.guessFunctionName(location.url, location.line);\n                location.context = TraceKit.computeStackTrace.gatherContext(location.url, location.line);\n                stack = {\n                    'mode': 'onerror',\n                    'message': message,\n                    'url': document.location.href,\n                    'stack': [location],\n                    'useragent': navigator.userAgent\n                };\n            }\n        }\n\n        notifyHandlers(stack, 'from window.onerror');\n\n        if (_oldOnerrorHandler) {\n            return _oldOnerrorHandler.apply(this, arguments);\n        }\n\n        return false;\n    }\n\n    function installGlobalHandler ()\n    {\n        if (_onErrorHandlerInstalled === true) {\n            return;\n        }\n        _oldOnerrorHandler = window.onerror;\n        window.onerror = traceKitWindowOnError;\n        _onErrorHandlerInstalled = true;\n    }\n\n    /**\n     * Reports an unhandled Error to TraceKit.\n     * @param {Error} ex\n     */\n    function report(ex) {\n        var args = _slice.call(arguments, 1);\n        if (lastExceptionStack) {\n            if (lastException === ex) {\n                return; // already caught by an inner catch block, ignore\n            } else {\n                var s = lastExceptionStack;\n                lastExceptionStack = null;\n                lastException = null;\n                notifyHandlers.apply(null, [s, null].concat(args));\n            }\n        }\n\n        var stack = TraceKit.computeStackTrace(ex);\n        lastExceptionStack = stack;\n        lastException = ex;\n\n        // If the stack trace is incomplete, wait for 2 seconds for\n        // slow slow IE to see if onerror occurs or not before reporting\n        // this exception; otherwise, we will end up with an incomplete\n        // stack trace\n        window.setTimeout(function () {\n            if (lastException === ex) {\n                lastExceptionStack = null;\n                lastException = null;\n                notifyHandlers.apply(null, [stack, null].concat(args));\n            }\n        }, (stack.incomplete ? 2000 : 0));\n\n        throw ex; // re-throw to propagate to the top level (and cause window.onerror)\n    }\n\n    report.subscribe = subscribe;\n    report.unsubscribe = unsubscribe;\n    return report;\n}());\n\n/**\n * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript\n *\n * Syntax:\n *   s = TraceKit.computeStackTrace.ofCaller([depth])\n *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)\n * Returns:\n *   s.name              - exception name\n *   s.message           - exception message\n *   s.stack[i].url      - JavaScript or HTML file URL\n *   s.stack[i].func     - function name, or empty for anonymous functions (if guessing did not work)\n *   s.stack[i].args     - arguments passed to the function, if known\n *   s.stack[i].line     - line number, if known\n *   s.stack[i].column   - column number, if known\n *   s.stack[i].context  - an array of source code lines; the middle element corresponds to the correct line#\n *   s.mode              - 'stack', 'stacktrace', 'multiline', 'callers', 'onerror', or 'failed' -- method used to collect the stack trace\n *\n * Supports:\n *   - Firefox:  full stack trace with line numbers and unreliable column\n *               number on top frame\n *   - Opera 10: full stack trace with line and column numbers\n *   - Opera 9-: full stack trace with line numbers\n *   - Chrome:   full stack trace with line and column numbers\n *   - Safari:   line and column number for the topmost stacktrace element\n *               only\n *   - IE:       no line numbers whatsoever\n *\n * Tries to guess names of anonymous functions by looking for assignments\n * in the source code. In IE and Safari, we have to guess source file names\n * by searching for function bodies inside all page scripts. This will not\n * work for scripts that are loaded cross-domain.\n * Here be dragons: some function names may be guessed incorrectly, and\n * duplicate functions may be mismatched.\n *\n * TraceKit.computeStackTrace should only be used for tracing purposes.\n * Logging of unhandled exceptions should be done with TraceKit.report,\n * which builds on top of TraceKit.computeStackTrace and provides better\n * IE support by utilizing the window.onerror event to retrieve information\n * about the top of the stack.\n *\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\n * so computeStackTrace instead walks its *own* chain of callers.\n * This means that:\n *  * in Safari, some methods may be missing from the stack trace;\n *  * in IE, the topmost function in the stack trace will always be the\n *    caller of computeStackTrace.\n *\n * This is okay for tracing (because you are likely to be calling\n * computeStackTrace from the function you want to be the topmost element\n * of the stack trace anyway), but not okay for logging unhandled\n * exceptions (because your catch block will likely be far away from the\n * inner function that actually caused the exception).\n *\n * Tracing example:\n *     function trace(message) {\n *         var stackInfo = TraceKit.computeStackTrace.ofCaller();\n *         var data = message + \"\\n\";\n *         for(var i in stackInfo.stack) {\n *             var item = stackInfo.stack[i];\n *             data += (item.func || '[anonymous]') + \"() in \" + item.url + \":\" + (item.line || '0') + \"\\n\";\n *         }\n *         if (window.console)\n *             console.info(data);\n *         else\n *             alert(data);\n *     }\n */\nTraceKit.computeStackTrace = (function computeStackTraceWrapper() {\n    var debug = false,\n        sourceCache = {};\n\n    /**\n     * Attempts to retrieve source code via XMLHttpRequest, which is used\n     * to look up anonymous function names.\n     * @param {string} url URL of source code.\n     * @return {string} Source contents.\n     */\n    function loadSource(url) {\n        if (!TraceKit.remoteFetching) { //Only attempt request if remoteFetching is on.\n            return '';\n        }\n        try {\n            var getXHR = function() {\n                try {\n                    return new window.XMLHttpRequest();\n                } catch (e) {\n                    // explicitly bubble up the exception if not found\n                    return new window.ActiveXObject('Microsoft.XMLHTTP');\n                }\n            };\n\n            var request = getXHR();\n            request.open('GET', url, false);\n            request.send('');\n            return request.responseText;\n        } catch (e) {\n            return '';\n        }\n    }\n\n    /**\n     * Retrieves source code from the source code cache.\n     * @param {string} url URL of source code.\n     * @return {Array.<string>} Source contents.\n     */\n    function getSource(url) {\n        if (typeof url !== 'string') {\n            return [];\n        }\n\n        if (!_has(sourceCache, url)) {\n            // URL needs to be able to fetched within the acceptable domain.  Otherwise,\n            // cross-domain errors will be triggered.\n            var source = '';\n\n            url = url || '';\n            if (url.indexOf && url.indexOf(document.domain) !== -1) {\n                source = loadSource(url);\n            }\n            sourceCache[url] = source ? source.split('\\n') : [];\n        }\n\n        return sourceCache[url];\n    }\n\n    /**\n     * Tries to use an externally loaded copy of source code to determine\n     * the name of a function by looking at the name of the variable it was\n     * assigned to, if any.\n     * @param {string} url URL of source code.\n     * @param {(string|number)} lineNo Line number in source code.\n     * @return {string} The function name, if discoverable.\n     */\n    function guessFunctionName(url, lineNo) {\n        var reFunctionArgNames = /function ([^(]*)\\(([^)]*)\\)/,\n            reGuessFunction = /['\"]?([0-9A-Za-z$_]+)['\"]?\\s*[:=]\\s*(function|eval|new Function)/,\n            line = '',\n            maxLines = 10,\n            source = getSource(url),\n            m;\n\n        if (!source.length) {\n            return UNKNOWN_FUNCTION;\n        }\n\n        // Walk backwards from the first line in the function until we find the line which\n        // matches the pattern above, which is the function definition\n        for (var i = 0; i < maxLines; ++i) {\n            line = source[lineNo - i] + line;\n\n            if (!_isUndefined(line)) {\n                if ((m = reGuessFunction.exec(line))) {\n                    return m[1];\n                } else if ((m = reFunctionArgNames.exec(line))) {\n                    return m[1];\n                }\n            }\n        }\n\n        return UNKNOWN_FUNCTION;\n    }\n\n    /**\n     * Retrieves the surrounding lines from where an exception occurred.\n     * @param {string} url URL of source code.\n     * @param {(string|number)} line Line number in source code to centre\n     * around for context.\n     * @return {?Array.<string>} Lines of source code.\n     */\n    function gatherContext(url, line) {\n        var source = getSource(url);\n\n        if (!source.length) {\n            return null;\n        }\n\n        var context = [],\n            // linesBefore & linesAfter are inclusive with the offending line.\n            // if linesOfContext is even, there will be one extra line\n            //   *before* the offending line.\n            linesBefore = Math.floor(TraceKit.linesOfContext / 2),\n            // Add one extra line if linesOfContext is odd\n            linesAfter = linesBefore + (TraceKit.linesOfContext % 2),\n            start = Math.max(0, line - linesBefore - 1),\n            end = Math.min(source.length, line + linesAfter - 1);\n\n        line -= 1; // convert to 0-based index\n\n        for (var i = start; i < end; ++i) {\n            if (!_isUndefined(source[i])) {\n                context.push(source[i]);\n            }\n        }\n\n        return context.length > 0 ? context : null;\n    }\n\n    /**\n     * Escapes special characters, except for whitespace, in a string to be\n     * used inside a regular expression as a string literal.\n     * @param {string} text The string.\n     * @return {string} The escaped string literal.\n     */\n    function escapeRegExp(text) {\n        return text.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#]/g, '\\\\$&');\n    }\n\n    /**\n     * Escapes special characters in a string to be used inside a regular\n     * expression as a string literal. Also ensures that HTML entities will\n     * be matched the same as their literal friends.\n     * @param {string} body The string.\n     * @return {string} The escaped string.\n     */\n    function escapeCodeAsRegExpForMatchingInsideHTML(body) {\n        return escapeRegExp(body).replace('<', '(?:<|&lt;)').replace('>', '(?:>|&gt;)').replace('&', '(?:&|&amp;)').replace('\"', '(?:\"|&quot;)').replace(/\\s+/g, '\\\\s+');\n    }\n\n    /**\n     * Determines where a code fragment occurs in the source code.\n     * @param {RegExp} re The function definition.\n     * @param {Array.<string>} urls A list of URLs to search.\n     * @return {?Object.<string, (string|number)>} An object containing\n     * the url, line, and column number of the defined function.\n     */\n    function findSourceInUrls(re, urls) {\n        var source, m;\n        for (var i = 0, j = urls.length; i < j; ++i) {\n            // console.log('searching', urls[i]);\n            if ((source = getSource(urls[i])).length) {\n                source = source.join('\\n');\n                if ((m = re.exec(source))) {\n                    // console.log('Found function in ' + urls[i]);\n\n                    return {\n                        'url': urls[i],\n                        'line': source.substring(0, m.index).split('\\n').length,\n                        'column': m.index - source.lastIndexOf('\\n', m.index) - 1\n                    };\n                }\n            }\n        }\n\n        // console.log('no match');\n\n        return null;\n    }\n\n    /**\n     * Determines at which column a code fragment occurs on a line of the\n     * source code.\n     * @param {string} fragment The code fragment.\n     * @param {string} url The URL to search.\n     * @param {(string|number)} line The line number to examine.\n     * @return {?number} The column number.\n     */\n    function findSourceInLine(fragment, url, line) {\n        var source = getSource(url),\n            re = new RegExp('\\\\b' + escapeRegExp(fragment) + '\\\\b'),\n            m;\n\n        line -= 1;\n\n        if (source && source.length > line && (m = re.exec(source[line]))) {\n            return m.index;\n        }\n\n        return null;\n    }\n\n    /**\n     * Determines where a function was defined within the source code.\n     * @param {(Function|string)} func A function reference or serialized\n     * function definition.\n     * @return {?Object.<string, (string|number)>} An object containing\n     * the url, line, and column number of the defined function.\n     */\n    function findSourceByFunctionBody(func) {\n        var urls = [window.location.href],\n            scripts = document.getElementsByTagName('script'),\n            body,\n            code = '' + func,\n            codeRE = /^function(?:\\s+([\\w$]+))?\\s*\\(([\\w\\s,]*)\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/,\n            eventRE = /^function on([\\w$]+)\\s*\\(event\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/,\n            re,\n            parts,\n            result;\n\n        for (var i = 0; i < scripts.length; ++i) {\n            var script = scripts[i];\n            if (script.src) {\n                urls.push(script.src);\n            }\n        }\n\n        if (!(parts = codeRE.exec(code))) {\n            re = new RegExp(escapeRegExp(code).replace(/\\s+/g, '\\\\s+'));\n        }\n\n        // not sure if this is really necessary, but I don’t have a test\n        // corpus large enough to confirm that and it was in the original.\n        else {\n            var name = parts[1] ? '\\\\s+' + parts[1] : '',\n                args = parts[2].split(',').join('\\\\s*,\\\\s*');\n\n            body = escapeRegExp(parts[3]).replace(/;$/, ';?'); // semicolon is inserted if the function ends with a comment.replace(/\\s+/g, '\\\\s+');\n            re = new RegExp('function' + name + '\\\\s*\\\\(\\\\s*' + args + '\\\\s*\\\\)\\\\s*{\\\\s*' + body + '\\\\s*}');\n        }\n\n        // look for a normal function definition\n        if ((result = findSourceInUrls(re, urls))) {\n            return result;\n        }\n\n        // look for an old-school event handler function\n        if ((parts = eventRE.exec(code))) {\n            var event = parts[1];\n            body = escapeCodeAsRegExpForMatchingInsideHTML(parts[2]);\n\n            // look for a function defined in HTML as an onXXX handler\n            re = new RegExp('on' + event + '=[\\\\\\'\"]\\\\s*' + body + '\\\\s*[\\\\\\'\"]', 'i');\n\n            if ((result = findSourceInUrls(re, urls[0]))) {\n                return result;\n            }\n\n            // look for ???\n            re = new RegExp(body);\n\n            if ((result = findSourceInUrls(re, urls))) {\n                return result;\n            }\n        }\n\n        return null;\n    }\n\n    // Contents of Exception in various browsers.\n    //\n    // SAFARI:\n    // ex.message = Can't find variable: qq\n    // ex.line = 59\n    // ex.sourceId = 580238192\n    // ex.sourceURL = http://...\n    // ex.expressionBeginOffset = 96\n    // ex.expressionCaretOffset = 98\n    // ex.expressionEndOffset = 98\n    // ex.name = ReferenceError\n    //\n    // FIREFOX:\n    // ex.message = qq is not defined\n    // ex.fileName = http://...\n    // ex.lineNumber = 59\n    // ex.columnNumber = 69\n    // ex.stack = ...stack trace... (see the example below)\n    // ex.name = ReferenceError\n    //\n    // CHROME:\n    // ex.message = qq is not defined\n    // ex.name = ReferenceError\n    // ex.type = not_defined\n    // ex.arguments = ['aa']\n    // ex.stack = ...stack trace...\n    //\n    // INTERNET EXPLORER:\n    // ex.message = ...\n    // ex.name = ReferenceError\n    //\n    // OPERA:\n    // ex.message = ...message... (see the example below)\n    // ex.name = ReferenceError\n    // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\n    // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\n\n    /**\n     * Computes stack trace information from the stack property.\n     * Chrome and Gecko use this property.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceFromStackProp(ex) {\n        if (!ex.stack) {\n            return null;\n        }\n\n        var chrome = /^\\s*at (.*?) ?\\(?((?:file|https?|chrome-extension):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n            gecko = /^\\s*(.*?)(?:\\((.*?)\\))?@?((?:file|https?|chrome):.*?):(\\d+)(?::(\\d+))?\\s*$/i,\n            winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:ms-appx|http|https):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n            lines = ex.stack.split('\\n'),\n            stack = [],\n            parts,\n            element,\n            reference = /^(.*) is undefined$/.exec(ex.message);\n\n        for (var i = 0, j = lines.length; i < j; ++i) {\n            if ((parts = gecko.exec(lines[i]))) {\n                element = {\n                    'url': parts[3],\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'args': parts[2] ? parts[2].split(',') : '',\n                    'line': +parts[4],\n                    'column': parts[5] ? +parts[5] : null\n                };\n            } else if ((parts = chrome.exec(lines[i]))) {\n                element = {\n                    'url': parts[2],\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'line': +parts[3],\n                    'column': parts[4] ? +parts[4] : null\n                };\n            } else if ((parts = winjs.exec(lines[i]))) {\n              element = {\n                'url': parts[2],\n                'func': parts[1] || UNKNOWN_FUNCTION,\n                'line': +parts[3],\n                'column': parts[4] ? +parts[4] : null\n              };\n            } else {\n                continue;\n            }\n\n            if (!element.func && element.line) {\n                element.func = guessFunctionName(element.url, element.line);\n            }\n\n            if (element.line) {\n                element.context = gatherContext(element.url, element.line);\n            }\n\n            stack.push(element);\n        }\n\n        if (!stack.length) {\n            return null;\n        }\n\n        if (stack[0] && stack[0].line && !stack[0].column && reference) {\n            stack[0].column = findSourceInLine(reference[1], stack[0].url, stack[0].line);\n        } else if (!stack[0].column && !_isUndefined(ex.columnNumber)) {\n            // FireFox uses this awesome columnNumber property for its top frame\n            // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n            // so adding 1\n            stack[0].column = ex.columnNumber + 1;\n        }\n\n        return {\n            'mode': 'stack',\n            'name': ex.name,\n            'message': ex.message,\n            'url': document.location.href,\n            'stack': stack,\n            'useragent': navigator.userAgent\n        };\n    }\n\n    /**\n     * Computes stack trace information from the stacktrace property.\n     * Opera 10 uses this property.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceFromStacktraceProp(ex) {\n        // Access and store the stacktrace property before doing ANYTHING\n        // else to it because Opera is not very good at providing it\n        // reliably in other circumstances.\n        var stacktrace = ex.stacktrace;\n\n        var testRE = / line (\\d+), column (\\d+) in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\) in (.*):\\s*$/i,\n            lines = stacktrace.split('\\n'),\n            stack = [],\n            parts;\n\n        for (var i = 0, j = lines.length; i < j; i += 2) {\n            if ((parts = testRE.exec(lines[i]))) {\n                var element = {\n                    'line': +parts[1],\n                    'column': +parts[2],\n                    'func': parts[3] || parts[4],\n                    'args': parts[5] ? parts[5].split(',') : [],\n                    'url': parts[6]\n                };\n\n                if (!element.func && element.line) {\n                    element.func = guessFunctionName(element.url, element.line);\n                }\n                if (element.line) {\n                    try {\n                        element.context = gatherContext(element.url, element.line);\n                    } catch (exc) {}\n                }\n\n                if (!element.context) {\n                    element.context = [lines[i + 1]];\n                }\n\n                stack.push(element);\n            }\n        }\n\n        if (!stack.length) {\n            return null;\n        }\n\n        return {\n            'mode': 'stacktrace',\n            'name': ex.name,\n            'message': ex.message,\n            'url': document.location.href,\n            'stack': stack,\n            'useragent': navigator.userAgent\n        };\n    }\n\n    /**\n     * NOT TESTED.\n     * Computes stack trace information from an error message that includes\n     * the stack trace.\n     * Opera 9 and earlier use this method if the option to show stack\n     * traces is turned on in opera:config.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack information.\n     */\n    function computeStackTraceFromOperaMultiLineMessage(ex) {\n        // Opera includes a stack trace into the exception message. An example is:\n        //\n        // Statement on line 3: Undefined variable: undefinedFunc\n        // Backtrace:\n        //   Line 3 of linked script file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.js: In function zzz\n        //         undefinedFunc(a);\n        //   Line 7 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function yyy\n        //           zzz(x, y, z);\n        //   Line 3 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function xxx\n        //           yyy(a, a, a);\n        //   Line 1 of function script\n        //     try { xxx('hi'); return false; } catch(ex) { TraceKit.report(ex); }\n        //   ...\n\n        var lines = ex.message.split('\\n');\n        if (lines.length < 4) {\n            return null;\n        }\n\n        var lineRE1 = /^\\s*Line (\\d+) of linked script ((?:file|https?)\\S+)(?:: in function (\\S+))?\\s*$/i,\n            lineRE2 = /^\\s*Line (\\d+) of inline#(\\d+) script in ((?:file|https?)\\S+)(?:: in function (\\S+))?\\s*$/i,\n            lineRE3 = /^\\s*Line (\\d+) of function script\\s*$/i,\n            stack = [],\n            scripts = document.getElementsByTagName('script'),\n            inlineScriptBlocks = [],\n            parts,\n            i,\n            len,\n            source;\n\n        for (i in scripts) {\n            if (_has(scripts, i) && !scripts[i].src) {\n                inlineScriptBlocks.push(scripts[i]);\n            }\n        }\n\n        for (i = 2, len = lines.length; i < len; i += 2) {\n            var item = null;\n            if ((parts = lineRE1.exec(lines[i]))) {\n                item = {\n                    'url': parts[2],\n                    'func': parts[3],\n                    'line': +parts[1]\n                };\n            } else if ((parts = lineRE2.exec(lines[i]))) {\n                item = {\n                    'url': parts[3],\n                    'func': parts[4]\n                };\n                var relativeLine = (+parts[1]); // relative to the start of the <SCRIPT> block\n                var script = inlineScriptBlocks[parts[2] - 1];\n                if (script) {\n                    source = getSource(item.url);\n                    if (source) {\n                        source = source.join('\\n');\n                        var pos = source.indexOf(script.innerText);\n                        if (pos >= 0) {\n                            item.line = relativeLine + source.substring(0, pos).split('\\n').length;\n                        }\n                    }\n                }\n            } else if ((parts = lineRE3.exec(lines[i]))) {\n                var url = window.location.href.replace(/#.*$/, ''),\n                    line = parts[1];\n                var re = new RegExp(escapeCodeAsRegExpForMatchingInsideHTML(lines[i + 1]));\n                source = findSourceInUrls(re, [url]);\n                item = {\n                    'url': url,\n                    'line': source ? source.line : line,\n                    'func': ''\n                };\n            }\n\n            if (item) {\n                if (!item.func) {\n                    item.func = guessFunctionName(item.url, item.line);\n                }\n                var context = gatherContext(item.url, item.line);\n                var midline = (context ? context[Math.floor(context.length / 2)] : null);\n                if (context && midline.replace(/^\\s*/, '') === lines[i + 1].replace(/^\\s*/, '')) {\n                    item.context = context;\n                } else {\n                    // if (context) alert(\"Context mismatch. Correct midline:\\n\" + lines[i+1] + \"\\n\\nMidline:\\n\" + midline + \"\\n\\nContext:\\n\" + context.join(\"\\n\") + \"\\n\\nURL:\\n\" + item.url);\n                    item.context = [lines[i + 1]];\n                }\n                stack.push(item);\n            }\n        }\n        if (!stack.length) {\n            return null; // could not parse multiline exception message as Opera stack trace\n        }\n\n        return {\n            'mode': 'multiline',\n            'name': ex.name,\n            'message': lines[0],\n            'url': document.location.href,\n            'stack': stack,\n            'useragent': navigator.userAgent\n        };\n    }\n\n    /**\n     * Adds information about the first frame to incomplete stack traces.\n     * Safari and IE require this to get complete data on the first frame.\n     * @param {Object.<string, *>} stackInfo Stack trace information from\n     * one of the compute* methods.\n     * @param {string} url The URL of the script that caused an error.\n     * @param {(number|string)} lineNo The line number of the script that\n     * caused an error.\n     * @param {string=} message The error generated by the browser, which\n     * hopefully contains the name of the object that caused the error.\n     * @return {boolean} Whether or not the stack information was\n     * augmented.\n     */\n    function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\n        var initial = {\n            'url': url,\n            'line': lineNo\n        };\n\n        if (initial.url && initial.line) {\n            stackInfo.incomplete = false;\n\n            if (!initial.func) {\n                initial.func = guessFunctionName(initial.url, initial.line);\n            }\n\n            if (!initial.context) {\n                initial.context = gatherContext(initial.url, initial.line);\n            }\n\n            var reference = / '([^']+)' /.exec(message);\n            if (reference) {\n                initial.column = findSourceInLine(reference[1], initial.url, initial.line);\n            }\n\n            if (stackInfo.stack.length > 0) {\n                if (stackInfo.stack[0].url === initial.url) {\n                    if (stackInfo.stack[0].line === initial.line) {\n                        return false; // already in stack trace\n                    } else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {\n                        stackInfo.stack[0].line = initial.line;\n                        stackInfo.stack[0].context = initial.context;\n                        return false;\n                    }\n                }\n            }\n\n            stackInfo.stack.unshift(initial);\n            stackInfo.partial = true;\n            return true;\n        } else {\n            stackInfo.incomplete = true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Computes stack trace information by walking the arguments.caller\n     * chain at the time the exception occurred. This will cause earlier\n     * frames to be missed but is the only way to get any stack trace in\n     * Safari and IE. The top frame is restored by\n     * {@link augmentStackTraceWithInitialElement}.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceByWalkingCallerChain(ex, depth) {\n        var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i,\n            stack = [],\n            funcs = {},\n            recursion = false,\n            parts,\n            item,\n            source;\n\n        for (var curr = computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\n            if (curr === computeStackTrace || curr === TraceKit.report) {\n                // console.log('skipping internal function');\n                continue;\n            }\n\n            item = {\n                'url': null,\n                'func': UNKNOWN_FUNCTION,\n                'line': null,\n                'column': null\n            };\n\n            if (curr.name) {\n                item.func = curr.name;\n            } else if ((parts = functionName.exec(curr.toString()))) {\n                item.func = parts[1];\n            }\n\n            if (typeof item.func === 'undefined') {\n              try {\n                item.func = parts.input.substring(0, parts.input.indexOf('{'))\n              } catch (e) { }\n            }\n\n            if ((source = findSourceByFunctionBody(curr))) {\n                item.url = source.url;\n                item.line = source.line;\n\n                if (item.func === UNKNOWN_FUNCTION) {\n                    item.func = guessFunctionName(item.url, item.line);\n                }\n\n                var reference = / '([^']+)' /.exec(ex.message || ex.description);\n                if (reference) {\n                    item.column = findSourceInLine(reference[1], source.url, source.line);\n                }\n            }\n\n            if (funcs['' + curr]) {\n                recursion = true;\n            }else{\n                funcs['' + curr] = true;\n            }\n\n            stack.push(item);\n        }\n\n        if (depth) {\n            // console.log('depth is ' + depth);\n            // console.log('stack is ' + stack.length);\n            stack.splice(0, depth);\n        }\n\n        var result = {\n            'mode': 'callers',\n            'name': ex.name,\n            'message': ex.message,\n            'url': document.location.href,\n            'stack': stack,\n            'useragent': navigator.userAgent\n        };\n        augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description);\n        return result;\n    }\n\n    /**\n     * Computes a stack trace for an exception.\n     * @param {Error} ex\n     * @param {(string|number)=} depth\n     */\n    function computeStackTrace(ex, depth) {\n        var stack = null;\n        depth = (depth == null ? 0 : +depth);\n\n        try {\n            // This must be tried first because Opera 10 *destroys*\n            // its stacktrace property if you try to access the stack\n            // property first!!\n            stack = computeStackTraceFromStacktraceProp(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceFromStackProp(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceFromOperaMultiLineMessage(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        return {\n            'mode': 'failed'\n        };\n    }\n\n    /**\n     * Logs a stacktrace starting from the previous call and working down.\n     * @param {(number|string)=} depth How many frames deep to trace.\n     * @return {Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceOfCaller(depth) {\n        depth = (depth == null ? 0 : +depth) + 1; // \"+ 1\" because \"ofCaller\" should drop one frame\n        try {\n            throw new Error();\n        } catch (ex) {\n            return computeStackTrace(ex, depth + 1);\n        }\n    }\n\n    computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;\n    computeStackTrace.guessFunctionName = guessFunctionName;\n    computeStackTrace.gatherContext = gatherContext;\n    computeStackTrace.ofCaller = computeStackTraceOfCaller;\n\n    return computeStackTrace;\n}());\n\n/**\n * Extends support for global error handling for asynchronous browser\n * functions. Adopted from Closure Library's errorhandler.js\n */\nTraceKit.extendToAsynchronousCallbacks = function () {\n    var _helper = function _helper(fnName) {\n        var originalFn = window[fnName];\n        window[fnName] = function traceKitAsyncExtension() {\n            // Make a copy of the arguments\n            var args = _slice.call(arguments);\n            var originalCallback = args[0];\n            if (typeof (originalCallback) === 'function') {\n                args[0] = TraceKit.wrap(originalCallback);\n            }\n            // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\n            // also only supports 2 argument and doesn't care what \"this\" is, so we\n            // can just call the original function directly.\n            if (originalFn.apply) {\n                return originalFn.apply(this, args);\n            } else {\n                return originalFn(args[0], args[1]);\n            }\n        };\n    };\n\n    _helper('setTimeout');\n    _helper('setInterval');\n};\n\n//Default options:\nif (!TraceKit.remoteFetching) {\n  TraceKit.remoteFetching = true;\n}\nif (!TraceKit.collectWindowErrors) {\n  TraceKit.collectWindowErrors = true;\n}\nif (!TraceKit.linesOfContext || TraceKit.linesOfContext < 1) {\n  // 5 lines before, the offending line, 5 lines after\n  TraceKit.linesOfContext = 11;\n}\n\n\n\n// Export to global object\nwindow.TraceKit = TraceKit;\n\n}(typeof window !== 'undefined' ? window : global));\n","export interface IBootstrapper {\r\n  register():void;\r\n}\r\n\nexport interface ILastReferenceIdManager {\r\n  getLast(): string;\r\n  clearLast(): void;\r\n  setLast(eventId:string): void;\r\n}\r\n\nexport interface ILog {\r\n  info(message:string):void;\r\n  warn(message:string):void;\r\n  error(message:string):void;\r\n}\r\n\nexport interface IEvent {\r\n  type?:string;\r\n  source?:string;\r\n  date?:Date;\r\n  tags?:string[];\r\n  message?:string;\r\n  geo?:string;\r\n  value?:number;\r\n  data?:any;\r\n  reference_id?:string;\r\n  session_id?:string;\r\n}\r\n\n                                          \r\n\r\nexport interface IEventQueue {\r\n  enqueue(event:IEvent):void;\r\n  process():void;\r\n  suspendProcessing(durationInMinutes?:number, discardFutureQueuedItems?:boolean, clearQueue?:boolean):void;\r\n}\r\n\nexport interface IEnvironmentInfo {\r\n  processor_count?:number;\r\n  total_physical_memory?:number;\r\n  available_physical_memory?:number;\r\n  command_line?:string;\r\n  process_name?:string;\r\n  process_id?:string;\r\n  process_memory_size?:number;\r\n  thread_id?:string;\r\n  architecture?:string;\r\n  o_s_name?:string;\r\n  o_s_version?:string;\r\n  ip_address?:string;\r\n  machine_name?:string;\r\n  install_id?:string;\r\n  runtime_version?:string;\r\n  data?:any;\r\n}\r\n\nexport class ContextData {\n  public setException(exception:Error): void {\n    if (exception) {\n      this['@@_Exception'] = exception;\n    }\n  }\n\n  public get hasException(): boolean {\n    return !!this['@@_Exception']\n  }\n\n  public getException(): Error {\n    return this['@@_Exception'] || null;\n  }\n\n  public markAsUnhandledError(): void {\n    this['@@_IsUnhandledError'] = true;\n  }\n\n  public get isUnhandledError(): boolean {\n    return !!this['@@_IsUnhandledError'];\n  }\n\n  public setSubmissionMethod(method:string): void {\n    if (method) {\n      this['@@_SubmissionMethod'] = method;\n    }\n  }\n\n  public getSubmissionMethod(): string {\n    return this['@@_SubmissionMethod'] || null;\n  }\n}\n\n                                                                                                                                   \r\n\r\nexport interface IEnvironmentInfoCollector {\r\n  getEnvironmentInfo(context:EventPluginContext):IEnvironmentInfo;\r\n}\r\n\n                                                                                                              \n\nexport interface IErrorParser {\n  parse(context:EventPluginContext, exception:Error): IError;\n}\n\n                                                                                                                 \r\n\r\nexport interface IModuleCollector {\r\n  getModules(context:EventPluginContext):IModule[];\r\n}\r\n\n                                                                                                                           \r\n\r\nexport interface IRequestInfoCollector {\r\n  getRequestInfo(context:EventPluginContext):IRequestInfo;\r\n}\r\n\nexport interface IStorage<T>{\r\n  save<T>(path:string, value:T):boolean;\r\n  get(searchPattern?:string, limit?:number):T[];\r\n  clear(searchPattern?:string):void;\r\n  count(searchPattern?:string):number;\r\n}\r\n\n                                                                                                                                                                                                                                                                                               \r\n\r\nexport interface ISubmissionClient {\r\n  postEvents(events:IEvent[], config:Configuration, callback:(response:SubmissionResponse) => void):void;\r\n  postUserDescription(referenceId:string, description:IUserDescription, config:Configuration, callback:(response:SubmissionResponse) => void):void;\r\n  getSettings(config:Configuration, callback:(response:SettingsResponse) => void):void;\r\n}\r\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \r\n\r\nexport interface IConfigurationSettings {\r\n  apiKey?:string;\r\n  serverUrl?:string;\r\n  environmentInfoCollector?:IEnvironmentInfoCollector;\r\n  errorParser?:IErrorParser;\r\n  lastReferenceIdManager?:ILastReferenceIdManager;\r\n  log?:ILog;\r\n  moduleCollector?:IModuleCollector;\r\n  requestInfoCollector?:IRequestInfoCollector;\r\n  submissionBatchSize?:number;\r\n  submissionClient?:ISubmissionClient;\r\n  storage?:IStorage<any>;\r\n  queue?:IEventQueue;\r\n}\r\n\n                                                                                                                                                   \n\nexport class SettingsManager {\n  /**\n   * The configuration settings path.\n   * @type {string}\n   * @private\n   */\n  private static _configPath:string = 'ex-server-settings.json';\n\n  /**\n   * A list of handlers that will be fired when the settings change.\n   * @type {Array}\n   * @private\n   */\n  private static _handlers:{ (config:Configuration):void }[] = [];\n\n  private static changed(config:Configuration) {\n    var handlers = this._handlers; // optimization for minifier.\n    for (var index = 0; index < handlers.length; index++) {\n      handlers[index](config);\n    }\n  }\n\n  public static onChanged(handler:(config:Configuration) => void) {\n    !!handler && this._handlers.push(handler);\n  }\n\n  public static applySavedServerSettings(config:Configuration):void {\n    config.log.info('Applying saved settings.');\n    config.settings = Utils.merge(config.settings, this.getSavedServerSettings(config));\n    this.changed(config);\n  }\n\n  private static getSavedServerSettings(config:Configuration):Object {\n    return config.storage.get(this._configPath, 1)[0] || {};\n  }\n\n  public static checkVersion(version:number, config:Configuration):void {\n    if (version) {\n      var savedConfigVersion = parseInt(<string>config.storage.get(`${this._configPath}-version`, 1)[0]);\n      if (isNaN(savedConfigVersion) || version > savedConfigVersion) {\n        config.log.info(`Updating settings from v${(!isNaN(savedConfigVersion) ? savedConfigVersion : 0)} to v${version}`);\n        this.updateSettings(config);\n      }\n    }\n  }\n\n  public static updateSettings(config:Configuration):void {\n    if (!config.isValid) {\n      config.log.error('Unable to update settings: ApiKey is not set.');\n      return;\n    }\n\n    config.submissionClient.getSettings(config, (response:SettingsResponse) => {\n      if (!response || !response.success || !response.settings) {\n        return;\n      }\n\n      config.settings = Utils.merge(config.settings, response.settings);\n\n      // TODO: Store snapshot of settings after reading from config and attributes and use that to revert to defaults.\n      // Remove any existing server settings that are not in the new server settings.\n      var savedServerSettings = SettingsManager.getSavedServerSettings(config);\n      for (var key in savedServerSettings) {\n        if (response.settings[key]) {\n          continue;\n        }\n\n        delete config.settings[key];\n      }\n\n      var path = SettingsManager._configPath; // optimization for minifier.\n      config.storage.save(`${path}-version`, response.settingsVersion);\n      config.storage.save(path, response.settings);\n\n      config.log.info('Updated settings');\n      this.changed(config);\n    });\n  }\n}\n\n                                                                    \n\nexport class DefaultLastReferenceIdManager implements ILastReferenceIdManager {\n  /**\n   * Gets the last event's reference id that was submitted to the server.\n   * @type {string}\n   * @private\n   */\n  private _lastReferenceId:string = null;\n\n  /**\n   * Gets the last event's reference id that was submitted to the server.\n   * @returns {string}\n   */\n  getLast(): string {\n    return this._lastReferenceId;\n  }\n\n  /**\n   * Clears the last event's reference id.\n   */\n  clearLast():void {\n    this._lastReferenceId = null;\n  }\n\n  /**\n   * Sets the last event's reference id.\n   * @param eventId\n   */\n  setLast(eventId:string):void {\n    this._lastReferenceId = eventId;\n  }\n}\n\n                              \r\n\r\nexport class ConsoleLog implements ILog {\r\n  public info(message:string):void {\r\n    this.log('info', message);\r\n  }\r\n\r\n  public warn(message:string):void {\r\n    this.log('warn', message);\r\n  }\r\n\r\n  public error(message:string):void {\r\n    this.log('error', message);\r\n  }\r\n\r\n  private log(level:string, message:string) {\r\n    if (console && console[level]) {\r\n      console[level](`[${level}] Exceptionless: ${message}`);\r\n    }\r\n  }\r\n}\r\n\n                              \r\n\r\nexport class NullLog implements ILog {\r\n  public info(message:string):void {}\r\n  public warn(message:string):void {}\r\n  public error(message:string):void {}\r\n}\r\n\nexport interface IUserInfo {\r\n  identity?:string;\r\n  name?:string;\r\n  data?:any;\r\n}\r\n\n                                                                                                          \r\n\r\nexport interface IEventPlugin {\r\n  priority?:number;\r\n  name?:string;\r\n  run(context:EventPluginContext, next?:() => void): void;\r\n}\r\n\n                                                                                                                                                                                                                                                \r\n\r\nexport class EventPluginContext {\r\n  public cancelled:boolean;\r\n  public client:ExceptionlessClient;\r\n  public event:IEvent;\r\n  public contextData:ContextData;\r\n\r\n  constructor(client:ExceptionlessClient, event:IEvent, contextData?:ContextData) {\r\n    this.client = client;\r\n    this.event = event;\r\n    this.contextData = contextData ? contextData : new ContextData();\r\n  }\r\n\r\n  public get log(): ILog {\r\n    return this.client.config.log;\r\n  }\r\n}\r\n\nn\nexport class EventPluginManager {\n  public static run(context:EventPluginContext, callback:(context?:EventPluginContext) => void): void {\n    var wrap = function (plugin:IEventPlugin, next?:() => void): () => void {\n      return () => {\n        try {\n          if (!context.cancelled) {\n            plugin.run(context, next);\n          }\n        } catch (ex) {\n          context.cancelled = true;\n          context.log.error(`Error running plugin '${plugin.name}': ${ex.message}. Discarding Event.`);\n        }\n\n        if (context.cancelled && !!callback) {\n          callback(context);\n        }\n      };\n    };\n\n    var plugins:IEventPlugin[] = context.client.config.plugins; // optimization for minifier.\n    var wrappedPlugins:{ (): void }[] = [];\n    if (!!callback) {\n      wrappedPlugins[plugins.length] = wrap({ name: 'cb', priority: 9007199254740992, run: callback }, null);\n    }\n\n    for (var index = plugins.length - 1; index > -1; index--) {\n      wrappedPlugins[index] = wrap(plugins[index], !!callback || (index < plugins.length - 1) ? wrappedPlugins[index + 1] : null);\n    }\n\n    wrappedPlugins[0]();\n  }\n\n  public static addDefaultPlugins(config:Configuration): void {\n    config.addPlugin(new ConfigurationDefaultsPlugin());\n    config.addPlugin(new ErrorPlugin());\n    config.addPlugin(new ModuleInfoPlugin());\n    config.addPlugin(new RequestInfoPlugin());\n    config.addPlugin(new EnvironmentInfoPlugin());\n    config.addPlugin(new SubmissionMethodPlugin());\n  }\n}\n\n                                                                                                                                                \n\nexport class ReferenceIdPlugin implements IEventPlugin {\n  public priority:number = 20;\n  public name:string = 'ReferenceIdPlugin';\n\n  public run(context:EventPluginContext, next?:() => void): void {\n    if ((!context.event.reference_id || context.event.reference_id.length === 0) && context.event.type === 'error') {\n      context.event.reference_id = Utils.guid().replace('-', '').substring(0, 10);\n    }\n\n    next && next();\n  }\n}\n\n                                                                                                                                                                                                                                                                                                               \n\nexport class DefaultEventQueue implements IEventQueue {\n  /**\n   * The configuration object.\n   * @type {Configuration}\n   * @private\n   */\n  private _config:Configuration;\n\n  /**\n   * Suspends processing until the specified time.\n   * @type {Date}\n   * @private\n   */\n  private _suspendProcessingUntil:Date;\n\n  /**\n   * Discards queued items until the specified time.\n   * @type {Date}\n   * @private\n   */\n  private _discardQueuedItemsUntil:Date;\n\n  /**\n   * Returns true if the queue is processing.\n   * @type {boolean}\n   * @private\n   */\n  private _processingQueue:boolean = false;\n\n  /**\n   * Processes the queue every xx seconds.\n   * @type {Timer}\n   * @private\n   */\n  private _queueTimer:any;\n\n  constructor(config:Configuration) {\n    this._config = config;\n  }\n\n  public enqueue(event:IEvent): void {\n    var config:Configuration = this._config; // Optmization for minifier.\n    this.ensureQueueTimer();\n\n    if (this.areQueuedItemsDiscarded()) {\n      config.log.info('Queue items are currently being discarded. The event will not be queued.');\n      return;\n    }\n\n    var key = `${this.queuePath()}-${new Date().toJSON()}-${Utils.randomNumber()}`;\n    config.log.info(`Enqueuing event: ${key} type=${event.type} ${!!event.reference_id ? 'refid=' + event.reference_id : ''}`);\n    config.storage.save(key, event);\n  }\n\n  public process(): void {\n    const queueNotProcessed:string = 'The queue will not be processed.'; // optimization for minifier.\n    var config:Configuration = this._config; // Optmization for minifier.\n    var log:ILog = config.log; // Optmization for minifier.\n\n    this.ensureQueueTimer();\n\n    if (this._processingQueue) {\n      return;\n    }\n\n    log.info('Processing queue...');\n    if (!config.enabled) {\n      log.info(`Configuration is disabled. ${queueNotProcessed}`);\n      return;\n    }\n\n    if (!config.isValid) {\n      log.info(`Invalid Api Key. ${queueNotProcessed}`);\n      return;\n    }\n\n    this._processingQueue = true;\n\n    try {\n      var events = config.storage.get(this.queuePath(), config.submissionBatchSize);\n      if (!events || events.length == 0) {\n        this._processingQueue = false;\n        return;\n      }\n\n      log.info(`Sending ${events.length} events to ${config.serverUrl}.`);\n      config.submissionClient.postEvents(events, config, (response:SubmissionResponse) => {\n        this.processSubmissionResponse(response, events);\n        log.info('Finished processing queue.');\n        this._processingQueue = false;\n      });\n    } catch (ex) {\n      log.error(`Error processing queue: ${ex}`);\n      this.suspendProcessing();\n      this._processingQueue = false;\n    }\n  }\n\n  private processSubmissionResponse(response:SubmissionResponse, events:IEvent[]): void {\n    const noSubmission:string = 'The event will not be submitted.'; // Optmization for minifier.\n    var config:Configuration = this._config; // Optmization for minifier.\n    var log:ILog = config.log; // Optmization for minifier.\n\n    if (response.success) {\n      log.info(`Sent ${events.length} events.`);\n      return;\n    }\n\n    if (response.serviceUnavailable) {\n      // You are currently over your rate limit or the servers are under stress.\n      log.error('Server returned service unavailable.');\n      this.suspendProcessing();\n      this.requeueEvents(events);\n      return;\n    }\n\n    if (response.paymentRequired) {\n      // If the organization over the rate limit then discard the event.\n      log.info('Too many events have been submitted, please upgrade your plan.');\n      this.suspendProcessing(null, true, true);\n      return;\n    }\n\n    if (response.unableToAuthenticate) {\n      // The api key was suspended or could not be authorized.\n      log.info(`Unable to authenticate, please check your configuration. ${noSubmission}`);\n      this.suspendProcessing(15);\n      return;\n    }\n\n    if (response.notFound || response.badRequest) {\n      // The service end point could not be found.\n      log.error(`Error while trying to submit data: ${response.message}`);\n      this.suspendProcessing(60 * 4);\n      return;\n    }\n\n    if (response.requestEntityTooLarge) {\n      var message = 'Event submission discarded for being too large.';\n      if (config.submissionBatchSize > 1) {\n        log.error(`${message} Retrying with smaller batch size.`);\n        config.submissionBatchSize = Math.max(1, Math.round(config.submissionBatchSize / 1.5));\n        this.requeueEvents(events);\n      } else {\n        log.error(`${message} ${noSubmission}`);\n      }\n\n      return;\n    }\n\n    if (!response.success) {\n      log.error(`Error submitting events: ${ response.message}`);\n      this.suspendProcessing();\n      this.requeueEvents(events);\n    }\n  }\n\n  private ensureQueueTimer(): void {\n    if (!this._queueTimer) {\n      this._queueTimer = setInterval(() => this.onProcessQueue(), 10000);\n    }\n  }\n\n  private onProcessQueue(): void {\n    if (!this.isQueueProcessingSuspended() && !this._processingQueue) {\n      this.process();\n    }\n  }\n\n  public suspendProcessing(durationInMinutes?:number, discardFutureQueuedItems?:boolean, clearQueue?:boolean): void {\n    var config:Configuration = this._config; // Optmization for minifier.\n\n    if (!durationInMinutes || durationInMinutes <= 0) {\n      durationInMinutes = 5;\n    }\n\n    config.log.info(`Suspending processing for ${durationInMinutes} minutes.`);\n    this._suspendProcessingUntil = new Date(new Date().getTime() + (durationInMinutes * 60000));\n\n    if (discardFutureQueuedItems) {\n      this._discardQueuedItemsUntil = new Date(new Date().getTime() + (durationInMinutes * 60000));\n    }\n\n    if (!clearQueue) {\n      return;\n    }\n\n    // Account is over the limit and we want to ensure that the sample size being sent in will contain newer errors.\n    try {\n      config.storage.clear(this.queuePath());\n    } catch (Exception) { }\n  }\n\n  private requeueEvents(events:IEvent[]): void {\n    this._config.log.info(`Requeuing ${events.length} events.`);\n\n    for (var index = 0; index < events.length; index++) {\n      this.enqueue(events[index]);\n    }\n  }\n\n  private isQueueProcessingSuspended(): boolean {\n    return this._suspendProcessingUntil && this._suspendProcessingUntil > new Date();\n  }\n\n  private areQueuedItemsDiscarded(): boolean {\n    return this._discardQueuedItemsUntil && this._discardQueuedItemsUntil > new Date();\n  }\n\n  private queuePath(): string {\n    return 'ex-q';\n  }\n}\n\n                                      \r\n\r\nexport class InMemoryStorage<T> implements IStorage<T> {\r\n  private _items = {};\r\n\r\n  public save<T>(path:string, value:T):boolean {\r\n    this._items[path] = value;\r\n    return true;\r\n  }\r\n\r\n  public get(searchPattern?:string, limit?:number):T[] {\r\n    var results:T[] = [];\r\n    var regex = new RegExp(searchPattern || '.*');\r\n\r\n    for (var key in this._items) {\r\n      if (results.length >= limit) {\r\n        break;\r\n      }\r\n\r\n      if (regex.test(key)) {\r\n        results.push(this._items[key]);\r\n        delete this._items[key];\r\n      }\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  public clear(searchPattern?:string):void {\r\n    if (!searchPattern) {\r\n      this._items = {};\r\n      return;\r\n    }\r\n\r\n    var regex = new RegExp(searchPattern);\r\n    for (var key in this._items) {\r\n      if (regex.test(key)) {\r\n        delete this._items[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  public count(searchPattern?:string):number {\r\n    var regex = new RegExp(searchPattern || '.*');\r\n    var results:T[] = [];\r\n    for (var key in this._items) {\r\n      if (regex.test(key)) {\r\n        results.push(key);\r\n      }\r\n    }\r\n\r\n    return results.length;\r\n  }\r\n}\r\n\n                                                 \r\n\r\nexport class Utils {\r\n  public static addRange<T>(target:T[], ...values:T[]) {\r\n    if (!target) {\r\n      target = [];\r\n    }\r\n\r\n    if (!values || values.length === 0) {\r\n      return target;\r\n    }\r\n\r\n    for (var index = 0; index < values.length; index++) {\r\n      if (values[index] && target.indexOf(values[index]) < 0) {\r\n        target.push(values[index]);\r\n      }\r\n    }\r\n\r\n    return target;\r\n  }\r\n\r\n  public static getHashCode(source:string): string {\r\n    if (!source || source.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    var hash:number = 0;\r\n    for (var index = 0; index < source.length; index++) {\r\n      var character   = source.charCodeAt(index);\r\n      hash  = ((hash << 5) - hash) + character;\r\n      hash |= 0;\r\n    }\r\n\r\n    return hash.toString();\r\n  }\r\n\r\n  public static getCookies(cookies:string): Object {\r\n    var result:Object = {};\r\n\r\n    var parts:string[] = (cookies || '').split('; ');\r\n    for (var index = 0; index < parts.length; index++) {\r\n      var cookie:string[] = parts[index].split('=');\r\n      result[cookie[0]] = cookie[1];\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public static guid(): string {\r\n    function s4() {\r\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\r\n  }\r\n\r\n  public static merge(defaultValues:Object, values:Object) {\r\n    var result:Object = {};\r\n\r\n    for (var key in defaultValues || {}) {\r\n      if (!!defaultValues[key]) {\r\n        result[key] = defaultValues[key];\r\n      }\r\n    }\r\n\r\n    for (var key in values || {}) {\r\n      if (!!values[key]) {\r\n        result[key] = values[key];\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public static parseVersion(source:string): string {\r\n    if (!source) {\r\n      return null;\r\n    }\r\n\r\n    var versionRegex = /(v?((\\d+)\\.(\\d+)(\\.(\\d+))?)(?:-([\\dA-Za-z\\-]+(?:\\.[\\dA-Za-z\\-]+)*))?(?:\\+([\\dA-Za-z\\-]+(?:\\.[\\dA-Za-z\\-]+)*))?)/;\r\n    var matches = versionRegex.exec(source);\r\n    if (matches && matches.length > 0) {\r\n      return matches[0];\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public static parseQueryString(query:string) {\r\n    if (!query || query.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    var pairs:string[] = query.split('&');\r\n    if (pairs.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    var result:Object = {};\r\n    for (var index = 0; index < pairs.length; index++) {\r\n      var pair = pairs[index].split('=');\r\n      result[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public static randomNumber(): number {\r\n    return Math.floor(Math.random() * 9007199254740992);\r\n  }\r\n\r\n  public static stringify(data:any, exclusions?:string[]): string {\r\n    function checkForMatch(pattern:string, value:string): boolean {\r\n      if (!pattern || !value || typeof value !== 'string') {\r\n        return false;\r\n      }\r\n\r\n      var trim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\r\n      pattern = pattern.toLowerCase().replace(trim, '');\r\n      value = value.toLowerCase().replace(trim, '');\r\n\r\n      if (pattern.length <= 0) {\r\n        return false;\r\n      }\r\n\r\n      var startsWithWildcard:boolean = pattern[0] === '*';\r\n      if (startsWithWildcard) {\r\n        pattern = pattern.slice(1);\r\n      }\r\n\r\n      var endsWithWildcard:boolean = pattern[pattern.length - 1] === '*';\r\n      if (endsWithWildcard) {\r\n        pattern = pattern.substring(0, pattern.length - 1);\r\n      }\r\n\r\n\r\n      if (startsWithWildcard && endsWithWildcard)\r\n        return value.indexOf(pattern) !== -1;\r\n\r\n      if (startsWithWildcard)\r\n        return value.lastIndexOf(pattern, 0) !== -1;\r\n\r\n      if (endsWithWildcard)\r\n        return value.lastIndexOf(pattern) === (value.length - pattern.length);\r\n\r\n      return value === pattern;\r\n    }\r\n\r\n    function stringifyImpl(data:any, exclusions:string[]): string {\r\n      var cache:string[] = [];\r\n      return JSON.stringify(data, function(key:string, value:any) {\r\n        for (var index = 0; index < (exclusions || []).length; index++) {\r\n          if (checkForMatch(exclusions[index], key)){\r\n            return;\r\n          }\r\n        }\r\n\r\n        if (typeof value === 'object' && !!value) {\r\n          if (cache.indexOf(value) !== -1) {\r\n            // Circular reference found, discard key\r\n            return;\r\n          }\r\n\r\n          cache.push(value);\r\n        }\r\n\r\n        return value;\r\n      });\r\n    }\r\n\r\n    if (toString.call(data) === '[object Array]') {\r\n      var result = [];\r\n      for (var index = 0; index < data.length; index++) {\r\n        result[index] = JSON.parse(stringifyImpl(data[index], exclusions || []));\r\n      }\r\n\r\n      return JSON.stringify(result);\r\n    }\r\n\r\n    return stringifyImpl(data, exclusions || []);\r\n  }\r\n}\r\n\nr\n\r\nexport class Configuration implements IConfigurationSettings {\r\n  /**\r\n   * A default list of tags that will automatically be added to every\r\n   * report submitted to the server.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  public defaultTags:string[] = [];\r\n\r\n  /**\r\n   * A default list of of extended data objects that will automatically\r\n   * be added to every report submitted to the server.\r\n   *\r\n   * @type {{}}\r\n   */\r\n  public defaultData:Object = {};\r\n\r\n  /**\r\n   * Whether the client is currently enabled or not. If it is disabled,\r\n   * submitted errors will be discarded and no data will be sent to the server.\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  public enabled:boolean = true;\r\n\r\n  public environmentInfoCollector:IEnvironmentInfoCollector;\r\n  public errorParser:IErrorParser;\r\n  public lastReferenceIdManager:ILastReferenceIdManager = new DefaultLastReferenceIdManager();\r\n  public log:ILog;\r\n  public moduleCollector:IModuleCollector;\r\n  public requestInfoCollector:IRequestInfoCollector;\r\n\r\n  /**\r\n   * Maximum number of events that should be sent to the server together in a batch. (Defaults to 50)\r\n   */\r\n  public submissionBatchSize:number;\r\n  public submissionClient:ISubmissionClient;\r\n\r\n  /**\r\n   * Contains a dictionary of custom settings that can be used to control\r\n   * the client and will be automatically updated from the server.\r\n   */\r\n  public settings:Object = {};\r\n\r\n  public storage:IStorage<Object>;\r\n\r\n  public queue:IEventQueue;\r\n\r\n  constructor(configSettings?:IConfigurationSettings) {\r\n    function inject(fn:any) {\r\n      return typeof fn === 'function' ? fn(this) : fn;\r\n    }\r\n\r\n    configSettings = Utils.merge(Configuration.defaults, configSettings);\r\n\r\n    this.log = inject(configSettings.log) || new NullLog();\r\n    this.apiKey = configSettings.apiKey;\r\n    this.serverUrl = configSettings.serverUrl;\r\n\r\n    this.environmentInfoCollector = inject(configSettings.environmentInfoCollector);\r\n    this.errorParser = inject(configSettings.errorParser);\r\n    this.lastReferenceIdManager = inject(configSettings.lastReferenceIdManager) || new DefaultLastReferenceIdManager();\r\n    this.moduleCollector = inject(configSettings.moduleCollector);\r\n    this.requestInfoCollector = inject(configSettings.requestInfoCollector);\r\n    this.submissionBatchSize = inject(configSettings.submissionBatchSize) || 50;\r\n    this.submissionClient = inject(configSettings.submissionClient);\r\n    this.storage = inject(configSettings.storage) || new InMemoryStorage<any>();\r\n    this.queue = inject(configSettings.queue) || new DefaultEventQueue(this);\r\n\r\n    SettingsManager.applySavedServerSettings(this);\r\n    EventPluginManager.addDefaultPlugins(this);\r\n  }\r\n\r\n  /**\r\n   * The API key that will be used when sending events to the server.\r\n   * @type {string}\r\n   * @private\r\n   */\r\n  private _apiKey:string;\r\n\r\n  /**\r\n   * The API key that will be used when sending events to the server.\r\n   * @returns {string}\r\n   */\r\n  public get apiKey():string {\r\n    return this._apiKey;\r\n  }\r\n\r\n  /**\r\n   * The API key that will be used when sending events to the server.\r\n   * @param value\r\n   */\r\n  public set apiKey(value:string) {\r\n    this._apiKey = value || null;\r\n    this.log.info(`apiKey: ${this._apiKey}`);\r\n  }\r\n\r\n  /**\r\n   * Returns true if the apiKey is valid.\r\n   * @returns {boolean}\r\n   */\r\n  public get isValid():boolean {\r\n    return !!this.apiKey && this.apiKey.length >= 10;\r\n  }\r\n\r\n  /**\r\n   * The server url that all events will be sent to.\r\n   * @type {string}\r\n   * @private\r\n   */\r\n  private _serverUrl:string = 'https://collector.exceptionless.io';\r\n\r\n  /**\r\n   * The server url that all events will be sent to.\r\n   * @returns {string}\r\n   */\r\n  public get serverUrl():string {\r\n    return this._serverUrl;\r\n  }\r\n\r\n  /**\r\n   * The server url that all events will be sent to.\r\n   * @param value\r\n   */\r\n  public set serverUrl(value:string) {\r\n    if (!!value) {\r\n      this._serverUrl = value;\r\n      this.log.info(`serverUrl: ${this._serverUrl}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A list of exclusion patterns.\r\n   * @type {Array}\r\n   * @private\r\n   */\r\n  private _dataExclusions:string[] = [];\r\n\r\n  /**\r\n   *  A list of exclusion patterns that will automatically remove any data that\r\n   *  matches them from any data submitted to the server.\r\n   *\r\n   *  For example, entering CreditCard will remove any extended data properties,\r\n   *  form fields, cookies and query parameters from the report.\r\n   *\r\n   * @returns {string[]}\r\n   */\r\n  public get dataExclusions():string[] {\r\n    var exclusions:string = this.settings['@@DataExclusions'];\r\n    return this._dataExclusions.concat(exclusions && exclusions.split(',') || []);\r\n  }\r\n\r\n  /**\r\n   * Add items to the list of exclusion patterns that will automatically remove any\r\n   * data that matches them from any data submitted to the server.\r\n   *\r\n   * For example, entering CreditCard will remove any extended data properties, form\r\n   * fields, cookies and query parameters from the report.\r\n   *\r\n   * @param exclusions\r\n   */\r\n  public addDataExclusions(...exclusions:string[]) {\r\n    this._dataExclusions = Utils.addRange<string>(this._dataExclusions, ...exclusions);\r\n  }\r\n\r\n  /**\r\n   * The list of plugins that will be used in this configuration.\r\n   * @type {Array}\r\n   * @private\r\n   */\r\n  private _plugins:IEventPlugin[] = [];\r\n\r\n  /**\r\n   * The list of plugins that will be used in this configuration.\r\n   * @returns {IEventPlugin[]}\r\n   */\r\n  public get plugins():IEventPlugin[] {\r\n    return this._plugins.sort((p1:IEventPlugin, p2:IEventPlugin) => {\r\n      return (p1.priority < p2.priority) ? -1 : (p1.priority > p2.priority) ? 1 : 0;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Register an plugin to be used in this configuration.\r\n   * @param plugin\r\n   */\r\n  public addPlugin(plugin:IEventPlugin): void;\r\n\r\n  /**\r\n   * Register an plugin to be used in this configuration.\r\n   * @param name The name used to identify the plugin.\r\n   * @param priority Used to determine plugins priority.\r\n   * @param pluginAction A function that is run.\r\n   */\r\n  public addPlugin(name:string, priority:number, pluginAction:(context:EventPluginContext, next?:() => void) => void): void;\r\n  public addPlugin(pluginOrName:IEventPlugin|string, priority?:number, pluginAction?:(context:EventPluginContext, next?:() => void) => void): void {\r\n    var plugin:IEventPlugin = !!pluginAction ? { name: <string>pluginOrName, priority: priority, run: pluginAction } : <IEventPlugin>pluginOrName;\r\n    if (!plugin || !plugin.run) {\r\n      this.log.error('Add plugin failed: Run method not defined');\r\n      return;\r\n    }\r\n\r\n    if (!plugin.name) {\r\n      plugin.name = Utils.guid();\r\n    }\r\n\r\n    if (!plugin.priority) {\r\n      plugin.priority = 0;\r\n    }\r\n\r\n    var pluginExists:boolean = false;\r\n    var plugins = this._plugins; // optimization for minifier.\r\n    for (var index = 0; index < plugins.length; index++) {\r\n      if (plugins[index].name === plugin.name) {\r\n        pluginExists = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!pluginExists) {\r\n      plugins.push(plugin);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove the plugin from this configuration.\r\n   * @param plugin\r\n   */\r\n  public removePlugin(plugin:IEventPlugin): void;\r\n\r\n  /**\r\n   * Remove an plugin by key from this configuration.\r\n   * @param name\r\n   */\r\n  public removePlugin(name:string): void;\r\n  public removePlugin(pluginOrName:IEventPlugin|string): void {\r\n    var name:string = typeof pluginOrName === 'string' ? pluginOrName : pluginOrName.name;\r\n    if (!name) {\r\n      this.log.error('Remove plugin failed: Plugin name not defined');\r\n      return;\r\n    }\r\n\r\n    var plugins = this._plugins; // optimization for minifier.\r\n    for (var index = 0; index < plugins.length; index++) {\r\n      if (plugins[index].name === name) {\r\n        plugins.splice(index, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Automatically set the application version for events.\r\n   * @param version\r\n   */\r\n  public setVersion(version:string): void {\r\n    if (!!version) {\r\n      this.defaultData['@version'] = version;\r\n    }\r\n  }\r\n\r\n  public setUserIdentity(userInfo:IUserInfo): void;\r\n  public setUserIdentity(identity:string): void;\r\n  public setUserIdentity(identity:string, name:string): void;\r\n  public setUserIdentity(userInfoOrIdentity:IUserInfo|string, name?:string): void {\r\n    const user:string = '@user'; // optimization for minifier.\r\n    var userInfo:IUserInfo = typeof userInfoOrIdentity !== 'string' ? userInfoOrIdentity : { identity: userInfoOrIdentity, name: name };\r\n\r\n    var shouldRemove:boolean = !userInfo || (!userInfo.identity && !userInfo.name);\r\n    if (shouldRemove) {\r\n      delete this.defaultData[user];\r\n    } else {\r\n      this.defaultData[user] = userInfo;\r\n    }\r\n\r\n    this.log.info(`user identity: ${shouldRemove ? 'null' : userInfo.identity}`);\r\n  }\r\n\r\n  /**\r\n   * Used to identify the client that sent the events to the server.\r\n   * @returns {string}\r\n   */\r\n  public get userAgent():string {\r\n    return 'exceptionless-js/1.0.0.0';\r\n  }\r\n\r\n  /**\r\n   * Automatically set a reference id for error events.\r\n   */\r\n  public useReferenceIds(): void {\r\n    this.addPlugin(new ReferenceIdPlugin());\r\n  }\r\n\r\n  // TODO: Support a min log level.\r\n  public useDebugLogger(): void {\r\n    this.log = new ConsoleLog();\r\n  }\r\n\r\n  /**\r\n   * The default configuration settings that are applied to new configuration instances.\r\n   * @type {IConfigurationSettings}\r\n   * @private\r\n   */\r\n  private static _defaultSettings:IConfigurationSettings = null;\r\n\r\n  /**\r\n   * The default configuration settings that are applied to new configuration instances.\r\n   * @returns {IConfigurationSettings}\r\n   */\r\n  public static get defaults() {\r\n    if (Configuration._defaultSettings === null) {\r\n      Configuration._defaultSettings = {};\r\n    }\r\n\r\n    return Configuration._defaultSettings;\r\n  }\r\n}\r\n\n                                                                                                                                                                                                                                                                                                                                                                            \n\nexport class EventBuilder {\n  private _validIdentifierErrorMessage:string = \"must contain between 8 and 100 alphanumeric or '-' characters.\"; // optimization for minifier.\n\n  public target:IEvent;\n  public client:ExceptionlessClient;\n  public pluginContextData:ContextData;\n\n  constructor(event:IEvent, client:ExceptionlessClient, pluginContextData?:ContextData) {\n    this.target = event;\n    this.client = client;\n    this.pluginContextData = pluginContextData || new ContextData();\n  }\n\n  public setType(type:string): EventBuilder {\n    if (!!type) {\n      this.target.type = type;\n    }\n\n    return this;\n  }\n\n  public setSource(source:string): EventBuilder {\n    if (!!source) {\n      this.target.source = source;\n    }\n\n    return this;\n  }\n\n  public setSessionId(sessionId:string): EventBuilder {\n    if (!this.isValidIdentifier(sessionId)) {\n      throw new Error(`SessionId ${this._validIdentifierErrorMessage}`);\n    }\n\n    this.target.session_id = sessionId;\n    return this;\n  }\n\n  public setReferenceId(referenceId:string): EventBuilder {\n    if (!this.isValidIdentifier(referenceId)) {\n      throw new Error(`ReferenceId ${this._validIdentifierErrorMessage}`);\n    }\n\n    this.target.reference_id = referenceId;\n    return this;\n  }\n\n  public setMessage(message:string): EventBuilder {\n    if (!!message) {\n      this.target.message = message;\n    }\n\n    return this;\n  }\n\n  public setGeo(latitude: number, longitude: number): EventBuilder {\n    if (latitude < -90.0 || latitude > 90.0)\n      throw new Error('Must be a valid latitude value between -90.0 and 90.0.');\n    if (longitude < -180.0 || longitude > 180.0)\n      throw new Error('Must be a valid longitude value between -180.0 and 180.0.');\n\n    this.target.geo = `${latitude},${longitude}`;\n    return this;\n  }\n\n  public setUserIdentity(userInfo:IUserInfo): EventBuilder;\n  public setUserIdentity(identity:string): EventBuilder;\n  public setUserIdentity(identity:string, name:string): EventBuilder;\n  public setUserIdentity(userInfoOrIdentity:IUserInfo|string, name?:string): EventBuilder {\n    var userInfo = typeof userInfoOrIdentity !== 'string' ? userInfoOrIdentity : { identity: userInfoOrIdentity, name: name };\n    if (!userInfo || (!userInfo.identity && !userInfo.name)) {\n      return this;\n    }\n\n    this.setProperty('@user', userInfo);\n    return this;\n  }\n\n  public setValue(value:number): EventBuilder {\n    if (!!value) {\n      this.target.value = value;\n    }\n\n    return this;\n  }\n\n  public addTags(...tags:string[]): EventBuilder {\n    this.target.tags = Utils.addRange<string>(this.target.tags, ...tags);\n    return this;\n  }\n\n  public setProperty(name:string, value:any): EventBuilder {\n    if (!name || (value === undefined || value == null)) {\n      return this;\n    }\n\n    if (!this.target.data) {\n      this.target.data = {};\n    }\n\n    this.target.data[name] = value;\n    return this;\n  }\n\n  public markAsCritical(critical:boolean): EventBuilder {\n    if (critical) {\n      this.addTags('Critical');\n    }\n\n    return this;\n  }\n\n  public addRequestInfo(request:Object): EventBuilder {\n    if (!!request) {\n      this.pluginContextData['@request'] = request;\n    }\n\n    return this;\n  }\n\n  public submit(callback?:(context:EventPluginContext) => void): void {\n    this.client.submitEvent(this.target, this.pluginContextData, callback);\n  }\n\n  private isValidIdentifier(value:string): boolean {\n    if (!value) {\n      return true;\n    }\n\n    if (value.length < 8 || value.length > 100) {\n      return false;\n    }\n\n    for (var index = 0; index < value.length; index++) {\n      var code = value.charCodeAt(index);\n      var isDigit = (code >= 48) && (code <= 57);\n      var isLetter = ((code >= 65) && (code <= 90)) || ((code >= 97) && (code <= 122));\n      var isMinus = code === 45;\n\n      if (!(isDigit || isLetter) && !isMinus) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n\n                                                                                  \r\n\r\nexport interface IError extends IInnerError {\r\n  modules?:IModule[]\r\n}\r\n\nexport interface IUserDescription {\r\n  email_address?:string;\r\n  description?:string;\r\n  data?:any;\r\n}\r\n\nexport class SubmissionResponse {\r\n  success:boolean = false;\r\n  badRequest:boolean = false;\r\n  serviceUnavailable:boolean = false;\r\n  paymentRequired:boolean = false;\r\n  unableToAuthenticate:boolean = false;\r\n  notFound:boolean = false;\r\n  requestEntityTooLarge:boolean = false;\r\n  statusCode:number;\r\n  message:string;\r\n\r\n  constructor(statusCode:number, message?:string) {\r\n    this.statusCode = statusCode;\r\n    this.message = message;\r\n\r\n    this.success = statusCode >= 200 && statusCode <= 299;\r\n    this.badRequest = statusCode === 400;\r\n    this.serviceUnavailable = statusCode === 503;\r\n    this.paymentRequired = statusCode === 402;\r\n    this.unableToAuthenticate = statusCode === 401 || statusCode === 403;\r\n    this.notFound = statusCode === 404;\r\n    this.requestEntityTooLarge = statusCode === 413;\r\n  }\r\n}\r\n\nn\nexport class ExceptionlessClient {\n  public config:Configuration;\n\n  constructor();\n  constructor(settings:IConfigurationSettings);\n  constructor(apiKey:string, serverUrl?:string);\n  constructor(settingsOrApiKey?:IConfigurationSettings|string, serverUrl?:string) {\n    if (typeof settingsOrApiKey !== 'object') {\n      this.config = new Configuration(settingsOrApiKey);\n    } else {\n      this.config = new Configuration({ apiKey: <string>settingsOrApiKey, serverUrl: serverUrl });\n    }\n  }\n\n  public createException(exception:Error): EventBuilder {\n    var pluginContextData = new ContextData();\n    pluginContextData.setException(exception);\n    return this.createEvent(pluginContextData).setType('error');\n  }\n\n  public submitException(exception:Error, callback?:(context:EventPluginContext) => void): void {\n    this.createException(exception).submit(callback);\n  }\n\n  public createUnhandledException(exception:Error, submissionMethod?:string): EventBuilder {\n    var builder = this.createException(exception);\n    builder.pluginContextData.markAsUnhandledError();\n    builder.pluginContextData.setSubmissionMethod(submissionMethod);\n\n    return builder;\n  }\n\n  public submitUnhandledException(exception:Error, submissionMethod?:string, callback?:(context:EventPluginContext) => void) {\n    this.createUnhandledException(exception, submissionMethod).submit(callback);\n  }\n\n  public createFeatureUsage(feature:string): EventBuilder {\n    return this.createEvent().setType('usage').setSource(feature);\n  }\n\n  public submitFeatureUsage(feature:string, callback?:(context:EventPluginContext) => void): void {\n    this.createFeatureUsage(feature).submit(callback);\n  }\n\n  public createLog(message:string): EventBuilder;\n  public createLog(source:string, message:string): EventBuilder;\n  public createLog(source:string, message:string, level:string): EventBuilder;\n  public createLog(sourceOrMessage:string, message?:string, level?:string): EventBuilder {\n    var builder = this.createEvent().setType('log');\n\n    if (sourceOrMessage && message && level) {\n      builder = builder.setSource(sourceOrMessage).setMessage(message).setProperty('@level', level);\n    } else if (sourceOrMessage && message) {\n      builder = builder.setSource(sourceOrMessage).setMessage(message);\n    } else {\n      // TODO: Look into using https://www.stevefenton.co.uk/Content/Blog/Date/201304/Blog/Obtaining-A-Class-Name-At-Runtime-In-TypeScript/\n      var source = (<any>(arguments.callee.caller)).name;\n      builder = builder.setSource(source).setMessage(sourceOrMessage);\n    }\n\n    return builder;\n  }\n\n  public submitLog(message:string): void;\n  public submitLog(source:string, message:string): void;\n  public submitLog(source:string, message:string, level:string, callback?:(context:EventPluginContext) => void): void;\n  public submitLog(sourceOrMessage:string, message?:string, level?:string, callback?:(context:EventPluginContext) => void): void {\n    this.createLog(sourceOrMessage, message, level).submit(callback);\n  }\n\n  public createNotFound(resource:string): EventBuilder {\n    return this.createEvent().setType('404').setSource(resource);\n  }\n\n  public submitNotFound(resource:string, callback?:(context:EventPluginContext) => void): void {\n    this.createNotFound(resource).submit(callback);\n  }\n\n  public createSessionStart(sessionId:string): EventBuilder {\n    return this.createEvent().setType('start').setSessionId(sessionId);\n  }\n\n  public submitSessionStart(sessionId:string, callback?:(context:EventPluginContext) => void): void {\n    this.createSessionStart(sessionId).submit(callback);\n  }\n\n  public createSessionEnd(sessionId:string): EventBuilder {\n    return this.createEvent().setType('end').setSessionId(sessionId);\n  }\n\n  public submitSessionEnd(sessionId:string, callback?:(context:EventPluginContext) => void): void {\n    this.createSessionEnd(sessionId).submit(callback);\n  }\n\n  public createEvent(pluginContextData?:ContextData): EventBuilder {\n    return new EventBuilder({ date: new Date() }, this, pluginContextData);\n  }\n\n  /**\n   * Submits the event to be sent to the server.\n   * @param event The event data.\n   * @param pluginContextData Any contextual data objects to be used by Exceptionless plugins to gather default information for inclusion in the report information.\n   * @param callback\n   */\n  public submitEvent(event:IEvent, pluginContextData?:ContextData, callback?:(context:EventPluginContext) => void): void {\n    function cancelled() {\n      if (!!context) {\n        context.cancelled = true;\n      }\n\n      return !!callback && callback(context);\n    }\n\n    if (!event) {\n      return cancelled();\n    }\n\n    if (!this.config.enabled) {\n      this.config.log.info('Event submission is currently disabled.');\n      return cancelled();\n    }\n\n    if (!event.data) {\n      event.data = {};\n    }\n\n    if (!event.tags || !event.tags.length) {\n      event.tags = [];\n    }\n\n    var context = new EventPluginContext(this, event, pluginContextData);\n    EventPluginManager.run(context, function (context:EventPluginContext) {\n      let ev = context.event;\n      if (!context.cancelled) {\n        // ensure all required data\n        if (!ev.type || ev.type.length === 0) {\n          ev.type = 'log';\n        }\n\n        if (!ev.date) {\n          ev.date = new Date();\n        }\n\n        var config = context.client.config;\n        config.queue.enqueue(ev);\n\n        if (ev.reference_id && ev.reference_id.length > 0) {\n          context.log.info(`Setting last reference id '${ev.reference_id}'`);\n          config.lastReferenceIdManager.setLast(ev.reference_id);\n        }\n      }\n\n      !!callback && callback(context);\n    });\n  }\n\n  /**\n   * Updates the user's email address and description of an event for the specified reference id.\n   * @param referenceId The reference id of the event to update.\n   * @param email The user's email address to set on the event.\n   * @param description The user's description of the event.\n   */\n  public updateUserEmailAndDescription(referenceId:string, email:string, description:string, callback?:(response:SubmissionResponse) => void) {\n    if (!referenceId || !email || !description || !this.config.enabled) {\n      return !!callback && callback(new SubmissionResponse(500, 'cancelled'));\n    }\n\n    var userDescription:IUserDescription = { email_address: email, description: description };\n    var response = this.config.submissionClient.postUserDescription(referenceId, userDescription, this.config, (response:SubmissionResponse) => {\n      if (!response.success) {\n        this.config.log.error(`Failed to submit user email and description for event '${referenceId}': ${response.statusCode} ${response.message}`)\n      }\n\n      !!callback && callback(response);\n    });\n  }\n\n  /**\n   * Gets the last event client id that was submitted to the server.\n   * @returns {string} The event client id.\n   */\n  public getLastReferenceId(): string {\n    return this.config.lastReferenceIdManager.getLast();\n  }\n\n  /**\n   * The default ExceptionlessClient instance.\n   * @type {ExceptionlessClient}\n   * @private\n   */\n  private static _instance:ExceptionlessClient = null;\n\n\n  /**\n   * The default ExceptionlessClient instance.\n   * @type {ExceptionlessClient}\n   */\n  public static get default() {\n    if(ExceptionlessClient._instance === null) {\n      ExceptionlessClient._instance = new ExceptionlessClient(null);\n    }\n\n    return ExceptionlessClient._instance;\n  }\n}\n\nexport interface IParameter {\r\n  data?:any;\r\n  generic_arguments?:string[];\r\n\r\n  name?:string;\r\n  type?:string;\r\n  type_namespace?:string;\r\n}\r\n\n                                          \r\n\r\nexport interface IMethod {\r\n  data?:any;\r\n  generic_arguments?:string[];\r\n  parameters?:IParameter[];\r\n\r\n  is_signature_target?:boolean;\r\n  declaring_namespace?:string;\r\n  declaring_type?:string;\r\n  name?:string;\r\n  module_id?:number;\r\n}\r\n\n                                    \r\n\r\nexport interface IStackFrame extends IMethod {\r\n  file_name?:string;\r\n  line_number?:number;\r\n  column?:number;\r\n}\r\n\n                                                                                  \r\n\r\nexport interface IInnerError {\r\n  message?:string;\r\n  type?:string;\r\n  code?:string;\r\n  data?:any;\r\n  inner?:IInnerError\r\n  stack_trace?:IStackFrame[];\r\n  target_method?:IMethod;\r\n}\r\n\nexport interface IModule {\r\n  data?:any;\r\n\r\n  module_id?:number;\r\n  name?:string;\r\n  version?:string;\r\n  is_entry?:boolean;\r\n  created_date?:Date;\r\n  modified_date?:Date;\r\n}\r\n\n                                                                                                           \n\nexport class ConfigurationDefaultsPlugin implements IEventPlugin {\n  public priority:number = 10;\n  public name:string = 'ConfigurationDefaultsPlugin';\n\n  public run(context:EventPluginContext, next?:() => void): void {\n    var defaultTags:string[] = context.client.config.defaultTags || [];\n    for (var index = 0; index < defaultTags.length; index++) {\n      var tag = defaultTags[index];\n      if (!!tag && context.event.tags.indexOf(tag) < 0) {\n        context.event.tags.push(tag)\n      }\n    }\n\n    var defaultData:Object = context.client.config.defaultData || {};\n    for (var key in defaultData) {\n      if (!!defaultData[key]) {\n        context.event.data[key] = defaultData[key];\n      }\n    }\n\n    next && next();\n  }\n}\n\n                                                                                                           \n\nexport class ErrorPlugin implements IEventPlugin {\n  public priority:number = 30;\n  public name:string = 'ErrorPlugin';\n\n  public run(context:EventPluginContext, next?:() => void): void {\n    const error:string = '@error'; // optimization for minifier.\n\n    var exception = context.contextData.getException();\n    if (!!exception) {\n      context.event.type = 'error';\n\n      if (!context.event.data[error]) {\n        var parser = context.client.config.errorParser;\n        if (!parser) {\n          throw new Error('No error parser was defined.');\n        }\n\n        var result = parser.parse(context, exception);\n        if (!!result) {\n          context.event.data[error] = result;\n        }\n      }\n    }\n\n    next && next();\n  }\n}\n\n                                                                                                                                                                                                \n\nexport class ModuleInfoPlugin implements IEventPlugin {\n  public priority:number = 40;\n  public name:string = 'ModuleInfoPlugin';\n\n  public run(context:EventPluginContext, next?:() => void): void {\n    const error:string = '@error'; // optimization for minifier.\n\n    var collector = context.client.config.moduleCollector;\n    if (context.event.data[error] && !context.event.data['@error'].modules && !!collector) {\n      var modules = collector.getModules(context);\n      if (modules && modules.length > 0) {\n        context.event.data[error].modules = modules;\n      }\n    }\n\n    next && next();\n  }\n}\n\nexport interface IRequestInfo {\r\n  user_agent?:string;\r\n  http_method?:string;\r\n  is_secure?:boolean;\r\n  host?:string;\r\n  port?:number;\r\n  path?:string;\r\n  referrer?:string;\r\n  client_ip_address?:string;\r\n  cookies?:any;\r\n  post_data?:any;\r\n  query_string?:any;\r\n  data?:any\r\n}\r\n\n                                                                                                                                                                     \n\nexport class RequestInfoPlugin implements IEventPlugin {\n  public priority:number = 60;\n  public name:string = 'RequestInfoPlugin';\n\n  public run(context:EventPluginContext, next?:() => void): void {\n    const request:string = '@request'; // optimization for minifier.\n\n    var collector = context.client.config.requestInfoCollector;\n    if (!context.event.data[request] && !!collector) {\n      var requestInfo = collector.getRequestInfo(context);\n      if (!!requestInfo) {\n        context.event.data[request] = requestInfo;\n      }\n    }\n\n    next && next();\n  }\n}\n\n                                                                                                                                                                             \n\nexport class EnvironmentInfoPlugin implements IEventPlugin {\n  public priority:number = 70;\n  public name:string = 'EnvironmentInfoPlugin';\n\n  public run(context:EventPluginContext, next?:() => void): void {\n    const environment:string = '@environment'; // optimization for minifier.\n\n    var collector = context.client.config.environmentInfoCollector;\n    if (!context.event.data[environment] && collector) {\n      var environmentInfo = collector.getEnvironmentInfo(context);\n      if (!!environmentInfo) {\n        context.event.data[environment] = environmentInfo;\n      }\n    }\n\n    next && next();\n  }\n}\n\n                                                                                                           \n\nexport class SubmissionMethodPlugin implements IEventPlugin {\n  public priority:number = 100;\n  public name:string = 'SubmissionMethodPlugin';\n\n  public run(context:EventPluginContext, next?:() => void): void {\n    var submissionMethod:string = context.contextData.getSubmissionMethod();\n    if (!!submissionMethod) {\n      context.event.data['@submission_method'] = submissionMethod;\n    }\n\n    next && next();\n  }\n}\n\nexport class SettingsResponse {\r\n  success:boolean = false;\r\n  settings:any;\r\n  settingsVersion:number = -1;\r\n  message:string;\r\n  exception:any;\r\n\r\n  constructor(success:boolean, settings:any, settingsVersion:number = -1, exception:any = null, message:string = null) {\r\n    this.success = success;\r\n    this.settings = settings;\r\n    this.settingsVersion = settingsVersion;\r\n    this.exception = exception;\r\n    this.message = message;\r\n  }\r\n}\r\n\n                                                                                                                                                                                                           \n\nimport os = require('os');\n\nexport class NodeEnvironmentInfoCollector implements IEnvironmentInfoCollector {\n  public getEnvironmentInfo(context:EventPluginContext): IEnvironmentInfo {\n    function getIpAddresses():string {\n      var ips:string[] = [];\n      var interfaces = os.networkInterfaces();\n      Object.keys(interfaces).forEach((name) => {\n        interfaces[name].forEach((iface:any) => {\n          if ('IPv4' === iface.family && !iface.internal) {\n            ips.push(iface.address);\n          }\n        });\n      });\n\n      return ips.join(', ');\n    }\n\n    if (!os) {\n      return null;\n    }\n\n    var environmentInfo: IEnvironmentInfo = {\n      processor_count: os.cpus().length,\n      total_physical_memory: os.totalmem(),\n      available_physical_memory: os.freemem(),\n      command_line: process.argv.join(' '),\n      process_name: process.title,\n      process_id: process.pid + '',\n      process_memory_size: process.memoryUsage().heapTotal,\n      //thread_id: '',\n      architecture: os.arch(),\n      o_s_name: os.type(),\n      o_s_version: os.release(),\n      ip_address: getIpAddresses(),\n      machine_name: os.hostname(),\n      //install_id: '',\n      runtime_version: process.version,\n      data: {\n        loadavg: os.loadavg(),\n        platform: os.platform(),\n        tmpdir: os.tmpdir(),\n        uptime: os.uptime()\n      }\n    };\n\n    if ((<any>os).endianness) {\n      environmentInfo.data.endianness = (<any>os).endianness();\n    }\n\n    return environmentInfo;\n  }\n}\n\n                                                                                                                                                                                                                \n\nimport nodestacktrace = require('stack-trace');\n\nexport class NodeErrorParser implements IErrorParser {\n  public parse(context:EventPluginContext, exception:Error): IError {\n    function getStackFrames(context:EventPluginContext, stackFrames:any[]): IStackFrame[] {\n      var frames:IStackFrame[] = [];\n\n      for (var index = 0; index < stackFrames.length; index++) {\n        var frame = stackFrames[index];\n        frames.push({\n          name: frame.getMethodName() || frame.getFunctionName(),\n          //parameters: frame.args,\n          file_name: frame.getFileName(),\n          line_number: frame.getLineNumber(),\n          column: frame.getColumnNumber(),\n          declaring_type: frame.getTypeName(),\n          data: {\n            is_native: frame.isNative() || (!!frame.filename && frame.filename[0] !== '/' && frame.filename[0] !== '.')\n          }\n        });\n      }\n\n      return frames;\n    }\n\n    if (!nodestacktrace) {\n      throw new Error('Unable to load the stack trace library.');\n    }\n\n    var stackFrames = nodestacktrace.parse(exception) || [];\n    return {\n      type: exception.name,\n      message: exception.message,\n      stack_trace: getStackFrames(context, stackFrames)\n    };\n  }\n}\n\n                                                                                                                                                                                                                           \n\nexport class NodeRequestInfoCollector implements IRequestInfoCollector {\n  getRequestInfo(context:EventPluginContext):IRequestInfo {\n    const requestKey:string = '@request'; // optimization for minifier.\n    if (!context.contextData[requestKey]) {\n      return null;\n    }\n\n    var request = context.contextData[requestKey];\n    var requestInfo:IRequestInfo = {\n      client_ip_address: request.ip,\n      user_agent: request.headers['user-agent'],\n      is_secure: request.secure,\n      http_method: request.method,\n      host: request.hostname || request.host,\n      path: request.path,\n      post_data: request.body,\n      //referrer: TODO,\n      cookies: Utils.getCookies((request || {}).headers['cookie']),\n      query_string: request.params\n    };\n\n    var host = request.headers['host'];\n    var port:number = host && parseInt(host.slice(host.indexOf(':') + 1));\n    if (port > 0) {\n      requestInfo.port = port;\n    }\n\n    return requestInfo;\n  }\n}\n\nexport interface IClientConfiguration {\r\n  settings:Object;\r\n  version:number;\r\n}\r\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n\ndeclare var XDomainRequest:{ new (); create(); };\n\nexport class DefaultSubmissionClient implements ISubmissionClient {\n  public configurationVersionHeader:string = 'X-Exceptionless-ConfigVersion';\n\n  public postEvents(events:IEvent[], config:Configuration, callback:(response:SubmissionResponse) => void):void {\n    return this.sendRequest(config, 'POST', '/api/v2/events', Utils.stringify(events, config.dataExclusions), (status:number, message:string, data?:string, headers?:Object) => {\n      var settingsVersion:number = headers && parseInt(headers[this.configurationVersionHeader]);\n      SettingsManager.checkVersion(settingsVersion, config);\n\n      callback(new SubmissionResponse(status, message));\n    });\n  }\n\n  public postUserDescription(referenceId:string, description:IUserDescription, config:Configuration, callback:(response:SubmissionResponse) => void):void {\n    var path = `/api/v2/events/by-ref/${encodeURIComponent(referenceId)}/user-description`;\n    return this.sendRequest(config, 'POST', path, Utils.stringify(description, config.dataExclusions), (status:number, message:string, data?:string, headers?:Object) => {\n      var settingsVersion:number = headers && parseInt(headers[this.configurationVersionHeader]);\n      SettingsManager.checkVersion(settingsVersion, config);\n\n      callback(new SubmissionResponse(status, message));\n    });\n  }\n\n  public getSettings(config:Configuration, callback:(response:SettingsResponse) => void):void {\n    return this.sendRequest(config, 'GET', '/api/v2/projects/config', null, (status:number, message:string, data?:string) => {\n      if (status !== 200) {\n        return callback(new SettingsResponse(false, null, -1, null, message));\n      }\n\n      var settings:IClientConfiguration;\n      try {\n        settings = JSON.parse(data);\n      } catch (e) {\n        config.log.error(`Unable to parse settings: '${data}'`);\n      }\n\n      if (!settings || !settings.settings || !settings.version) {\n        return callback(new SettingsResponse(false, null, -1, null, 'Invalid configuration settings.'));\n      }\n\n      callback(new SettingsResponse(true, settings.settings, settings.version));\n    });\n  }\n\n  public sendRequest(config:Configuration, method:string, path:string, data:string, callback: (status:number, message:string, data?:string, headers?:Object) => void): void {\n    var isCompleted = false;\n    function complete(xhr:XMLHttpRequest) {\n      function parseResponseHeaders(headerStr) {\n        var headers = {};\n        var headerPairs = (headerStr || '').split('\\u000d\\u000a');\n        for (var index:number = 0; index < headerPairs.length; index++) {\n          var headerPair = headerPairs[index];\n          // Can't use split() here because it does the wrong thing\n          // if the header value has the string \": \" in it.\n          var separator = headerPair.indexOf('\\u003a\\u0020');\n          if (separator > 0) {\n            headers[headerPair.substring(0, separator)] = headerPair.substring(separator + 2);\n          }\n        }\n\n        return headers;\n      }\n\n      if (isCompleted) {\n        return;\n      } else {\n        isCompleted = true;\n      }\n\n      var message:string;\n      if (xhr.status === 0) {\n        message = 'Unable to connect to server.';\n      } else if (xhr.status < 200 || xhr.status > 299) {\n        if (!!xhr.responseBody && !!xhr.responseBody.message) {\n          message = xhr.responseBody.message;\n        } else if (!!xhr.responseText && xhr.responseText.indexOf('message') !== -1) {\n          try {\n            message =  JSON.parse(xhr.responseText).message;\n          } catch (e) {\n            message = xhr.responseText;\n          }\n        } else {\n          message = xhr.statusText;\n        }\n      }\n\n      callback(xhr.status || 500, message, xhr.responseText, parseResponseHeaders(xhr.getAllResponseHeaders()));\n    }\n\n    function createRequest(config:Configuration, method:string, url:string): XMLHttpRequest {\n      var xhr:any = new XMLHttpRequest();\n      if ('withCredentials' in xhr) {\n        xhr.open(method, url, true);\n      } else if (typeof XDomainRequest != 'undefined') {\n        xhr = new XDomainRequest();\n        xhr.open(method, url);\n      } else {\n        xhr = null;\n      }\n\n      if (xhr) {\n        xhr.setRequestHeader('X-Exceptionless-Client', config.userAgent);\n        if (method === 'POST' && xhr.setRequestHeader) {\n          xhr.setRequestHeader('Content-Type', 'application/json');\n        }\n\n        xhr.timeout = 10000;\n      }\n\n      return xhr;\n    }\n\n    var url = `${config.serverUrl}${path}?access_token=${encodeURIComponent(config.apiKey)}`;\n    var xhr = createRequest(config, method || 'POST', url);\n    if (!xhr) {\n      return callback(503,'CORS not supported.');\n    }\n\n    if ('withCredentials' in xhr) {\n      xhr.onreadystatechange = () => {\n        // xhr not ready.\n        if (xhr.readyState !== 4) {\n          return;\n        }\n\n        complete(xhr);\n      };\n    }\n\n    xhr.ontimeout = () => complete(xhr);\n    xhr.onerror = () => complete(xhr);\n    xhr.onload = () => complete(xhr);\n\n    xhr.send(data);\n  }\n}\n\n                                                                                                                                                                                                                                                                                                                                                                                                  \n\nimport http = require('http');\nimport https = require('https');\nimport url = require('url');\n\nexport class NodeSubmissionClient extends DefaultSubmissionClient {\n  constructor() {\n    super();\n    this.configurationVersionHeader = this.configurationVersionHeader.toLowerCase();\n  }\n\n  public sendRequest(config:Configuration, method:string, path:string, data:string, callback: (status:number, message:string, data?:string, headers?:Object) => void): void {\n    function complete(response:http.IncomingMessage, data:string, headers:Object) {\n      var message:string;\n      if (response.statusCode === 0) {\n        message = 'Unable to connect to server.';\n      } else if (response.statusCode < 200 || response.statusCode > 299) {\n        message = response.statusMessage || (<any>response).message;\n      }\n\n      callback(response.statusCode || 500, message, data, headers);\n    }\n\n    var parsedHost = url.parse(config.serverUrl);\n    var options:https.RequestOptions = {\n      auth: `client:${config.apiKey}`,\n      headers: {},\n      hostname: parsedHost.hostname,\n      method: method,\n      port: parsedHost.port && parseInt(parsedHost.port),\n      path: path,\n    };\n\n    if (method === 'POST') {\n      options.headers = {\n        'Content-Type': 'application/json',\n        'Content-Length': data.length\n      }\n    }\n\n    options.headers['User-Agent'] = config.userAgent;\n    var request:http.ClientRequest = (parsedHost.protocol === 'https' ? https : http).request(options, (response:http.IncomingMessage) => {\n      var body = '';\n      response.on('data', chunk => body += chunk);\n      response.on('end', () => {\n        complete(response, body, response.headers);\n      });\n    });\n\n    request.on('error', function(e) {\n      callback(500, e.message);\n    });\n\n    request.write(data);\n    request.end();\n  }\n}\n\nn\nexport class NodeBootstrapper implements IBootstrapper {\n  public register(): void {\n    const beforeExit:string = 'beforeExit';\n    const uncaughtException:string = 'uncaughtException';\n\n    if (!(typeof window === 'undefined' && typeof global !== 'undefined' && {}.toString.call(global) === '[object global]')) {\n      return;\n    }\n\n    var defaults = Configuration.defaults;\n    defaults.environmentInfoCollector = new NodeEnvironmentInfoCollector();\n    defaults.errorParser = new NodeErrorParser();\n    defaults.requestInfoCollector = new NodeRequestInfoCollector();\n    defaults.submissionClient = new NodeSubmissionClient();\n\n    process.on(uncaughtException, function (error:Error) {\n      ExceptionlessClient.default.submitUnhandledException(error, uncaughtException);\n    });\n\n    process.on(beforeExit, function (code:number) {\n      /**\n       * exit codes: https://nodejs.org/api/process.html#process_event_exit\n       */\n      function  getExitCodeReason(code:number): string {\n        if (code === 1) {\n          return 'Uncaught Fatal Exception';\n        }\n\n        if (code === 3) {\n          return 'Internal JavaScript Parse Error';\n        }\n\n        if (code === 4) {\n          return 'Internal JavaScript Evaluation Failure';\n        }\n\n        if (code === 5) {\n          return 'Fatal Exception';\n        }\n\n        if (code === 6) {\n          return 'Non-function Internal Exception Handler ';\n        }\n\n        if (code === 7) {\n          return 'Internal Exception Handler Run-Time Failure';\n        }\n\n        if (code === 8) {\n          return 'Uncaught Exception';\n        }\n\n        if (code === 9) {\n          return 'Invalid Argument';\n        }\n\n        if (code === 10) {\n          return 'Internal JavaScript Run-Time Failure';\n        }\n\n        if (code === 12) {\n          return 'Invalid Debug Argument';\n        }\n\n        if (code > 128) {\n          return 'Signal Exits';\n        }\n\n        return null;\n      }\n\n      var client = ExceptionlessClient.default;\n      var message = getExitCodeReason(code);\n      if (message !== null) {\n        client.submitLog(beforeExit, message, 'Error')\n      }\n\n      client.config.queue.process()\n    });\n  }\n}\n\n                                                                                                                                                                                                                                                                   \n\nexport class DefaultErrorParser implements IErrorParser {\n  public parse(context:EventPluginContext, exception:Error): IError {\n    function getParameters(parameters:string|string[]): IParameter[] {\n      var params:string[] = (typeof parameters === 'string' ? [parameters] : parameters) || [];\n\n      var result:IParameter[] = [];\n      for (var index = 0; index < params.length; index++) {\n        result.push({ name: params[index] })\n      }\n\n      return result;\n    }\n\n    function getStackFrames(context:EventPluginContext, stackFrames:TraceKit.StackFrame[]): IStackFrame[] {\n      var frames:IStackFrame[] = [];\n\n      for (var index = 0; index < stackFrames.length; index++) {\n        var frame = stackFrames[index];\n        frames.push({\n          name: frame.func,\n          parameters: getParameters(frame.args),\n          file_name: frame.url,\n          line_number: frame.line,\n          column: frame.column\n        });\n      }\n\n      return frames;\n    }\n\n    const traceKitStackTrace:string = '@@_TraceKit.StackTrace'; // optimization for minifier.\n\n    var stackTrace:TraceKit.StackTrace = !!context.contextData[traceKitStackTrace]\n      ? context.contextData[traceKitStackTrace]\n      : TraceKit.computeStackTrace(exception, 25);\n\n    if (!stackTrace) {\n      throw new Error('Unable to parse the exceptions stack trace.');\n    }\n\n    return {\n      type: stackTrace.name,\n      message: stackTrace.message || exception.message,\n      stack_trace: getStackFrames(context, stackTrace.stack || [])\n    };\n  }\n}\n\n                                                                                                                                                                                                       \n\nexport class DefaultModuleCollector implements IModuleCollector {\n  public getModules(context:EventPluginContext): IModule[] {\n    if (document && document.getElementsByTagName) {\n      return null;\n    }\n\n    var modules:IModule[] = [];\n    var scripts = document.getElementsByTagName('script');\n    if (scripts && scripts.length > 0) {\n      for (var index = 0; index < scripts.length; index++) {\n        if (scripts[index].src) {\n          modules.push({\n            module_id: index,\n            name: scripts[index].src,\n            version: Utils.parseVersion(scripts[index].src)\n          });\n        } else if (!!scripts[index].innerHTML) {\n          modules.push({\n            module_id: index,\n            name: 'Script Tag',\n            version: Utils.getHashCode(scripts[index].innerHTML)\n          });\n        }\n      }\n    }\n\n    return modules;\n  }\n}\n\n                                                                                                                                                                                                                           \n\nexport class DefaultRequestInfoCollector implements IRequestInfoCollector {\n  public getRequestInfo(context:EventPluginContext): IRequestInfo {\n    if (!document || !navigator || !location) {\n      return null;\n    }\n\n    var requestInfo:IRequestInfo = {\n      user_agent: navigator.userAgent,\n      is_secure: location.protocol === 'https:',\n      host: location.hostname,\n      port: location.port && location.port !== '' ? parseInt(location.port) : 80,\n      path: location.pathname,\n      //client_ip_address: 'TODO',\n      cookies: Utils.getCookies(document.cookie),\n      query_string: Utils.parseQueryString(location.search.substring(1))\n    };\n\n    if (document.referrer && document.referrer !== '') {\n      requestInfo.referrer = document.referrer;\n    }\n\n    return requestInfo;\n  }\n}\n\nn\nexport class DefaultBootstrapper implements IBootstrapper {\n  public register(): void {\n    function getDefaultsSettingsFromScriptTag(): IConfigurationSettings {\n      if (!document || !document.getElementsByTagName) {\n        return null;\n      }\n\n      var scripts = document.getElementsByTagName('script');\n      for (var index = 0; index < scripts.length; index++) {\n        if (scripts[index].src && scripts[index].src.indexOf('/exceptionless') > -1) {\n          return Utils.parseQueryString(scripts[index].src.split('?').pop());\n        }\n      }\n      return null;\n    }\n\n    function processUnhandledException(stackTrace:TraceKit.StackTrace, options?:any): void {\n      var builder = ExceptionlessClient.default.createUnhandledException(new Error(stackTrace.message || (options || {}).status || 'Script error'), 'onerror');\n      builder.pluginContextData['@@_TraceKit.StackTrace'] = stackTrace;\n      builder.submit();\n    }\n\n    function processJQueryAjaxError(event, xhr, settings, error:Error): void {\n      var client = ExceptionlessClient.default;\n      if (xhr.status === 404) {\n        client.submitNotFound(settings.url);\n      } else if (xhr.status !== 401) {\n        client.createUnhandledException(error, 'JQuery.ajaxError')\n          .setSource(settings.url)\n          .setProperty('status', xhr.status)\n          .setProperty('request', settings.data)\n          .setProperty('response', xhr.responseText && xhr.responseText.slice && xhr.responseText.slice(0, 1024))\n          .submit();\n      }\n    }\n\n    if (typeof window === 'undefined' || typeof document === 'undefined') {\n      return;\n    }\n\n    var defaults = Configuration.defaults;\n    var settings = getDefaultsSettingsFromScriptTag();\n    if (settings && (settings.apiKey || settings.serverUrl)) {\n      defaults.apiKey = settings.apiKey;\n      defaults.serverUrl = settings.serverUrl;\n    }\n\n    defaults.errorParser = new DefaultErrorParser();\n    defaults.moduleCollector = new DefaultModuleCollector();\n    defaults.requestInfoCollector = new DefaultRequestInfoCollector();\n    defaults.submissionClient = new DefaultSubmissionClient();\n\n    TraceKit.report.subscribe(processUnhandledException);\n    TraceKit.extendToAsynchronousCallbacks();\n\n    if (typeof $ !== 'undefined' && $(document)) {\n      $(document).ajaxError(processJQueryAjaxError);\n    }\n  }\n}\n\ndeclare var $;\n\nr\n\r\nnew NodeBootstrapper().register();\r\nnew DefaultBootstrapper().register();\r\n(<any>Error).stackTraceLimit = Infinity;\r\n\n",null],"sourceRoot":"/source/"}