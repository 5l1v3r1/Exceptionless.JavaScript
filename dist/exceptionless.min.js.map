{"version":3,"sources":["tracekit.js","/source/Exceptionless.ts","exceptionless.min.js"],"names":["window","undefined","_has","object","key","Object","prototype","hasOwnProperty","call","_isUndefined","what","TraceKit","_oldTraceKit","_slice","slice","UNKNOWN_FUNCTION","noConflict","wrap","func","wrapped","apply","this","arguments","e","report","subscribe","handler","installGlobalHandler","handlers","push","unsubscribe","i","length","splice","notifyHandlers","stack","windowError","exception","collectWindowErrors","concat","inner","traceKitWindowOnError","message","url","lineNo","columnNo","errorObj","computeStackTrace","lastExceptionStack","augmentStackTraceWithInitialElement","lastException","location","line","column","guessFunctionName","context","gatherContext","mode","document","href","useragent","navigator","userAgent","_oldOnerrorHandler","_onErrorHandlerInstalled","onerror","ex","args","s","setTimeout","incomplete","loadSource","remoteFetching","getXHR","XMLHttpRequest","ActiveXObject","request","open","send","responseText","getSource","sourceCache","source","indexOf","domain","split","m","reFunctionArgNames","reGuessFunction","maxLines","exec","linesBefore","Math","floor","linesOfContext","linesAfter","start","max","end","min","escapeRegExp","text","replace","escapeCodeAsRegExpForMatchingInsideHTML","body","findSourceInUrls","re","urls","j","join","substring","index","lastIndexOf","findSourceInLine","fragment","RegExp","findSourceByFunctionBody","parts","result","scripts","getElementsByTagName","code","codeRE","eventRE","script","src","name","event","computeStackTraceFromStackProp","element","chrome","gecko","winjs","lines","reference","columnNumber","computeStackTraceFromStacktraceProp","stacktrace","testRE","exc","computeStackTraceFromOperaMultiLineMessage","len","lineRE1","lineRE2","lineRE3","inlineScriptBlocks","item","relativeLine","pos","innerText","midline","stackInfo","initial","unshift","partial","computeStackTraceByWalkingCallerChain","depth","functionName","funcs","recursion","curr","caller","toString","input","description","sourceURL","fileName","lineNumber","debug","computeStackTraceOfCaller","Error","ofCaller","extendToAsynchronousCallbacks","_helper","fnName","originalFn","originalCallback","root","factory","define","amd","exports","module","require","Exceptionless","__extends","d","b","__","constructor","p","ContextData","setException","defineProperty","get","enumerable","configurable","getException","hasException","markAsUnhandledError","setSubmissionMethod","method","getSubmissionMethod","InMemoryLastReferenceIdManager","_lastReferenceId","getLast","clearLast","setLast","eventId","ConsoleLog","info","log","warn","error","level","console","NullLog","EventPluginContext","client","contextData","config","EventPluginManager","run","callback","plugin","next","plugins","priority","addDefaultPlugins","addPlugin","ConfigurationDefaultsPlugin","ErrorPlugin","DuplicateCheckerPlugin","ModuleInfoPlugin","RequestInfoPlugin","EnvironmentInfoPlugin","SubmissionMethodPlugin","ReferenceIdPlugin","reference_id","type","Utils","guid","DefaultEventQueue","_processingQueue","_config","enqueue","ensureQueueTimer","areQueuedItemsDiscarded","queuePath","Date","toJSON","randomNumber","storage","save","process","_this","enabled","apiKey","events","submissionBatchSize","serverUrl","submissionClient","submit","response","processSubmissionResponse","suspendProcessing","success","serviceUnavailable","requeueEvents","paymentRequired","unableToAuthenticate","notFound","badRequest","requestEntityTooLarge","round","_queueTimer","setInterval","onProcessQueue","isQueueProcessingSuspended","durationInMinutes","discardFutureQueuedItems","clearQueue","_suspendProcessingUntil","getTime","_discardQueuedItemsUntil","clear","Exception","InMemoryStorage","_items","path","value","searchPattern","limit","results","regex","test","count","getHashCode","hash","character","charCodeAt","getCookies","cookies","separator","cookie","s4","random","merge","defaultValues","values","parseVersion","versionRegex","matches","parseQueryString","query","pairs","pair","decodeURIComponent","stringify","data","cache","JSON","Configuration","settings","inject","fn","_enabled","_serverUrl","_plugins","lastReferenceIdManager","defaultTags","defaultData","defaults","environmentInfoCollector","errorParser","moduleCollector","requestInfoCollector","queue","_apiKey","set","sort","p1","p2","pluginOrName","pluginAction","pluginExists","removePlugin","setVersion","version","setUserIdentity","userInfoOrIdentity","userInfo","identity","shouldRemove","useReferenceIds","useDebugLogger","_defaultSettings","EventBuilder","pluginContextData","target","setType","setSource","setSessionId","sessionId","isValidIdentifier","session_id","setReferenceId","referenceId","setMessage","setGeo","latitude","longitude","geo","setProperty","setValue","addTags","tags","_i","markAsCritical","critical","addRequestInfo","submitEvent","isDigit","isLetter","isMinus","ExceptionlessClient","settingsOrApiKey","createException","createEvent","submitException","createUnhandledException","submissionMethod","builder","submitUnhandledException","createFeatureUsage","feature","submitFeatureUsage","createLog","sourceOrMessage","callee","submitLog","createNotFound","resource","submitNotFound","createSessionStart","submitSessionStart","createSessionEnd","submitSessionEnd","date","getLastReferenceId","_instance","tag","parser","parse","modules","getModules","ri","getRequestInfo","ei","getEnvironmentInfo","SettingsResponse","settingsVersion","SubmissionResponse","statusCode","os","NodeEnvironmentInfoCollector","environmentInfo","processor_count","cpus","total_physical_memory","totalmem","available_physical_memory","freemem","command_line","argv","process_name","title","process_id","pid","process_memory_size","memoryUsage","heapTotal","architecture","arch","o_s_name","o_s_version","release","ip_address","getIpAddresses","machine_name","hostname","runtime_version","loadavg","platform","tmpdir","uptime","endianness","ips","interfaces","networkInterfaces","keys","forEach","iface","family","internal","address","nodestacktrace","NodeErrorParser","stackFrames","stack_trace","getStackFrames","frames","frame","getMethodName","getFunctionName","file_name","getFileName","line_number","getLineNumber","getColumnNumber","declaring_type","getTypeName","is_native","isNative","filename","NodeRequestInfoCollector","client_ip_address","ip","user_agent","headers","is_secure","secure","http_method","host","post_data","query_string","params","SubmissionClientBase","sendRequest","status","submitDescription","encodeURIComponent","getSettings","https","NodeSubmissionClient","_super","complete","statusMessage","parsedHost","options","auth","port","parseInt","Content-Type","Content-Length","on","chunk","write","NodeBootstrapper","register","global","configDefaults","getExitCodeReason","WebErrorParser","stackTrace","parameters","getParameters","WebModuleCollector","module_id","innerHTML","WebRequestInfoCollector","requestInfo","protocol","pathname","search","referrer","DefaultSubmissionClient","createRequest","xhr","XDomainRequest","setRequestHeader","timeout","responseBody","statusText","onreadystatechange","readyState","ontimeout","onload","WindowBootstrapper","getDefaultsSettingsFromScriptTag","processUnhandledException","$","ajaxError","processJQueryAjaxError","pop","stackTraceLimit","Infinity"],"mappings":"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","file":"exceptionless.min.js","sourcesContent":["/*\n TraceKit - Cross brower stack traces - github.com/occ/TraceKit\n MIT license\n*/\n\n(function(window, undefined) {\n\n\nvar TraceKit = {};\nvar _oldTraceKit = window.TraceKit;\n\n// global reference to slice\nvar _slice = [].slice;\nvar UNKNOWN_FUNCTION = '?';\n\n\n/**\n * _has, a better form of hasOwnProperty\n * Example: _has(MainHostObject, property) === true/false\n *\n * @param {Object} host object to check property\n * @param {string} key to check\n */\nfunction _has(object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n}\n\nfunction _isUndefined(what) {\n    return typeof what === 'undefined';\n}\n\n/**\n * TraceKit.noConflict: Export TraceKit out to another variable\n * Example: var TK = TraceKit.noConflict()\n */\nTraceKit.noConflict = function noConflict() {\n    window.TraceKit = _oldTraceKit;\n    return TraceKit;\n};\n\n/**\n * TraceKit.wrap: Wrap any function in a TraceKit reporter\n * Example: func = TraceKit.wrap(func);\n *\n * @param {Function} func Function to be wrapped\n * @return {Function} The wrapped func\n */\nTraceKit.wrap = function traceKitWrapper(func) {\n    function wrapped() {\n        try {\n            return func.apply(this, arguments);\n        } catch (e) {\n            TraceKit.report(e);\n            throw e;\n        }\n    }\n    return wrapped;\n};\n\n/**\n * TraceKit.report: cross-browser processing of unhandled exceptions\n *\n * Syntax:\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\n *   TraceKit.report.unsubscribe(function(stackInfo) { ... })\n *   TraceKit.report(exception)\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\n *\n * Supports:\n *   - Firefox: full stack trace with line numbers, plus column number\n *              on top frame; column number is not guaranteed\n *   - Opera:   full stack trace with line and column numbers\n *   - Chrome:  full stack trace with line and column numbers\n *   - Safari:  line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *   - IE:      line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *\n * In theory, TraceKit should work on all of the following versions:\n *   - IE5.5+ (only 8.0 tested)\n *   - Firefox 0.9+ (only 3.5+ tested)\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\n *     Exceptions Have Stacktrace to be enabled in opera:config)\n *   - Safari 3+ (only 4+ tested)\n *   - Chrome 1+ (only 5+ tested)\n *   - Konqueror 3.5+ (untested)\n *\n * Requires TraceKit.computeStackTrace.\n *\n * Tries to catch all unhandled exceptions and report them to the\n * subscribed handlers. Please note that TraceKit.report will rethrow the\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\n * If the exception does not reach the top of the browser, you will only\n * get a stack trace from the point where TraceKit.report was called.\n *\n * Handlers receive a stackInfo object as described in the\n * TraceKit.computeStackTrace docs.\n */\nTraceKit.report = (function reportModuleWrapper() {\n    var handlers = [],\n        lastException = null,\n        lastExceptionStack = null;\n\n    /**\n     * Add a crash handler.\n     * @param {Function} handler\n     */\n    function subscribe(handler) {\n        installGlobalHandler();\n        handlers.push(handler);\n    }\n\n    /**\n     * Remove a crash handler.\n     * @param {Function} handler\n     */\n    function unsubscribe(handler) {\n        for (var i = handlers.length - 1; i >= 0; --i) {\n            if (handlers[i] === handler) {\n                handlers.splice(i, 1);\n            }\n        }\n    }\n\n    /**\n     * Dispatch stack information to all handlers.\n     * @param {Object.<string, *>} stack\n     */\n    function notifyHandlers(stack, windowError) {\n        var exception = null;\n        if (windowError && !TraceKit.collectWindowErrors) {\n          return;\n        }\n        for (var i in handlers) {\n            if (_has(handlers, i)) {\n                try {\n                    handlers[i].apply(null, [stack].concat(_slice.call(arguments, 2)));\n                } catch (inner) {\n                    exception = inner;\n                }\n            }\n        }\n\n        if (exception) {\n            throw exception;\n        }\n    }\n\n    var _oldOnerrorHandler, _onErrorHandlerInstalled;\n\n    /**\n     * Ensures all global unhandled exceptions are recorded.\n     * Supported by Gecko and IE.\n     * @param {string} message Error message.\n     * @param {string} url URL of script that generated the exception.\n     * @param {(number|string)} lineNo The line number at which the error\n     * occurred.\n     */\n    function traceKitWindowOnError(message, url, lineNo, columnNo, errorObj) {\n        var stack = null;\n\n        if (errorObj) {\n          stack = TraceKit.computeStackTrace(errorObj);\n        }\n        else\n        {\n            if (lastExceptionStack) {\n                TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);\n                stack = lastExceptionStack;\n                lastExceptionStack = null;\n                lastException = null;\n            } else {\n                var location = {\n                    'url': url,\n                    'line': lineNo,\n                    'column': columnNo\n                };\n                location.func = TraceKit.computeStackTrace.guessFunctionName(location.url, location.line);\n                location.context = TraceKit.computeStackTrace.gatherContext(location.url, location.line);\n                stack = {\n                    'mode': 'onerror',\n                    'message': message,\n                    'url': document.location.href,\n                    'stack': [location],\n                    'useragent': navigator.userAgent\n                };\n            }\n        }\n\n        notifyHandlers(stack, 'from window.onerror');\n\n        if (_oldOnerrorHandler) {\n            return _oldOnerrorHandler.apply(this, arguments);\n        }\n\n        return false;\n    }\n\n    function installGlobalHandler ()\n    {\n        if (_onErrorHandlerInstalled === true) {\n           return;\n        }\n        _oldOnerrorHandler = window.onerror;\n        window.onerror = traceKitWindowOnError;\n        _onErrorHandlerInstalled = true;\n    }\n\n    /**\n     * Reports an unhandled Error to TraceKit.\n     * @param {Error} ex\n     */\n    function report(ex) {\n        var args = _slice.call(arguments, 1);\n        if (lastExceptionStack) {\n            if (lastException === ex) {\n                return; // already caught by an inner catch block, ignore\n            } else {\n                var s = lastExceptionStack;\n                lastExceptionStack = null;\n                lastException = null;\n                notifyHandlers.apply(null, [s, null].concat(args));\n            }\n        }\n\n        var stack = TraceKit.computeStackTrace(ex);\n        lastExceptionStack = stack;\n        lastException = ex;\n\n        // If the stack trace is incomplete, wait for 2 seconds for\n        // slow slow IE to see if onerror occurs or not before reporting\n        // this exception; otherwise, we will end up with an incomplete\n        // stack trace\n        window.setTimeout(function () {\n            if (lastException === ex) {\n                lastExceptionStack = null;\n                lastException = null;\n                notifyHandlers.apply(null, [stack, null].concat(args));\n            }\n        }, (stack.incomplete ? 2000 : 0));\n\n        throw ex; // re-throw to propagate to the top level (and cause window.onerror)\n    }\n\n    report.subscribe = subscribe;\n    report.unsubscribe = unsubscribe;\n    return report;\n}());\n\n/**\n * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript\n *\n * Syntax:\n *   s = TraceKit.computeStackTrace.ofCaller([depth])\n *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)\n * Returns:\n *   s.name              - exception name\n *   s.message           - exception message\n *   s.stack[i].url      - JavaScript or HTML file URL\n *   s.stack[i].func     - function name, or empty for anonymous functions (if guessing did not work)\n *   s.stack[i].args     - arguments passed to the function, if known\n *   s.stack[i].line     - line number, if known\n *   s.stack[i].column   - column number, if known\n *   s.stack[i].context  - an array of source code lines; the middle element corresponds to the correct line#\n *   s.mode              - 'stack', 'stacktrace', 'multiline', 'callers', 'onerror', or 'failed' -- method used to collect the stack trace\n *\n * Supports:\n *   - Firefox:  full stack trace with line numbers and unreliable column\n *               number on top frame\n *   - Opera 10: full stack trace with line and column numbers\n *   - Opera 9-: full stack trace with line numbers\n *   - Chrome:   full stack trace with line and column numbers\n *   - Safari:   line and column number for the topmost stacktrace element\n *               only\n *   - IE:       no line numbers whatsoever\n *\n * Tries to guess names of anonymous functions by looking for assignments\n * in the source code. In IE and Safari, we have to guess source file names\n * by searching for function bodies inside all page scripts. This will not\n * work for scripts that are loaded cross-domain.\n * Here be dragons: some function names may be guessed incorrectly, and\n * duplicate functions may be mismatched.\n *\n * TraceKit.computeStackTrace should only be used for tracing purposes.\n * Logging of unhandled exceptions should be done with TraceKit.report,\n * which builds on top of TraceKit.computeStackTrace and provides better\n * IE support by utilizing the window.onerror event to retrieve information\n * about the top of the stack.\n *\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\n * so computeStackTrace instead walks its *own* chain of callers.\n * This means that:\n *  * in Safari, some methods may be missing from the stack trace;\n *  * in IE, the topmost function in the stack trace will always be the\n *    caller of computeStackTrace.\n *\n * This is okay for tracing (because you are likely to be calling\n * computeStackTrace from the function you want to be the topmost element\n * of the stack trace anyway), but not okay for logging unhandled\n * exceptions (because your catch block will likely be far away from the\n * inner function that actually caused the exception).\n *\n * Tracing example:\n *     function trace(message) {\n *         var stackInfo = TraceKit.computeStackTrace.ofCaller();\n *         var data = message + \"\\n\";\n *         for(var i in stackInfo.stack) {\n *             var item = stackInfo.stack[i];\n *             data += (item.func || '[anonymous]') + \"() in \" + item.url + \":\" + (item.line || '0') + \"\\n\";\n *         }\n *         if (window.console)\n *             console.info(data);\n *         else\n *             alert(data);\n *     }\n */\nTraceKit.computeStackTrace = (function computeStackTraceWrapper() {\n    var debug = false,\n        sourceCache = {};\n\n    /**\n     * Attempts to retrieve source code via XMLHttpRequest, which is used\n     * to look up anonymous function names.\n     * @param {string} url URL of source code.\n     * @return {string} Source contents.\n     */\n    function loadSource(url) {\n        if (typeof url !== 'string') {\n          return [];\n        }\n        \n        if (!TraceKit.remoteFetching) { //Only attempt request if remoteFetching is on.\n            return '';\n        }\n        try {\n            var getXHR = function() {\n                try {\n                    return new window.XMLHttpRequest();\n                } catch (e) {\n                    // explicitly bubble up the exception if not found\n                    return new window.ActiveXObject('Microsoft.XMLHTTP');\n                }\n            };\n\n            var request = getXHR();\n            request.open('GET', url, false);\n            request.send('');\n            return request.responseText;\n        } catch (e) {\n            return '';\n        }\n    }\n\n    /**\n     * Retrieves source code from the source code cache.\n     * @param {string} url URL of source code.\n     * @return {Array.<string>} Source contents.\n     */\n    function getSource(url) {\n        if (!_has(sourceCache, url)) {\n            // URL needs to be able to fetched within the acceptable domain.  Otherwise,\n            // cross-domain errors will be triggered.\n            var source = '';\n\n            url = url || \"\";\n\n            if (url.indexOf && url.indexOf(document.domain) !== -1) {\n                source = loadSource(url);\n            }\n            sourceCache[url] = source ? source.split('\\n') : [];\n        }\n\n        return sourceCache[url];\n    }\n\n    /**\n     * Tries to use an externally loaded copy of source code to determine\n     * the name of a function by looking at the name of the variable it was\n     * assigned to, if any.\n     * @param {string} url URL of source code.\n     * @param {(string|number)} lineNo Line number in source code.\n     * @return {string} The function name, if discoverable.\n     */\n    function guessFunctionName(url, lineNo) {\n        var reFunctionArgNames = /function ([^(]*)\\(([^)]*)\\)/,\n            reGuessFunction = /['\"]?([0-9A-Za-z$_]+)['\"]?\\s*[:=]\\s*(function|eval|new Function)/,\n            line = '',\n            maxLines = 10,\n            source = getSource(url),\n            m;\n\n        if (!source.length) {\n            return UNKNOWN_FUNCTION;\n        }\n\n        // Walk backwards from the first line in the function until we find the line which\n        // matches the pattern above, which is the function definition\n        for (var i = 0; i < maxLines; ++i) {\n            line = source[lineNo - i] + line;\n\n            if (!_isUndefined(line)) {\n                if ((m = reGuessFunction.exec(line))) {\n                    return m[1];\n                } else if ((m = reFunctionArgNames.exec(line))) {\n                    return m[1];\n                }\n            }\n        }\n\n        return UNKNOWN_FUNCTION;\n    }\n\n    /**\n     * Retrieves the surrounding lines from where an exception occurred.\n     * @param {string} url URL of source code.\n     * @param {(string|number)} line Line number in source code to centre\n     * around for context.\n     * @return {?Array.<string>} Lines of source code.\n     */\n    function gatherContext(url, line) {\n        var source = getSource(url);\n\n        if (!source.length) {\n            return null;\n        }\n\n        var context = [],\n            // linesBefore & linesAfter are inclusive with the offending line.\n            // if linesOfContext is even, there will be one extra line\n            //   *before* the offending line.\n            linesBefore = Math.floor(TraceKit.linesOfContext / 2),\n            // Add one extra line if linesOfContext is odd\n            linesAfter = linesBefore + (TraceKit.linesOfContext % 2),\n            start = Math.max(0, line - linesBefore - 1),\n            end = Math.min(source.length, line + linesAfter - 1);\n\n        line -= 1; // convert to 0-based index\n\n        for (var i = start; i < end; ++i) {\n            if (!_isUndefined(source[i])) {\n                context.push(source[i]);\n            }\n        }\n\n        return context.length > 0 ? context : null;\n    }\n\n    /**\n     * Escapes special characters, except for whitespace, in a string to be\n     * used inside a regular expression as a string literal.\n     * @param {string} text The string.\n     * @return {string} The escaped string literal.\n     */\n    function escapeRegExp(text) {\n        return text.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#]/g, '\\\\$&');\n    }\n\n    /**\n     * Escapes special characters in a string to be used inside a regular\n     * expression as a string literal. Also ensures that HTML entities will\n     * be matched the same as their literal friends.\n     * @param {string} body The string.\n     * @return {string} The escaped string.\n     */\n    function escapeCodeAsRegExpForMatchingInsideHTML(body) {\n        return escapeRegExp(body).replace('<', '(?:<|&lt;)').replace('>', '(?:>|&gt;)').replace('&', '(?:&|&amp;)').replace('\"', '(?:\"|&quot;)').replace(/\\s+/g, '\\\\s+');\n    }\n\n    /**\n     * Determines where a code fragment occurs in the source code.\n     * @param {RegExp} re The function definition.\n     * @param {Array.<string>} urls A list of URLs to search.\n     * @return {?Object.<string, (string|number)>} An object containing\n     * the url, line, and column number of the defined function.\n     */\n    function findSourceInUrls(re, urls) {\n        var source, m;\n        for (var i = 0, j = urls.length; i < j; ++i) {\n            // console.log('searching', urls[i]);\n            if ((source = getSource(urls[i])).length) {\n                source = source.join('\\n');\n                if ((m = re.exec(source))) {\n                    // console.log('Found function in ' + urls[i]);\n\n                    return {\n                        'url': urls[i],\n                        'line': source.substring(0, m.index).split('\\n').length,\n                        'column': m.index - source.lastIndexOf('\\n', m.index) - 1\n                    };\n                }\n            }\n        }\n\n        // console.log('no match');\n\n        return null;\n    }\n\n    /**\n     * Determines at which column a code fragment occurs on a line of the\n     * source code.\n     * @param {string} fragment The code fragment.\n     * @param {string} url The URL to search.\n     * @param {(string|number)} line The line number to examine.\n     * @return {?number} The column number.\n     */\n    function findSourceInLine(fragment, url, line) {\n        var source = getSource(url),\n            re = new RegExp('\\\\b' + escapeRegExp(fragment) + '\\\\b'),\n            m;\n\n        line -= 1;\n\n        if (source && source.length > line && (m = re.exec(source[line]))) {\n            return m.index;\n        }\n\n        return null;\n    }\n\n    /**\n     * Determines where a function was defined within the source code.\n     * @param {(Function|string)} func A function reference or serialized\n     * function definition.\n     * @return {?Object.<string, (string|number)>} An object containing\n     * the url, line, and column number of the defined function.\n     */\n    function findSourceByFunctionBody(func) {\n        var urls = [window.location.href],\n            scripts = document.getElementsByTagName('script'),\n            body,\n            code = '' + func,\n            codeRE = /^function(?:\\s+([\\w$]+))?\\s*\\(([\\w\\s,]*)\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/,\n            eventRE = /^function on([\\w$]+)\\s*\\(event\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/,\n            re,\n            parts,\n            result;\n\n        for (var i = 0; i < scripts.length; ++i) {\n            var script = scripts[i];\n            if (script.src) {\n                urls.push(script.src);\n            }\n        }\n\n        if (!(parts = codeRE.exec(code))) {\n            re = new RegExp(escapeRegExp(code).replace(/\\s+/g, '\\\\s+'));\n        }\n\n        // not sure if this is really necessary, but I don’t have a test\n        // corpus large enough to confirm that and it was in the original.\n        else {\n            var name = parts[1] ? '\\\\s+' + parts[1] : '',\n                args = parts[2].split(',').join('\\\\s*,\\\\s*');\n\n            body = escapeRegExp(parts[3]).replace(/;$/, ';?'); // semicolon is inserted if the function ends with a comment.replace(/\\s+/g, '\\\\s+');\n            re = new RegExp('function' + name + '\\\\s*\\\\(\\\\s*' + args + '\\\\s*\\\\)\\\\s*{\\\\s*' + body + '\\\\s*}');\n        }\n\n        // look for a normal function definition\n        if ((result = findSourceInUrls(re, urls))) {\n            return result;\n        }\n\n        // look for an old-school event handler function\n        if ((parts = eventRE.exec(code))) {\n            var event = parts[1];\n            body = escapeCodeAsRegExpForMatchingInsideHTML(parts[2]);\n\n            // look for a function defined in HTML as an onXXX handler\n            re = new RegExp('on' + event + '=[\\\\\\'\"]\\\\s*' + body + '\\\\s*[\\\\\\'\"]', 'i');\n\n            if ((result = findSourceInUrls(re, urls[0]))) {\n                return result;\n            }\n\n            // look for ???\n            re = new RegExp(body);\n\n            if ((result = findSourceInUrls(re, urls))) {\n                return result;\n            }\n        }\n\n        return null;\n    }\n\n    // Contents of Exception in various browsers.\n    //\n    // SAFARI:\n    // ex.message = Can't find variable: qq\n    // ex.line = 59\n    // ex.sourceId = 580238192\n    // ex.sourceURL = http://...\n    // ex.expressionBeginOffset = 96\n    // ex.expressionCaretOffset = 98\n    // ex.expressionEndOffset = 98\n    // ex.name = ReferenceError\n    //\n    // FIREFOX:\n    // ex.message = qq is not defined\n    // ex.fileName = http://...\n    // ex.lineNumber = 59\n    // ex.stack = ...stack trace... (see the example below)\n    // ex.name = ReferenceError\n    //\n    // CHROME:\n    // ex.message = qq is not defined\n    // ex.name = ReferenceError\n    // ex.type = not_defined\n    // ex.arguments = ['aa']\n    // ex.stack = ...stack trace...\n    //\n    // INTERNET EXPLORER:\n    // ex.message = ...\n    // ex.name = ReferenceError\n    //\n    // OPERA:\n    // ex.message = ...message... (see the example below)\n    // ex.name = ReferenceError\n    // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\n    // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\n\n    /**\n     * Computes stack trace information from the stack property.\n     * Chrome and Gecko use this property.\n     * Added WinJS regex for Raygun4JS's offline caching support\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceFromStackProp(ex) {\n        if (!ex.stack) {\n            return null;\n        }\n\n        var chrome = /^\\s*at (.*?) ?\\(?((?:file|http|https|chrome-extension):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n            gecko = /^\\s*(.*?)(?:\\((.*?)\\))?@?((?:file|http|https|chrome):.*?):(\\d+)(?::(\\d+))?\\s*$/i,\n            winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:ms-appx|http|https):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n            lines = ex.stack.split('\\n'),\n            stack = [],\n            parts,\n            element,\n            reference = /^(.*) is undefined$/.exec(ex.message);\n\n        for (var i = 0, j = lines.length; i < j; ++i) {\n            if ((parts = gecko.exec(lines[i]))) {\n                element = {\n                    'url': parts[3],\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'args': parts[2] ? parts[2].split(',') : '',\n                    'line': +parts[4],\n                    'column': parts[5] ? +parts[5] : null\n                };\n            } else if ((parts = chrome.exec(lines[i]))) {\n                element = {\n                    'url': parts[2],\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'line': +parts[3],\n                    'column': parts[4] ? +parts[4] : null\n                };\n            } else if ((parts = winjs.exec(lines[i]))) {\n              element = {\n                'url': parts[2],\n                'func': parts[1] || UNKNOWN_FUNCTION,\n                'line': +parts[3],\n                'column': parts[4] ? +parts[4] : null\n              };\n            } else {\n                continue;\n            }\n\n            if (!element.func && element.line) {\n                element.func = guessFunctionName(element.url, element.line);\n            }\n\n            if (element.line) {\n                element.context = gatherContext(element.url, element.line);\n            }\n\n            stack.push(element);\n        }\n\n        if (stack[0] && stack[0].line && !stack[0].column && reference) {\n            stack[0].column = findSourceInLine(reference[1], stack[0].url, stack[0].line);\n        } else if (!stack[0].column && typeof ex.columnNumber !== 'undefined') {\n            // Firefox column number\n            stack[0].column = ex.columnNumber + 1;\n        }\n\n        if (!stack.length) {\n            return null;\n        }\n\n        return {\n            'mode': 'stack',\n            'name': ex.name,\n            'message': ex.message,\n            'url': document.location.href,\n            'stack': stack,\n            'useragent': navigator.userAgent\n        };\n    }\n\n    /**\n     * Computes stack trace information from the stacktrace property.\n     * Opera 10 uses this property.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceFromStacktraceProp(ex) {\n        // Access and store the stacktrace property before doing ANYTHING\n        // else to it because Opera is not very good at providing it\n        // reliably in other circumstances.\n        var stacktrace = ex.stacktrace;\n\n        var testRE = / line (\\d+), column (\\d+) in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\) in (.*):\\s*$/i,\n            lines = stacktrace.split('\\n'),\n            stack = [],\n            parts;\n\n        for (var i = 0, j = lines.length; i < j; i += 2) {\n            if ((parts = testRE.exec(lines[i]))) {\n                var element = {\n                    'line': +parts[1],\n                    'column': +parts[2],\n                    'func': parts[3] || parts[4],\n                    'args': parts[5] ? parts[5].split(',') : [],\n                    'url': parts[6]\n                };\n\n                if (!element.func && element.line) {\n                    element.func = guessFunctionName(element.url, element.line);\n                }\n                if (element.line) {\n                    try {\n                        element.context = gatherContext(element.url, element.line);\n                    } catch (exc) {}\n                }\n\n                if (!element.context) {\n                    element.context = [lines[i + 1]];\n                }\n\n                stack.push(element);\n            }\n        }\n\n        if (!stack.length) {\n            return null;\n        }\n\n        return {\n            'mode': 'stacktrace',\n            'name': ex.name,\n            'message': ex.message,\n            'url': document.location.href,\n            'stack': stack,\n            'useragent': navigator.userAgent\n        };\n    }\n\n    /**\n     * NOT TESTED.\n     * Computes stack trace information from an error message that includes\n     * the stack trace.\n     * Opera 9 and earlier use this method if the option to show stack\n     * traces is turned on in opera:config.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack information.\n     */\n    function computeStackTraceFromOperaMultiLineMessage(ex) {\n        // Opera includes a stack trace into the exception message. An example is:\n        //\n        // Statement on line 3: Undefined variable: undefinedFunc\n        // Backtrace:\n        //   Line 3 of linked script file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.js: In function zzz\n        //         undefinedFunc(a);\n        //   Line 7 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function yyy\n        //           zzz(x, y, z);\n        //   Line 3 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function xxx\n        //           yyy(a, a, a);\n        //   Line 1 of function script\n        //     try { xxx('hi'); return false; } catch(ex) { TraceKit.report(ex); }\n        //   ...\n\n        var lines = ex.message.split('\\n');\n        if (lines.length < 4) {\n            return null;\n        }\n\n        var lineRE1 = /^\\s*Line (\\d+) of linked script ((?:file|http|https)\\S+)(?:: in function (\\S+))?\\s*$/i,\n            lineRE2 = /^\\s*Line (\\d+) of inline#(\\d+) script in ((?:file|http|https)\\S+)(?:: in function (\\S+))?\\s*$/i,\n            lineRE3 = /^\\s*Line (\\d+) of function script\\s*$/i,\n            stack = [],\n            scripts = document.getElementsByTagName('script'),\n            inlineScriptBlocks = [],\n            parts,\n            i,\n            len,\n            source;\n\n        for (i in scripts) {\n            if (_has(scripts, i) && !scripts[i].src) {\n                inlineScriptBlocks.push(scripts[i]);\n            }\n        }\n\n        for (i = 2, len = lines.length; i < len; i += 2) {\n            var item = null;\n            if ((parts = lineRE1.exec(lines[i]))) {\n                item = {\n                    'url': parts[2],\n                    'func': parts[3],\n                    'line': +parts[1]\n                };\n            } else if ((parts = lineRE2.exec(lines[i]))) {\n                item = {\n                    'url': parts[3],\n                    'func': parts[4]\n                };\n                var relativeLine = (+parts[1]); // relative to the start of the <SCRIPT> block\n                var script = inlineScriptBlocks[parts[2] - 1];\n                if (script) {\n                    source = getSource(item.url);\n                    if (source) {\n                        source = source.join('\\n');\n                        var pos = source.indexOf(script.innerText);\n                        if (pos >= 0) {\n                            item.line = relativeLine + source.substring(0, pos).split('\\n').length;\n                        }\n                    }\n                }\n            } else if ((parts = lineRE3.exec(lines[i]))) {\n                var url = window.location.href.replace(/#.*$/, ''),\n                    line = parts[1];\n                var re = new RegExp(escapeCodeAsRegExpForMatchingInsideHTML(lines[i + 1]));\n                source = findSourceInUrls(re, [url]);\n                item = {\n                    'url': url,\n                    'line': source ? source.line : line,\n                    'func': ''\n                };\n            }\n\n            if (item) {\n                if (!item.func) {\n                    item.func = guessFunctionName(item.url, item.line);\n                }\n                var context = gatherContext(item.url, item.line);\n                var midline = (context ? context[Math.floor(context.length / 2)] : null);\n                if (context && midline.replace(/^\\s*/, '') === lines[i + 1].replace(/^\\s*/, '')) {\n                    item.context = context;\n                } else {\n                    // if (context) alert(\"Context mismatch. Correct midline:\\n\" + lines[i+1] + \"\\n\\nMidline:\\n\" + midline + \"\\n\\nContext:\\n\" + context.join(\"\\n\") + \"\\n\\nURL:\\n\" + item.url);\n                    item.context = [lines[i + 1]];\n                }\n                stack.push(item);\n            }\n        }\n        if (!stack.length) {\n            return null; // could not parse multiline exception message as Opera stack trace\n        }\n\n        return {\n            'mode': 'multiline',\n            'name': ex.name,\n            'message': lines[0],\n            'url': document.location.href,\n            'stack': stack,\n            'useragent': navigator.userAgent\n        };\n    }\n\n    /**\n     * Adds information about the first frame to incomplete stack traces.\n     * Safari and IE require this to get complete data on the first frame.\n     * @param {Object.<string, *>} stackInfo Stack trace information from\n     * one of the compute* methods.\n     * @param {string} url The URL of the script that caused an error.\n     * @param {(number|string)} lineNo The line number of the script that\n     * caused an error.\n     * @param {string=} message The error generated by the browser, which\n     * hopefully contains the name of the object that caused the error.\n     * @return {boolean} Whether or not the stack information was\n     * augmented.\n     */\n    function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\n        var initial = {\n            'url': url,\n            'line': lineNo\n        };\n\n        if (initial.url && initial.line) {\n            stackInfo.incomplete = false;\n\n            if (!initial.func) {\n                initial.func = guessFunctionName(initial.url, initial.line);\n            }\n\n            if (!initial.context) {\n                initial.context = gatherContext(initial.url, initial.line);\n            }\n\n            var reference = / '([^']+)' /.exec(message);\n            if (reference) {\n                initial.column = findSourceInLine(reference[1], initial.url, initial.line);\n            }\n\n            if (stackInfo.stack.length > 0) {\n                if (stackInfo.stack[0].url === initial.url) {\n                    if (stackInfo.stack[0].line === initial.line) {\n                        return false; // already in stack trace\n                    } else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {\n                        stackInfo.stack[0].line = initial.line;\n                        stackInfo.stack[0].context = initial.context;\n                        return false;\n                    }\n                }\n            }\n\n            stackInfo.stack.unshift(initial);\n            stackInfo.partial = true;\n            return true;\n        } else {\n            stackInfo.incomplete = true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Computes stack trace information by walking the arguments.caller\n     * chain at the time the exception occurred. This will cause earlier\n     * frames to be missed but is the only way to get any stack trace in\n     * Safari and IE. The top frame is restored by\n     * {@link augmentStackTraceWithInitialElement}.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceByWalkingCallerChain(ex, depth) {\n        var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i,\n            stack = [],\n            funcs = {},\n            recursion = false,\n            parts,\n            item,\n            source;\n\n        for (var curr = computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\n            if (curr === computeStackTrace || curr === TraceKit.report) {\n                // console.log('skipping internal function');\n                continue;\n            }\n\n            item = {\n                'url': null,\n                'func': UNKNOWN_FUNCTION,\n                'line': null,\n                'column': null\n            };\n\n            if (curr.name) {\n                item.func = curr.name;\n            } else if ((parts = functionName.exec(curr.toString()))) {\n                item.func = parts[1];\n            }\n\n            if (typeof item.func === 'undefined') {\n              try {\n                item.func = parts.input.substring(0, parts.input.indexOf('{'))\n              } catch (e) { }\n            }\n\n            if ((source = findSourceByFunctionBody(curr))) {\n                item.url = source.url;\n                item.line = source.line;\n\n                if (item.func === UNKNOWN_FUNCTION) {\n                    item.func = guessFunctionName(item.url, item.line);\n                }\n\n                var reference = / '([^']+)' /.exec(ex.message || ex.description);\n                if (reference) {\n                    item.column = findSourceInLine(reference[1], source.url, source.line);\n                }\n            }\n\n            if (funcs['' + curr]) {\n                recursion = true;\n            }else{\n                funcs['' + curr] = true;\n            }\n\n            stack.push(item);\n        }\n\n        if (depth) {\n            // console.log('depth is ' + depth);\n            // console.log('stack is ' + stack.length);\n            stack.splice(0, depth);\n        }\n\n        var result = {\n            'mode': 'callers',\n            'name': ex.name,\n            'message': ex.message,\n            'url': document.location.href,\n            'stack': stack,\n            'useragent': navigator.userAgent\n        };\n        augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description);\n        return result;\n    }\n\n    /**\n     * Computes a stack trace for an exception.\n     * @param {Error} ex\n     * @param {(string|number)=} depth\n     */\n    function computeStackTrace(ex, depth) {\n        var stack = null;\n        depth = (depth == null ? 0 : +depth);\n\n        try {\n            // This must be tried first because Opera 10 *destroys*\n            // its stacktrace property if you try to access the stack\n            // property first!!\n            stack = computeStackTraceFromStacktraceProp(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceFromStackProp(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceFromOperaMultiLineMessage(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        return {\n            'mode': 'failed'\n        };\n    }\n\n    /**\n     * Logs a stacktrace starting from the previous call and working down.\n     * @param {(number|string)=} depth How many frames deep to trace.\n     * @return {Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceOfCaller(depth) {\n        depth = (depth == null ? 0 : +depth) + 1; // \"+ 1\" because \"ofCaller\" should drop one frame\n        try {\n            throw new Error();\n        } catch (ex) {\n            return computeStackTrace(ex, depth + 1);\n        }\n    }\n\n    computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;\n    computeStackTrace.guessFunctionName = guessFunctionName;\n    computeStackTrace.gatherContext = gatherContext;\n    computeStackTrace.ofCaller = computeStackTraceOfCaller;\n\n    return computeStackTrace;\n}());\n\n/**\n * Extends support for global error handling for asynchronous browser\n * functions. Adopted from Closure Library's errorhandler.js\n */\nTraceKit.extendToAsynchronousCallbacks = function () {\n    var _helper = function _helper(fnName) {\n        var originalFn = window[fnName];\n        window[fnName] = function traceKitAsyncExtension() {\n            // Make a copy of the arguments\n            var args = _slice.call(arguments);\n            var originalCallback = args[0];\n            if (typeof (originalCallback) === 'function') {\n                args[0] = TraceKit.wrap(originalCallback);\n            }\n            // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\n            // also only supports 2 argument and doesn't care what \"this\" is, so we\n            // can just call the original function directly.\n            if (originalFn.apply) {\n                return originalFn.apply(this, args);\n            } else {\n                return originalFn(args[0], args[1]);\n            }\n        };\n    };\n\n    _helper('setTimeout');\n    _helper('setInterval');\n};\n\n//Default options:\nif (!TraceKit.remoteFetching) {\n  TraceKit.remoteFetching = true;\n}\nif (!TraceKit.collectWindowErrors) {\n  TraceKit.collectWindowErrors = true;\n}\nif (!TraceKit.linesOfContext || TraceKit.linesOfContext < 1) {\n  // 5 lines before, the offending line, 5 lines after\n  TraceKit.linesOfContext = 11;\n}\n\n\n\n// Export to global object\nwindow.TraceKit = TraceKit;\n\n}(window));\n","export interface IBootstrapper {\n  register():void;\n}\n\nexport interface ILastReferenceIdManager {\r\n  getLast(): string;\r\n  clearLast(): void;\r\n  setLast(eventId:string): void;\r\n}\r\n\nexport interface ILog {\n  info(message:string):void;\n  warn(message:string):void;\n  error(message:string):void;\n}\n\nexport interface IEvent {\r\n  type?:string;\r\n  source?:string;\r\n  date?:Date;\r\n  tags?:string[];\r\n  message?:string;\r\n  geo?:string;\r\n  value?:number;\r\n  data?:any;\r\n  reference_id?:string;\r\n  session_id?:string;\r\n}\r\n\n                                          \n\nexport interface IEventQueue {\n  enqueue(event:IEvent):void;\n  process():void;\n  suspendProcessing(durationInMinutes?:number, discardFutureQueuedItems?:boolean, clearQueue?:boolean):void;\n}\n\nexport interface IEnvironmentInfo {\n  processor_count?:number;\n  total_physical_memory?:number;\n  available_physical_memory?:number;\n  command_line?:string;\n  process_name?:string;\n  process_id?:string;\n  process_memory_size?:number;\n  thread_id?:string;\n  architecture?:string;\n  o_s_name?:string;\n  o_s_version?:string;\n  ip_address?:string;\n  machine_name?:string;\n  install_id?:string;\n  runtime_version?:string;\n  data?:any;\n}\n\nexport class ContextData {\n  public setException(exception:Error): void {\n    if (exception) {\n      this['@@_Exception'] = exception;\n    }\n  }\n\n  public get hasException(): boolean {\n    return !!this['@@_Exception']\n  }\n\n  public getException(): Error {\n    return this.hasException ? this['@@_Exception'] : null;\n  }\n\n  public markAsUnhandledError(): void {\n    this['@@_IsUnhandledError'] = true;\n  }\n\n  public get isUnhandledError(): boolean {\n    return !!this['@@_IsUnhandledError'];\n  }\n\n  public setSubmissionMethod(method:string): void {\n    if (method && method.length > 0) {\n      this['@@_SubmissionMethod'] = method;\n    }\n  }\n\n  public getSubmissionMethod(): string {\n    return !!this['@@_SubmissionMethod'] ? this['@@_SubmissionMethod'] : null;\n  }\n}\n\n                                                                                                                                   \r\n\r\nexport interface IEnvironmentInfoCollector {\r\n  getEnvironmentInfo(context:EventPluginContext):IEnvironmentInfo;\r\n}\r\n\n                                                                                                              \n\nexport interface IErrorParser {\n  parse(context:EventPluginContext, exception:Error): void;\n}\n\n                                                                                                                \n\nexport interface IModuleCollector {\n  getModules(context:EventPluginContext):IModule[];\n}\n\n                                                                                                                           \r\n\r\nexport interface IRequestInfoCollector {\r\n  getRequestInfo(context:EventPluginContext):IRequestInfo;\r\n}\r\n\nexport interface IStorage<T>{\n  save<T>(path:string, value:T):boolean;\n  get(searchPattern?:string, limit?:number):T[];\n  clear(searchPattern?:string):void;\n  count(searchPattern?:string):number;\n}\n\n                                                                                                                                                                                                                                                                                           \n\nexport interface ISubmissionClient {\n  submit(events:IEvent[], config:Configuration, callback:(SubmissionResponse) => void):void;\n  submitDescription(referenceId:string, description:IUserDescription, config:Configuration, callback:(SubmissionResponse) => void):void;\n  getSettings(config:Configuration, callback:(SettingsResponse) => void):void;\n}\n\nn\nexport interface IConfigurationSettings {\n  apiKey?:string;\n  serverUrl?:string;\n  environmentInfoCollector?:IEnvironmentInfoCollector;\n  errorParser?:IErrorParser;\n  lastReferenceIdManager?:ILastReferenceIdManager;\n  log?:ILog;\n  moduleCollector?:IModuleCollector;\n  requestInfoCollector?:IRequestInfoCollector;\n  submissionBatchSize?:number;\n  submissionClient?:ISubmissionClient;\n  storage?:IStorage<any>;\n  queue?:IEventQueue;\n}\n\n                                                                    \r\n\r\nexport class InMemoryLastReferenceIdManager implements ILastReferenceIdManager {\r\n  private _lastReferenceId:string = null;\r\n\r\n  getLast(): string {\r\n    return this._lastReferenceId;\r\n  }\r\n\r\n  clearLast():void {\r\n    this._lastReferenceId = null;\r\n  }\r\n\r\n  setLast(eventId:string):void {\r\n    this._lastReferenceId = eventId;\r\n  }\r\n}\r\n\n                              \n\nexport class ConsoleLog implements ILog {\n  public info(message):void {\n    this.log('info', message);\n  }\n\n  public warn(message):void {\n    this.log('warn', message);\n  }\n\n  public error(message):void {\n    this.log('error', message);\n  }\n\n  private log(level:string, message:string) {\n    if (console && console[level]) {\n      console[level](`[${level}] Exceptionless: ${message}`);\n    }\n  }\n}\n\n                              \n\nexport class NullLog implements ILog {\n  public info(message):void {}\n  public warn(message):void {}\n  public error(message):void {}\n}\n\nexport interface IUserInfo {\n  identity?:string;\n  name?:string;\n  data?:any;\n}\n\n                                                                                                         \n\nexport interface IEventPlugin {\n  priority?:number;\n  name?:string;\n  run(context:EventPluginContext, next?:() => void): void;\n}\n\n                                                                                                                                                                                                                                            \n\nexport class EventPluginContext {\n  public client:ExceptionlessClient;\n  public event:IEvent;\n  public contextData:ContextData;\n\n  constructor(client:ExceptionlessClient, event:IEvent, contextData?:ContextData) {\n    this.client = client;\n    this.event = event;\n    this.contextData = contextData ? contextData : new ContextData();\n  }\n\n  public get log(): ILog {\n    return this.client.config.log;\n  }\n}\n\nn\nexport class EventPluginManager {\n  public static run(context:EventPluginContext, callback:() => void): void {\n    var wrap = function (plugin:IEventPlugin, next?:() => void): () => void {\n      return function () {\n        try {\n          plugin.run(context, next);\n        } catch (ex) {\n          context.log.error(`Error while running plugin '${plugin.name}': ${ex.message}. This event will be discarded.`);\n        }\n      };\n    };\n\n    var plugins:any[] = context.client.config.plugins.concat({ name: 'callback', priority: 9007199254740992, run: callback });\n    for (var index = plugins.length - 1; index > -1; index--) {\n      plugins[index] = wrap(plugins[index], index < plugins.length - 1 ? plugins[index + 1] : null);\n    }\n\n    plugins[0]();\n  }\n\n  public static addDefaultPlugins(config:Configuration): void {\n    config.addPlugin(new ConfigurationDefaultsPlugin());\n    config.addPlugin(new ErrorPlugin());\n    config.addPlugin(new DuplicateCheckerPlugin());\n    config.addPlugin(new ModuleInfoPlugin());\n    config.addPlugin(new RequestInfoPlugin());\n    config.addPlugin(new EnvironmentInfoPlugin());\n    config.addPlugin(new SubmissionMethodPlugin());\n  }\n}\n\n                                                                                                                                                \n\nexport class ReferenceIdPlugin implements IEventPlugin {\n  public priority:number = 20;\n  public name:string = 'ReferenceIdPlugin';\n\n  public run(context:EventPluginContext, next?:() => void): void {\n    if ((!context.event.reference_id || context.event.reference_id.length === 0) && context.event.type === 'error') {\n      context.event.reference_id = Utils.guid().replace('-', '').substring(0, 10);\n    }\n\n    if (next) {\n      next();\n    }\n  }\n}\n\n                                                                                                                                                                                                                                                                       \n\nexport class DefaultEventQueue implements IEventQueue {\n  private _config:Configuration;\n  private _suspendProcessingUntil:Date;\n  private _discardQueuedItemsUntil:Date;\n  private _processingQueue:boolean = false;\n  private _queueTimer:any;\n\n  constructor(config:Configuration) {\n    this._config = config;\n  }\n\n  public enqueue(event:IEvent): void {\n    this.ensureQueueTimer();\n\n    if (this.areQueuedItemsDiscarded()) {\n      this._config.log.info('Queue items are currently being discarded. The event will not be queued.');\n      return;\n    }\n\n    var key = `${this.queuePath()}-${new Date().toJSON()}-${Utils.randomNumber()}`;\n    this._config.log.info(`Enqueuing event: ${key} type=${event.type} ${!!event.reference_id ? 'refid=' + event.reference_id : ''}`);\n    this._config.storage.save(key, event);\n  }\n\n  public process(): void {\n    this.ensureQueueTimer();\n\n    if (this._processingQueue) {\n      return;\n    }\n\n    this._config.log.info('Processing queue...');\n    if (!this._config.enabled) {\n      this._config.log.info('Configuration is disabled. The queue will not be processed.');\n      return;\n    }\n\n    if (!this._config.apiKey || this._config.apiKey.length < 10) {\n      this._config.log.info('ApiKey is not set. The queue will not be processed.');\n      return;\n    }\n\n    this._processingQueue = true;\n\n    try {\n      var events = this._config.storage.get(this.queuePath(), this._config.submissionBatchSize);\n      if (!events || events.length == 0) {\n        this._config.log.info('There are currently no queued events to process.');\n        this._processingQueue = false;\n        return;\n      }\n\n      this._config.log.info(`Sending ${events.length} events to ${this._config.serverUrl}.`);\n      this._config.submissionClient.submit(events, this._config, (response:SubmissionResponse) => {\n        this.processSubmissionResponse(response, events);\n        this._config.log.info('Finished processing queue.');\n        this._processingQueue = false;\n      });\n    } catch (ex) {\n      this._config.log.error(`An error occurred while processing the queue: ${ex}`);\n      this.suspendProcessing();\n      this._processingQueue = false;\n    }\n  }\n\n  private processSubmissionResponse(response:SubmissionResponse, events:IEvent[]): void {\n    if (response.success) {\n      this._config.log.info(`Sent ${events.length} events to ${this._config.serverUrl}.`);\n      return;\n    }\n\n    if (response.serviceUnavailable) {\n      // You are currently over your rate limit or the servers are under stress.\n      this._config.log.error('Server returned service unavailable.');\n      this.suspendProcessing();\n      this.requeueEvents(events);\n      return;\n    }\n\n    if (response.paymentRequired) {\n      // If the organization over the rate limit then discard the event.\n      this._config.log.info('Too many events have been submitted, please upgrade your plan.');\n      this.suspendProcessing(null, true, true);\n      return;\n    }\n\n    if (response.unableToAuthenticate) {\n      // The api key was suspended or could not be authorized.\n      this._config.log.info('Unable to authenticate, please check your configuration. The event will not be submitted.');\n      this.suspendProcessing(15);\n      return;\n    }\n\n    if (response.notFound || response.badRequest) {\n      // The service end point could not be found.\n      this._config.log.error(`Error while trying to submit data: ${response.message}`);\n      this.suspendProcessing(60 * 4);\n      return;\n    }\n\n    if (response.requestEntityTooLarge) {\n      if (this._config.submissionBatchSize > 1) {\n        this._config.log.error('Event submission discarded for being too large. The event will be retried with a smaller events size.');\n        this._config.submissionBatchSize = Math.max(1, Math.round(this._config.submissionBatchSize / 1.5));\n        this.requeueEvents(events);\n      } else {\n        this._config.log.error('Event submission discarded for being too large. The event will not be submitted.');\n      }\n\n      return;\n    }\n\n    if (!response.success) {\n      this._config.log.error(`An error occurred while submitting events: ${ response.message}`);\n      this.suspendProcessing();\n      this.requeueEvents(events);\n    }\n  }\n\n  private ensureQueueTimer(): void {\n    if (!this._queueTimer) {\n      this._queueTimer = setInterval(() => this.onProcessQueue(), 10000);\n    }\n  }\n\n  private onProcessQueue(): void {\n    if (!this.isQueueProcessingSuspended() && !this._processingQueue) {\n      this.process();\n    }\n  }\n\n  public suspendProcessing(durationInMinutes?:number, discardFutureQueuedItems?:boolean, clearQueue?:boolean): void {\n    if (!durationInMinutes || durationInMinutes <= 0) {\n      durationInMinutes = 5;\n    }\n\n    this._config.log.info(`Suspending processing for ${durationInMinutes} minutes.`);\n    this._suspendProcessingUntil = new Date(new Date().getTime() + (durationInMinutes * 60000));\n\n    if (discardFutureQueuedItems) {\n      this._discardQueuedItemsUntil = new Date(new Date().getTime() + (durationInMinutes * 60000));\n    }\n\n    if (!clearQueue) {\n      return;\n    }\n\n    // Account is over the limit and we want to ensure that the sample size being sent in will contain newer errors.\n    try {\n      this._config.storage.clear(this.queuePath());\n    } catch (Exception) { }\n  }\n\n  private requeueEvents(events:IEvent[]): void {\n    this._config.log.info(`Requeuing ${events.length} events.`);\n\n    for (var index = 0; index < events.length; index++) {\n      this.enqueue(events[index]);\n    }\n  }\n\n  private isQueueProcessingSuspended(): boolean {\n    return this._suspendProcessingUntil && this._suspendProcessingUntil > new Date();\n  }\n\n  private areQueuedItemsDiscarded(): boolean {\n    return this._discardQueuedItemsUntil && this._discardQueuedItemsUntil > new Date();\n  }\n\n  private queuePath(): string {\n    return 'ex-q';\n  }\n}\n\n                                      \n\nexport class InMemoryStorage<T> implements IStorage<T> {\n  private _items = {};\n\n  public save<T>(path:string, value:T):boolean {\n    this._items[path] = value;\n    return true;\n  }\n\n  public get(searchPattern?:string, limit?:number):T[] {\n    var results = [];\n    var regex = new RegExp(searchPattern || '.*');\n\n    for (var key in this._items) {\n      if (results.length >= limit) {\n        break;\n      }\n\n      if (regex.test(key)) {\n        results.push(this._items[key]);\n        delete this._items[key];\n      }\n    }\n\n    return results;\n  }\n\n  public clear(searchPattern?:string):void {\n    if (!searchPattern) {\n      this._items = {};\n      return;\n    }\n\n    var regex = new RegExp(searchPattern);\n    for (var key in this._items) {\n      if (regex.test(key)) {\n        delete this._items[key];\n      }\n    }\n  }\n\n  public count(searchPattern?:string):number {\n    var regex = new RegExp(searchPattern || '.*');\n    var results = [];\n    for (var key in this._items) {\n      if (regex.test(key)) {\n        results.push(key);\n      }\n    }\n\n    return results.length;\n  }\n}\n\nexport class Utils {\n  public static getHashCode(source:string): string {\n    if (!source || source.length === 0) {\n      return null;\n    }\n\n    var hash:number = 0;\n    for (var index = 0; index < source.length; index++) {\n      var character   = source.charCodeAt(index);\n      hash  = ((hash << 5) - hash) + character;\n      hash |= 0;\n    }\n\n    return hash.toString();\n  }\n\n  public static getCookies(cookies:string, separator:string): Object {\n    var result = {};\n\n    var parts = (cookies || '').split(separator || ', ');\n    for (var index = 0; index < parts.length; index++) {\n      var cookie = parts[index].split('=');\n      result[cookie[0]] = cookie[1];\n    }\n\n    return result;\n  }\n\n  public static guid(): string {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    }\n\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  }\n\n  public static merge(defaultValues:any, values:any) {\n    var result = {};\n\n    for (var key in defaultValues || {}) {\n      if (!!defaultValues[key]) {\n        result[key] = defaultValues[key];\n      }\n    }\n\n    for (var key in values || {}) {\n      if (!!values[key]) {\n        result[key] = values[key];\n      }\n    }\n\n    return result;\n  }\n\n  public static parseVersion(source:string): string {\n    if (!source) {\n      return null;\n    }\n\n    var versionRegex = /(v?((\\d+)\\.(\\d+)(\\.(\\d+))?)(?:-([\\dA-Za-z\\-]+(?:\\.[\\dA-Za-z\\-]+)*))?(?:\\+([\\dA-Za-z\\-]+(?:\\.[\\dA-Za-z\\-]+)*))?)/;\n    var matches = versionRegex.exec(source);\n    if (matches && matches.length > 0) {\n      return matches[0];\n    }\n\n    return null;\n  }\n\n  public static parseQueryString(query:string) {\n    if (!query || query.length === 0) {\n      return null;\n    }\n\n    var pairs = query.split('&');\n    if (pairs.length === 0) {\n      return null;\n    }\n\n    var result = {};\n    for (var index = 0; index < pairs.length; index++) {\n      var pair = pairs[index].split('=');\n      result[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n\n    return result;\n  }\n\n  public static randomNumber(): number {\n    return Math.floor(Math.random() * 9007199254740992);\n  }\n\n  public static stringify(data:any): string {\n    var cache = [];\n\n    return JSON.stringify(data, function(key, value) {\n      if (typeof value === 'object' && value !== null) {\n        if (cache.indexOf(value) !== -1) {\n          // Circular reference found, discard key\n          return;\n        }\n\n        cache.push(value);\n      }\n\n      return value;\n    });\n  }\n}\n\nn\nexport class Configuration implements IConfigurationSettings {\n  private _apiKey:string;\n  private _enabled:boolean = true;\n  private _serverUrl:string = 'https://collector.exceptionless.io';\n  private _plugins:IEventPlugin[] = [];\n\n  public environmentInfoCollector:IEnvironmentInfoCollector;\n  public errorParser:IErrorParser;\n  public lastReferenceIdManager:ILastReferenceIdManager = new InMemoryLastReferenceIdManager();\n  public log:ILog;\n  public moduleCollector:IModuleCollector;\n  public requestInfoCollector:IRequestInfoCollector;\n  public submissionBatchSize;\n  public submissionClient:ISubmissionClient;\n  public storage:IStorage<any>;\n  public queue:IEventQueue;\n  public defaultTags:string[] = [];\n  public defaultData:Object = {};\n\n  constructor(settings?:IConfigurationSettings) {\n    function inject(fn:any) {\n      return typeof fn === 'function' ? fn(this) : fn;\n    }\n\n    settings = Utils.merge(Configuration.defaults, settings);\n\n    this.log = inject(settings.log) || new NullLog();\n    this.apiKey = settings.apiKey;\n    this.serverUrl = settings.serverUrl;\n\n    this.environmentInfoCollector = inject(settings.environmentInfoCollector);\n    this.errorParser = inject(settings.errorParser);\n    this.lastReferenceIdManager = inject(settings.lastReferenceIdManager) || new InMemoryLastReferenceIdManager();\n    this.moduleCollector = inject(settings.moduleCollector);\n    this.requestInfoCollector = inject(settings.requestInfoCollector);\n    this.submissionBatchSize = inject(settings.submissionBatchSize) || 50;\n    this.submissionClient = inject(settings.submissionClient);\n    this.storage = inject(settings.storage) || new InMemoryStorage<any>();\n    this.queue = inject(settings.queue) || new DefaultEventQueue(this);\n\n    EventPluginManager.addDefaultPlugins(this);\n  }\n\n  public get apiKey(): string {\n    return this._apiKey;\n  }\n\n  public set apiKey(value:string) {\n    this._apiKey = value || null;\n    this.log.info(`apiKey set to: ${this._apiKey}`);\n  }\n\n  public get serverUrl(): string {\n    return this._serverUrl;\n  }\n\n  public set serverUrl(value:string) {\n    if (!!value && value.length > 0) {\n      this._serverUrl = value;\n      this.log.info(`serverUrl set to: ${this._serverUrl}`);\n    }\n  }\n\n  public get enabled(): boolean {\n    return this._enabled;\n  }\n\n  public get plugins(): IEventPlugin[] {\n    return this._plugins.sort((p1:IEventPlugin, p2:IEventPlugin) => {\n      return (p1.priority < p2.priority) ? -1 : (p1.priority > p2.priority) ? 1 : 0;\n    });\n  }\n\n  public addPlugin(plugin:IEventPlugin): void;\n  public addPlugin(name:string, priority:number, pluginAction:(context:EventPluginContext) => void): void;\n  public addPlugin(pluginOrName:IEventPlugin|string, priority?:number, pluginAction?:(context:EventPluginContext) => void): void {\n    var plugin:IEventPlugin = !!pluginAction ? { name: <string>pluginOrName, priority: priority, run: pluginAction } : <IEventPlugin>pluginOrName;\n    if (!plugin || !plugin.run) {\n      this.log.error('Unable to add plugin: No run method was found.');\n      return;\n    }\n\n    if (!plugin.name) {\n      plugin.name = Utils.guid();\n    }\n\n    if (!plugin.priority) {\n      plugin.priority = 0;\n    }\n\n    var pluginExists:boolean = false;\n    for (var index = 0; index < this._plugins.length; index++) {\n      if (this._plugins[index].name === plugin.name) {\n        pluginExists = true;\n        break;\n      }\n    }\n\n    if (!pluginExists) {\n      this._plugins.push(plugin);\n    }\n  }\n\n  public removePlugin(plugin:IEventPlugin): void;\n  public removePlugin(name:string): void;\n  public removePlugin(pluginOrName:IEventPlugin|string): void {\n    var name:string = typeof pluginOrName === 'string' ? pluginOrName : pluginOrName.name;\n    if (!name) {\n      this.log.error('Unable to remove plugin: No plugin name was specified.');\n      return;\n    }\n\n    for (var index = 0; index < this._plugins.length; index++) {\n      if (this._plugins[index].name === name) {\n        this._plugins.splice(index, 1);\n        break;\n      }\n    }\n  }\n\n  public setVersion(version:string): void {\n    if (!!version && version.length > 0) {\n      this.defaultData['@version'] = version;\n    }\n  }\n\n  public setUserIdentity(userInfo:IUserInfo): void;\n  public setUserIdentity(identity:string): void;\n  public setUserIdentity(identity:string, name:string): void;\n  public setUserIdentity(userInfoOrIdentity:IUserInfo|string, name?:string): void {\n    var userInfo:IUserInfo = typeof userInfoOrIdentity !== 'string' ? userInfoOrIdentity : { identity: userInfoOrIdentity, name: name };\n    var shouldRemove:boolean = !userInfo || (!userInfo.identity && !userInfo.name);\n    if (shouldRemove) {\n      delete this.defaultData['@user'];\n    } else {\n      this.defaultData['@user'] = userInfo;\n    }\n\n    this.log.info(`user identity set to: ${shouldRemove ? 'null' : userInfo.identity}`);\n  }\n\n  public useReferenceIds(): void {\n    this.addPlugin(new ReferenceIdPlugin());\n  }\n\n  // TODO: Support a min log level.\n  public useDebugLogger(): void {\n    this.log = new ConsoleLog();\n  }\n\n  private static _defaultSettings:IConfigurationSettings = null;\n  public static get defaults() {\n    if (Configuration._defaultSettings === null) {\n      Configuration._defaultSettings = {};\n    }\n\n    return Configuration._defaultSettings;\n  }\n}\n\n                                                                                                                                                                                                                                                                                                         \n\nexport class EventBuilder {\n  public target:IEvent;\n  public client:ExceptionlessClient;\n  public pluginContextData:ContextData;\n\n  constructor(event:IEvent, client:ExceptionlessClient, pluginContextData?:ContextData) {\n    this.target = event;\n    this.client = client;\n    this.pluginContextData = pluginContextData || new ContextData();\n  }\n\n  public setType(type:string): EventBuilder {\n    if (!!type && type.length > 0) {\n      this.target.type = type;\n    }\n\n    return this;\n  }\n\n  public setSource(source:string): EventBuilder {\n    if (!!source && source.length > 0) {\n      this.target.source = source;\n    }\n\n    return this;\n  }\n\n  public setSessionId(sessionId:string): EventBuilder {\n    if (!this.isValidIdentifier(sessionId)) {\n      throw new Error(\"SessionId must contain between 8 and 100 alphanumeric or '-' characters.\");\n    }\n\n    this.target.session_id = sessionId;\n    return this;\n  }\n\n  public setReferenceId(referenceId:string): EventBuilder {\n    if (!this.isValidIdentifier(referenceId)) {\n      throw new Error(\"SessionId must contain between 8 and 100 alphanumeric or '-' characters.\");\n    }\n\n    this.target.reference_id = referenceId;\n    return this;\n  }\n\n  public setMessage(message:string): EventBuilder {\n    if (!!message && message.length > 0) {\n      this.target.message = message;\n    }\n\n    return this;\n  }\n\n  public setGeo(latitude: number, longitude: number): EventBuilder {\n    if (latitude < -90.0 || latitude > 90.0)\n      throw new Error('Must be a valid latitude value between -90.0 and 90.0.');\n    if (longitude < -180.0 || longitude > 180.0)\n      throw new Error('Must be a valid longitude value between -180.0 and 180.0.');\n\n    this.target.geo = `${latitude},${longitude}`;\n    return this;\n  }\n\n  public setUserIdentity(userInfo:IUserInfo): EventBuilder;\n  public setUserIdentity(identity:string): EventBuilder;\n  public setUserIdentity(identity:string, name:string): EventBuilder;\n  public setUserIdentity(userInfoOrIdentity:IUserInfo|string, name?:string): EventBuilder {\n    var userInfo = typeof userInfoOrIdentity !== 'string' ? userInfoOrIdentity : { identity: userInfoOrIdentity, name: name };\n    if (!userInfo || (!userInfo.identity && !userInfo.name)) {\n      return this;\n    }\n\n    this.setProperty('@user', userInfo);\n    return this;\n  }\n\n  // TODO: we to see if it makes sense to add setUserDescription.\n\n  public setValue(value:number): EventBuilder {\n    if (!!value) {\n      this.target.value = value;\n    }\n\n    return this;\n  }\n\n  public addTags(...tags:string[]): EventBuilder {\n    if (!tags || tags.length === 0) {\n      return this;\n    }\n\n    if (!this.target.tags) {\n      this.target.tags = [];\n    }\n\n    for (var index = 0; index < tags.length; index++) {\n      if (tags[index] && this.target.tags.indexOf(tags[index]) < 0) {\n        this.target.tags.push(tags[index]);\n      }\n    }\n\n    return this;\n  }\n\n  public setProperty(name:string, value:any): EventBuilder {\n    if (!name || (value === undefined || value == null)) {\n      return this;\n    }\n\n    if (!this.target.data) {\n      this.target.data = {};\n    }\n\n    this.target.data[name] = value;\n    return this;\n  }\n\n  public markAsCritical(critical:boolean): EventBuilder {\n    if (critical) {\n      this.addTags('Critical');\n    }\n\n    return this;\n  }\n\n  public addRequestInfo(request:any): EventBuilder {\n    if (!!request) {\n      this.pluginContextData['@request'] = request;\n    }\n\n    return this;\n  }\n\n  public submit(): void {\n    this.client.submitEvent(this.target, this.pluginContextData);\n  }\n\n  private isValidIdentifier(value:string): boolean {\n    if (!value || !value.length) {\n      return true;\n    }\n\n    if (value.length < 8 || value.length > 100) {\n      return false;\n    }\n\n    for (var index = 0; index < value.length; index++) {\n      var code = value.charCodeAt(index);\n      var isDigit = (code >= 48) && (code <= 57);\n      var isLetter = ((code >= 65) && (code <= 90)) || ((code >= 97) && (code <= 122));\n      var isMinus = code === 45;\n\n      if (!(isDigit || isLetter) && !isMinus) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n\n                                                                                  \r\n\r\nexport interface IError extends IInnerError {\r\n  modules?:IModule[]\r\n}\r\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n\nexport class ExceptionlessClient {\n  public config:Configuration;\n\n  constructor();\n  constructor(settings:IConfigurationSettings);\n  constructor(apiKey:string, serverUrl?:string);\n  constructor(settingsOrApiKey?:IConfigurationSettings|string, serverUrl?:string) {\n    // TODO: populate this in a plugin..\n    //var settings = this.getSettingsFromScriptTag() || {};\n\n    if (typeof settingsOrApiKey !== 'object') {\n      this.config = new Configuration(settingsOrApiKey);\n    } else {\n      this.config = new Configuration({ apiKey: <string>settingsOrApiKey, serverUrl: serverUrl });\n    }\n  }\n\n  public createException(exception:Error): EventBuilder {\n    var pluginContextData = new ContextData();\n    pluginContextData.setException(exception);\n    return this.createEvent(pluginContextData).setType('error');\n  }\n\n  public submitException(exception:Error): void {\n    this.createException(exception).submit();\n  }\n\n  public createUnhandledException(exception:Error, submissionMethod?:string): EventBuilder {\n    var builder = this.createException(exception);\n    builder.pluginContextData.markAsUnhandledError();\n    builder.pluginContextData.setSubmissionMethod(submissionMethod);\n\n    return builder;\n  }\n\n  public submitUnhandledException(exception:Error, submissionMethod?:string) {\n    this.createUnhandledException(exception, submissionMethod).submit();\n  }\n\n  public createFeatureUsage(feature:string): EventBuilder {\n    return this.createEvent().setType('usage').setSource(feature);\n  }\n\n  public submitFeatureUsage(feature:string): void {\n    this.createFeatureUsage(feature).submit();\n  }\n\n  public createLog(message:string): EventBuilder;\n  public createLog(source:string, message:string): EventBuilder;\n  public createLog(source:string, message:string, level:string): EventBuilder;\n  public createLog(sourceOrMessage:string, message?:string, level?:string): EventBuilder {\n    var builder = this.createEvent().setType('log');\n\n    if (sourceOrMessage && message && level) {\n      builder = builder.setSource(sourceOrMessage).setMessage(message).setProperty('@level', level);\n    } else if (sourceOrMessage && message) {\n      builder = builder.setSource(sourceOrMessage).setMessage(message);\n    } else {\n      // TODO: Look into using https://www.stevefenton.co.uk/Content/Blog/Date/201304/Blog/Obtaining-A-Class-Name-At-Runtime-In-TypeScript/\n      var source = (<any>(arguments.callee.caller)).name;\n      builder = builder.setSource(source).setMessage(sourceOrMessage);\n    }\n\n    return builder;\n  }\n\n  public submitLog(message:string): void;\n  public submitLog(source:string, message:string): void;\n  public submitLog(source:string, message:string, level:string): void;\n  public submitLog(sourceOrMessage:string, message?:string, level?:string): void {\n    this.createLog(sourceOrMessage, message, level).submit();\n  }\n\n  public createNotFound(resource:string): EventBuilder {\n    return this.createEvent().setType('404').setSource(resource);\n  }\n\n  public submitNotFound(resource:string): void {\n    this.createNotFound(resource).submit();\n  }\n\n  public createSessionStart(sessionId:string): EventBuilder {\n    return this.createEvent().setType('start').setSessionId(sessionId);\n  }\n\n  public submitSessionStart(sessionId:string): void {\n    this.createSessionStart(sessionId).submit();\n  }\n\n  public createSessionEnd(sessionId:string): EventBuilder {\n    return this.createEvent().setType('end').setSessionId(sessionId);\n  }\n\n  public submitSessionEnd(sessionId:string): void {\n    this.createSessionEnd(sessionId).submit();\n  }\n\n  public createEvent(pluginContextData?:ContextData): EventBuilder {\n    return new EventBuilder({ date: new Date() }, this, pluginContextData);\n  }\n\n  public submitEvent(event:IEvent, pluginContextData?:ContextData): void {\n    if (!event) {\n      return;\n    }\n\n    if (!this.config.enabled) {\n      return this.config.log.info('Event submission is currently disabled.');\n    }\n\n    if (!event.data) {\n      event.data = {};\n    }\n\n    if (!event.tags || !event.tags.length) {\n      event.tags = [];\n    }\n\n    var context = new EventPluginContext(this, event, pluginContextData);\n    return EventPluginManager.run(context, () => {\n      // ensure all required data\n      if (!event.type || event.type.length === 0) {\n        event.type = 'log';\n      }\n\n      if (!event.date) {\n        event.date = new Date();\n      }\n\n      this.config.queue.enqueue(event);\n\n      if (event.reference_id && event.reference_id.length > 0) {\n        this.config.log.info(`Setting last reference id '${event.reference_id}'`);\n        this.config.lastReferenceIdManager.setLast(event.reference_id);\n      }\n    });\n  }\n\n  public getLastReferenceId(): string {\n    return this.config.lastReferenceIdManager.getLast();\n  }\n\n  private static _instance:ExceptionlessClient = null;\n  public static get default() {\n    if(ExceptionlessClient._instance === null) {\n      ExceptionlessClient._instance = new ExceptionlessClient(null);\n    }\n    return ExceptionlessClient._instance;\n  }\n}\n\nexport interface IParameter {\r\n  data?:any;\r\n  generic_arguments?:string[];\r\n\r\n  name?:string;\r\n  type?:string;\r\n  type_namespace?:string;\r\n}\r\n\n                                          \r\n\r\nexport interface IMethod {\r\n  data?:any;\r\n  generic_arguments?:string[];\r\n  parameters?:IParameter[];\r\n\r\n  is_signature_target?:boolean;\r\n  declaring_namespace?:string;\r\n  declaring_type?:string;\r\n  name?:string;\r\n  module_id?:number;\r\n}\r\n\n                                    \r\n\r\nexport interface IStackFrame extends IMethod {\r\n  file_name:string;\r\n  line_number:number;\r\n  column:number;\r\n}\r\n\n                                                                                  \r\n\r\nexport interface IInnerError {\r\n  message?:string;\r\n  type?:string;\r\n  code?:string;\r\n  data?:any;\r\n  inner?:IInnerError\r\n  stack_trace?:IStackFrame[];\r\n  target_method?:IMethod;\r\n}\r\n\nexport interface IModule {\r\n  data?:any;\r\n\r\n  module_id?:number;\r\n  name?:string;\r\n  version?:string;\r\n  is_entry?:boolean;\r\n  created_date?:Date;\r\n  modified_date?:Date;\r\n}\r\n\n                                                                                                           \n\nexport class ConfigurationDefaultsPlugin implements IEventPlugin {\n  public priority:number = 10;\n  public name:string = 'ConfigurationDefaultsPlugin';\n\n  public run(context:EventPluginContext, next?:() => void): void {\n    var defaultTags = context.client.config.defaultTags || [];\n    for (var index = 0; index < defaultTags.length; index++) {\n      var tag = defaultTags[index];\n      if (!!tag && context.event.tags.indexOf(tag) < 0) {\n        context.event.tags.push(tag)\n      }\n    }\n\n    var defaultData = context.client.config.defaultData || {};\n    for (var key in defaultData) {\n      if (!!defaultData[key]) {\n        context.event.data[key] = defaultData[key];\n      }\n    }\n\n    if (next) {\n      next();\n    }\n  }\n}\n\n                                                                                                           \n\nexport class ErrorPlugin implements IEventPlugin {\n  public priority:number = 30;\n  public name:string = 'ErrorPlugin';\n\n  public run(context:EventPluginContext, next?:() => void): void {\n    var exception = context.contextData.getException();\n    if (!!exception) {\n      context.event.type = 'error';\n\n      if (!context.event.data['@error']) {\n        var parser = context.client.config.errorParser;\n        if (!parser) {\n          throw new Error('No error parser was defined.');\n        }\n\n        parser.parse(context, exception);\n      }\n    }\n\n    if (next) {\n      next();\n    }\n  }\n}\n\n                                                                                                           \n\nexport class DuplicateCheckerPlugin implements IEventPlugin {\n  public priority:number = 50;\n  public name:string = 'DuplicateCheckerPlugin';\n\n  public run(context:EventPluginContext, next?:() => void): void {\n    // TODO: Implement\n    if (next) {\n      next();\n    }\n  }\n}\n\n                                                                                                                                                                                                \n\nexport class ModuleInfoPlugin implements IEventPlugin {\n  public priority:number = 40;\n  public name:string = 'ModuleInfoPlugin';\n\n  public run(context:EventPluginContext, next?:() => void): void {\n    var moduleCollector = context.client.config.moduleCollector;\n    if (context.event.data['@error'] && !context.event.data['@error'].modules && !!moduleCollector) {\n      var modules = moduleCollector.getModules(context);\n      if (modules && modules.length > 0) {\n        context.event.data['@error'].modules = modules;\n      }\n    }\n\n    if (next) {\n      next();\n    }\n  }\n}\n\nexport interface IRequestInfo {\r\n  user_agent?:string;\r\n  http_method?:string;\r\n  is_secure?:boolean;\r\n  host?:string;\r\n  port?:number;\r\n  path?:string;\r\n  referrer?:string;\r\n  client_ip_address?:string;\r\n  cookies?:any;\r\n  post_data?:any;\r\n  query_string?:any;\r\n  data?:any\r\n}\r\n\n                                                                                                                                                                     \n\nexport class RequestInfoPlugin implements IEventPlugin {\n  public priority:number = 60;\n  public name:string = 'RequestInfoPlugin';\n\n  public run(context:EventPluginContext, next?:() => void): void {\n    var requestInfoCollector = context.client.config.requestInfoCollector;\n    if (!context.event.data['@request'] && !!requestInfoCollector) {\n      var ri = requestInfoCollector.getRequestInfo(context);\n      if (!!ri) {\n        context.event.data['@request'] = ri;\n      }\n    }\n\n    if (next) {\n      next();\n    }\n  }\n}\n\n                                                                                                                                                                             \n\nexport class EnvironmentInfoPlugin implements IEventPlugin {\n  public priority:number = 70;\n  public name:string = 'EnvironmentInfoPlugin';\n\n  public run(context:EventPluginContext, next?:() => void): void {\n    if (!context.event.data['@environment'] && context.client.config.environmentInfoCollector) {\n      var ei = context.client.config.environmentInfoCollector.getEnvironmentInfo(context);\n      if (!!ei) {\n        context.event.data['@environment'] = ei;\n      }\n    }\n\n    if (next) {\n      next();\n    }\n  }\n}\n\n                                                                                                           \n\nexport class SubmissionMethodPlugin implements IEventPlugin {\n  public priority:number = 100;\n  public name:string = 'SubmissionMethodPlugin';\n\n  public run(context:EventPluginContext, next?:() => void): void {\n    var submissionMethod:string = context.contextData.getSubmissionMethod();\n    if (!!submissionMethod) {\n      context.event.data['@submission_method'] = submissionMethod;\n    }\n\n    if (next) {\n      next();\n    }\n  }\n}\n\nexport interface IUserDescription {\r\n  email_address?:string;\r\n  description?:string;\r\n  data?:any;\r\n}\r\n\nexport class SettingsResponse {\r\n  success:boolean = false;\r\n  settings:any;\r\n  settingsVersion:number = -1;\r\n  message:string;\r\n  exception:any;\r\n\r\n  constructor(success:boolean, settings:any, settingsVersion:number = -1, exception:any = null, message:string = null) {\r\n    this.success = success;\r\n    this.settings = settings;\r\n    this.settingsVersion = settingsVersion;\r\n    this.exception = exception;\r\n    this.message = message;\r\n  }\r\n}\r\n\nexport class SubmissionResponse {\r\n  success:boolean = false;\r\n  badRequest:boolean = false;\r\n  serviceUnavailable:boolean = false;\r\n  paymentRequired:boolean = false;\r\n  unableToAuthenticate:boolean = false;\r\n  notFound:boolean = false;\r\n  requestEntityTooLarge:boolean = false;\r\n  statusCode:number;\r\n  message:string;\r\n\r\n  constructor(statusCode:number, message?:string) {\r\n    this.statusCode = statusCode;\r\n    this.message = message;\r\n\r\n    this.success = statusCode >= 200 && statusCode <= 299;\r\n    this.badRequest = statusCode === 400;\r\n    this.serviceUnavailable = statusCode === 503;\r\n    this.paymentRequired = statusCode === 402;\r\n    this.unableToAuthenticate = statusCode === 401 || statusCode === 403;\r\n    this.notFound = statusCode === 404;\r\n    this.requestEntityTooLarge = statusCode === 413;\r\n  }\r\n}\r\n\n                                                                                                                                                                                                             \r\n\r\nimport os = require('os');\r\n\r\nexport class NodeEnvironmentInfoCollector implements IEnvironmentInfoCollector {\r\n  public getEnvironmentInfo(context:EventPluginContext): IEnvironmentInfo {\r\n    if (!os) {\r\n      return null;\r\n    }\r\n\r\n    var environmentInfo: IEnvironmentInfo = {\r\n      processor_count: os.cpus().length,\r\n      total_physical_memory: os.totalmem(),\r\n      available_physical_memory: os.freemem(),\r\n      command_line: process.argv.join(' '),\r\n      process_name: process.title,\r\n      process_id: process.pid + '',\r\n      process_memory_size: process.memoryUsage().heapTotal,\r\n      //thread_id: '',\r\n      architecture: os.arch(),\r\n      o_s_name: os.type(),\r\n      o_s_version: os.release(),\r\n      ip_address: this.getIpAddresses(),\r\n      machine_name: os.hostname(),\r\n      //install_id: '',\r\n      runtime_version: process.version,\r\n      data: {\r\n        loadavg: os.loadavg(),\r\n        platform: os.platform(),\r\n        tmpdir: os.tmpdir(),\r\n        uptime: os.uptime()\r\n      }\r\n    };\r\n\r\n    if ((<any>os).endianness) {\r\n      environmentInfo.data.endianness = (<any>os).endianness();\r\n    }\r\n\r\n    return environmentInfo;\r\n  }\r\n\r\n  private getIpAddresses():string {\r\n    var ips = [];\r\n    var interfaces = os.networkInterfaces();\r\n    Object.keys(interfaces).forEach((name) => {\r\n      interfaces[name].forEach((iface:any) => {\r\n        if ('IPv4' === iface.family && !iface.internal) {\r\n          ips.push(iface.address);\r\n        }\r\n      });\r\n    });\r\n\r\n    return ips.join(', ');\r\n  }\r\n}\r\n\n                                                                                                                                                                                                                \n\nimport nodestacktrace = require('stack-trace');\n\nexport class NodeErrorParser implements IErrorParser {\n  public parse(context:EventPluginContext, exception:Error): void {\n    if (!nodestacktrace) {\n      throw new Error('Unable to load the stack trace library.');\n    }\n\n    var stackFrames = nodestacktrace.parse(exception) || [];\n    var error:IError = {\n      message: exception.message,\n      stack_trace: this.getStackFrames(context, stackFrames)\n    };\n\n    context.event.data['@error'] = error;\n  }\n\n  private getStackFrames(context:EventPluginContext, stackFrames:any[]): IStackFrame[] {\n    var frames:IStackFrame[] = [];\n\n    for (var index = 0; index < stackFrames.length; index++) {\n      var frame = stackFrames[index];\n      frames.push({\n        name: frame.getMethodName() || frame.getFunctionName(),\n        //parameters: frame.args,\n        file_name: frame.getFileName(),\n        line_number: frame.getLineNumber(),\n        column: frame.getColumnNumber(),\n        declaring_type: frame.getTypeName(),\n        data: {\n          is_native: frame.isNative() || (!!frame.filename && frame.filename[0] !== '/' && frame.filename[0] !== '.')\n        }\n      });\n    }\n\n    return frames;\n  }\n}\n\n                                                                                                                                                                                                                           \n\nexport class NodeRequestInfoCollector implements IRequestInfoCollector {\n  getRequestInfo(context:EventPluginContext):IRequestInfo {\n    if (!context.contextData['@request']) {\n      return null;\n    }\n\n    var request = context.contextData['@request'];\n    var ri:IRequestInfo = {\n      client_ip_address: request.ip,\n      user_agent: request.headers['user-agent'],\n      is_secure: request.secure,\n      http_method: request.method,\n      host: request.hostname || request.host,\n      //port: TODO,\n      path: request.path,\n      post_data: request.body,\n      //referrer: TODO,\n      cookies: Utils.getCookies((request || {}).headers['cookie'], '; '),\n      query_string: request.params\n    };\n\n    return ri;\n  }\n}\n\n                                                                                                                                                                                                                                                                                                                                                                                      \n\nexport class SubmissionClientBase implements ISubmissionClient {\n  public submit(events:IEvent[], config:Configuration, callback:(SubmissionResponse) => void):void {\n    return this.sendRequest('POST', config.serverUrl, '/api/v2/events', config.apiKey, Utils.stringify(events), (status:number, message:string, data:string) => {\n      callback(new SubmissionResponse(status, message));\n    });\n  }\n\n  public submitDescription(referenceId:string, description:IUserDescription, config:Configuration, callback:(SubmissionResponse) => void):void {\n    var path = `/api/v2/events/by-ref/${encodeURIComponent(referenceId)}/user-description`;\n    return this.sendRequest('POST', config.serverUrl, path, config.apiKey, Utils.stringify(description), (status:number, message:string, data:string) => {\n      callback(new SubmissionResponse(status, message));\n    });\n  }\n\n  public getSettings(config:Configuration, callback:(SettingsResponse) => void):void {\n    return this.sendRequest('GET', config.serverUrl, '/api/v2/projects/config', config.apiKey, null, (status:number, message:string, data:string) => {\n        if (status !== 200) {\n          return callback(new SettingsResponse(false, null, -1, null, `Unable to retrieve configuration settings: ${message}`));\n        }\n\n        var settings;\n        try {\n          settings = JSON.parse(data);\n        } catch (e) {\n          config.log.error(`An error occurred while parsing the settings response text: '${data}'`);\n        }\n\n        if (!settings || !settings.settings || !settings.version) {\n          return callback(new SettingsResponse(false, null, -1, null, 'Invalid configuration settings.'));\n        }\n\n        callback(new SettingsResponse(true, settings.settings, settings.version));\n    });\n  }\n\n  public sendRequest(method:string, host:string, path:string, data:string, apiKey:string, callback: (status:number, message:string, data?:string) => void): void {\n    callback(500, 'Not Implemented');\n  }\n}\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                     \n\nimport http = require('http');\nimport https = require('https');\nimport url = require('url');\n\nexport class NodeSubmissionClient extends SubmissionClientBase {\n  public sendRequest(method:string, host:string, path:string, apiKey:string, data:string, callback: (status:number, message:string, data?:string) => void): void {\n    function complete(response:http.IncomingMessage, data:string) {\n      var message:string;\n      if (response.statusCode === 0) {\n        message = 'Unable to connect to server.';\n      } else if (response.statusCode < 200 || response.statusCode > 299) {\n        message = response.statusMessage || (<any>response).message;\n      }\n\n      callback(response.statusCode || 500, message, data);\n    }\n\n    var parsedHost = url.parse(host);\n    var options:https.RequestOptions = {\n      auth: `client:${apiKey}`,\n      hostname: parsedHost.hostname,\n      method: method,\n      port: parsedHost.port && parseInt(parsedHost.port),\n      path: path\n    };\n\n    if (method === 'POST') {\n      options.headers = {\n        'Content-Type': 'application/json',\n        'Content-Length': data.length\n      }\n    }\n\n    var request:http.ClientRequest = https.request(options, (response:http.IncomingMessage) => {\n      var body = '';\n      response.on('data', chunk => body += chunk);\n      response.on('end', () => {\n        complete(response, body);\n      });\n    });\n\n    request.on('error', function(e) {\n      callback(500, e.message);\n    });\n\n    request.write(data);\n    request.end();\n  }\n}\n\nn\nexport class NodeBootstrapper implements IBootstrapper {\n  public register(): void {\n    if (typeof window === 'undefined' && typeof global !== 'undefined' && {}.toString.call(global) === '[object global]') {\n      return;\n    }\n\n    var configDefaults = Configuration.defaults;\n    configDefaults.environmentInfoCollector = new NodeEnvironmentInfoCollector();\n    configDefaults.errorParser = new NodeErrorParser();\n    configDefaults.requestInfoCollector = new NodeRequestInfoCollector();\n    configDefaults.submissionClient = new NodeSubmissionClient();\n\n    process.on('uncaughtException', function(error) {\n      ExceptionlessClient.default.submitUnhandledException(error, 'uncaughtException');\n    });\n\n    process.on('beforeExit', function(code:number) {\n      var client = ExceptionlessClient.default;\n\n      var message = this.getExitCodeReason(code);\n      if (message !== null) {\n        client.submitLog('beforeExit', message, 'Error')\n      }\n\n      client.config.queue.process()\n    });\n  }\n\n  // exit codes: https://nodejs.org/api/process.html#process_event_exit\n  private getExitCodeReason(code:number): string {\n    if (code === 1) {\n      return 'Uncaught Fatal Exception';\n    }\n\n    if (code === 3) {\n      return 'Internal JavaScript Parse Error';\n    }\n\n    if (code === 4) {\n      return 'Internal JavaScript Evaluation Failure';\n    }\n\n    if (code === 5) {\n      return 'Fatal Exception';\n    }\n\n    if (code === 6) {\n      return 'Non-function Internal Exception Handler ';\n    }\n\n    if (code === 7) {\n      return 'Internal Exception Handler Run-Time Failure';\n    }\n\n    if (code === 8) {\n      return 'Uncaught Exception';\n    }\n\n    if (code === 9) {\n      return 'Invalid Argument';\n    }\n\n    if (code === 10) {\n      return 'Internal JavaScript Run-Time Failure';\n    }\n\n    if (code === 12) {\n      return 'Invalid Debug Argument';\n    }\n\n    if (code > 128) {\n      return 'Signal Exits';\n    }\n\n    return null;\n  }\n}\n\n                                                                                                                                                                                                                                                                   \n\nexport class WebErrorParser implements IErrorParser {\n  public parse(context:EventPluginContext, exception:Error): void {\n    var stackTrace:TraceKit.StackTrace = !!context['@@_TraceKit.StackTrace']\n      ? context['@@_TraceKit.StackTrace']\n      : TraceKit.computeStackTrace(exception, 25);\n\n    if (!stackTrace) {\n      throw new Error('Unable to parse the exceptions stack trace.');\n    }\n\n    var error:IError = {\n      message: stackTrace.message || exception.message,\n      stack_trace: this.getStackFrames(context, stackTrace.stack || [])\n    };\n\n    context.event.data['@error'] = error;\n  }\n\n  private getStackFrames(context:EventPluginContext, stackFrames:TraceKit.StackFrame[]): IStackFrame[] {\n    var frames:IStackFrame[] = [];\n\n    for (var index = 0; index < stackFrames.length; index++) {\n      var frame = stackFrames[index];\n      frames.push({\n        name: frame.func || '[anonymous]',\n        parameters: this.getParameters(frame.args),\n        file_name: frame.url,\n        line_number: frame.line,\n        column: frame.column\n      });\n    }\n\n    return frames;\n  }\n\n  private getParameters(parameters:string|string[]): IParameter[] {\n    var params:string[] = (typeof parameters === 'string' ? [parameters] : parameters) || [];\n\n    var result:IParameter[] = [];\n    for (var index = 0; index < params.length; index++) {\n      result.push({ name: params[index] })\n    }\n\n    return result;\n  }\n}\n\n                                                                                                                                                                                                       \n\nexport class WebModuleCollector implements IModuleCollector {\n  public getModules(context:EventPluginContext): IModule[] {\n    if (document && document.getElementsByTagName) {\n      return null;\n    }\n\n    var modules:IModule[] = [];\n    var scripts = document.getElementsByTagName('script');\n    if (scripts && scripts.length > 0) {\n      for (var index = 0; index < scripts.length; index++) {\n        if (scripts[index].src) {\n          modules.push({\n            module_id: index,\n            name: scripts[index].src,\n            version: Utils.parseVersion(scripts[index].src)\n          });\n        } else if (!!scripts[index].innerHTML) {\n          modules.push({\n            module_id: index,\n            name: 'Script Tag',\n            version: Utils.getHashCode(scripts[index].innerHTML)\n          });\n        }\n      }\n    }\n\n    return modules;\n  }\n}\n\n                                                                                                                                                                                                                           \n\nexport class WebRequestInfoCollector implements IRequestInfoCollector {\n  public getRequestInfo(context:EventPluginContext): IRequestInfo {\n    if (!document || !navigator || !location) {\n      return null;\n    }\n\n    var requestInfo:IRequestInfo = {\n      user_agent: navigator.userAgent,\n      is_secure: location.protocol === 'https:',\n      host: location.hostname,\n      port: location.port && location.port !== '' ? parseInt(location.port) : 80,\n      path: location.pathname,\n      //client_ip_address: 'TODO',\n      cookies: Utils.getCookies(document.cookie, ', '),\n      query_string: Utils.parseQueryString(location.search.substring(1))\n    };\n\n    if (document.referrer && document.referrer !== '') {\n      requestInfo.referrer = document.referrer;\n    }\n  }\n}\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                     \n\ndeclare var XDomainRequest:{ new (); create(); };\n\nexport class DefaultSubmissionClient extends SubmissionClientBase {\n  private createRequest(method:string, url:string): XMLHttpRequest {\n    var xhr:any = new XMLHttpRequest();\n    if ('withCredentials' in xhr) {\n      xhr.open(method, url, true);\n    } else if (typeof XDomainRequest != 'undefined') {\n      xhr = new XDomainRequest();\n      xhr.open(method, url);\n    } else {\n      xhr = null;\n    }\n\n    if (xhr) {\n      if (method === 'POST' && xhr.setRequestHeader) {\n        xhr.setRequestHeader('Content-Type', 'application/json');\n      }\n\n      xhr.timeout = 10000;\n    }\n\n    return xhr;\n  }\n\n  public sendRequest(method:string, host:string, path:string, apiKey:string, data:string, callback: (status:number, message:string, data?:string) => void): void {\n    function complete(xhr:XMLHttpRequest) {\n      var message:string;\n      if (xhr.status === 0) {\n        message = 'Unable to connect to server.';\n      } else if (xhr.status < 200 || xhr.status > 299) {\n        if (!!xhr.responseBody && !!xhr.responseBody.message) {\n          message = xhr.responseBody.message;\n        } else if (!!xhr.responseText && xhr.responseText.indexOf('message') !== -1) {\n          try {\n            message =  JSON.parse(xhr.responseText).message;\n          } catch (e) {\n            message = xhr.responseText;\n          }\n        } else {\n          message = xhr.statusText;\n        }\n      }\n\n      callback(xhr.status || 500, message, xhr.responseText);\n    }\n\n    var url = `${host}${path}?access_token=${encodeURIComponent(apiKey)}`;\n    var xhr = this.createRequest(method || 'POST', url);\n    if (!xhr) {\n      return callback(503,'CORS not supported.');\n    }\n\n    if ('withCredentials' in xhr) {\n      xhr.onreadystatechange = () => {\n        // xhr not ready.\n        if (xhr.readyState !== 4) {\n          return;\n        }\n\n        complete(xhr);\n      };\n    }\n\n    xhr.ontimeout = () => complete(xhr);\n    xhr.onerror = () => complete(xhr);\n    xhr.onload = () => complete(xhr);\n\n    xhr.send(data);\n  }\n}\n\nn\nexport class WindowBootstrapper implements IBootstrapper {\n  public register(): void {\n    if (typeof window === 'undefined' || typeof document === 'undefined') {\n      return;\n    }\n\n    var configDefaults = Configuration.defaults;\n    var settings = this.getDefaultsSettingsFromScriptTag();\n    if (settings && (settings.apiKey || settings.serverUrl)) {\n      configDefaults.apiKey = settings.apiKey;\n      configDefaults.serverUrl = settings.serverUrl;\n    }\n\n    configDefaults.errorParser = new WebErrorParser();\n    configDefaults.moduleCollector = new WebModuleCollector();\n    configDefaults.requestInfoCollector = new WebRequestInfoCollector();\n    configDefaults.submissionClient = new DefaultSubmissionClient();\n\n    TraceKit.report.subscribe(this.processUnhandledException);\n    TraceKit.extendToAsynchronousCallbacks();\n    if ($ && $(document)) {\n      $(document).ajaxError(this.processJQueryAjaxError);\n    }\n  }\n\n  private getDefaultsSettingsFromScriptTag(): IConfigurationSettings {\n    if (!document || !document.getElementsByTagName) {\n      return null;\n    }\n\n    var scripts = document.getElementsByTagName('script');\n    for (var index = 0; index < scripts.length; index++) {\n      if (scripts[index].src && scripts[index].src.indexOf('/exceptionless') > -1) {\n        return Utils.parseQueryString(scripts[index].src.split('?').pop());\n      }\n    }\n    return null;\n  }\n\n  private processUnhandledException(stackTrace:TraceKit.StackTrace, options): void {\n    var builder = ExceptionlessClient.default.createUnhandledException(new Error(stackTrace.message || (options || {}).status || 'Script error'), 'onerror');\n    builder.pluginContextData['@@_TraceKit.StackTrace'] = stackTrace;\n    builder.submit();\n  }\n\n  private processJQueryAjaxError(event, xhr, settings, error): void {\n    var client = ExceptionlessClient.default;\n    if (xhr.status === 404) {\n      client.submitNotFound(settings.url);\n    } else if (xhr.status !== 401) {\n      client.createUnhandledException(error, 'JQuery.ajaxError')\n        .setSource(settings.url)\n        .setProperty('status', xhr.status)\n        .setProperty('request', settings.data)\n        .setProperty('response', xhr.responseText && xhr.responseText.slice ? xhr.responseText.slice(0, 1024) : undefined)\n        .submit();\n    }\n  }\n}\n\ndeclare var $;\n\nn\nnew NodeBootstrapper().register();\nnew WindowBootstrapper().register();\n(<any>Error).stackTraceLimit = Infinity;\n\n",null],"sourceRoot":"/source/"}