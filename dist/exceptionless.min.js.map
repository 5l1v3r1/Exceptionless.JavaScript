{"version":3,"sources":["tracekit.js","/source/Exceptionless.ts","exceptionless.min.js"],"names":["window","undefined","_has","object","key","Object","prototype","hasOwnProperty","call","_isUndefined","what","TraceKit","_oldTraceKit","_slice","slice","UNKNOWN_FUNCTION","noConflict","wrap","func","wrapped","apply","this","arguments","e","report","subscribe","handler","installGlobalHandler","handlers","push","unsubscribe","i","length","splice","notifyHandlers","stack","windowError","exception","collectWindowErrors","concat","inner","traceKitWindowOnError","message","url","lineNo","columnNo","errorObj","computeStackTrace","lastExceptionStack","augmentStackTraceWithInitialElement","lastException","location","line","column","guessFunctionName","context","gatherContext","mode","document","href","useragent","navigator","userAgent","_oldOnerrorHandler","_onErrorHandlerInstalled","onerror","ex","args","s","setTimeout","incomplete","loadSource","remoteFetching","getXHR","XMLHttpRequest","ActiveXObject","request","open","send","responseText","getSource","sourceCache","source","indexOf","domain","split","m","reFunctionArgNames","reGuessFunction","maxLines","exec","linesBefore","Math","floor","linesOfContext","linesAfter","start","max","end","min","escapeRegExp","text","replace","escapeCodeAsRegExpForMatchingInsideHTML","body","findSourceInUrls","re","urls","j","join","substring","index","lastIndexOf","findSourceInLine","fragment","RegExp","findSourceByFunctionBody","parts","result","scripts","getElementsByTagName","code","codeRE","eventRE","script","src","name","event","computeStackTraceFromStackProp","element","chrome","gecko","winjs","lines","reference","columnNumber","computeStackTraceFromStacktraceProp","stacktrace","testRE","exc","computeStackTraceFromOperaMultiLineMessage","len","lineRE1","lineRE2","lineRE3","inlineScriptBlocks","item","relativeLine","pos","innerText","midline","stackInfo","initial","unshift","partial","computeStackTraceByWalkingCallerChain","depth","functionName","funcs","recursion","curr","caller","toString","input","description","sourceURL","fileName","lineNumber","debug","computeStackTraceOfCaller","Error","ofCaller","extendToAsynchronousCallbacks","_helper","fnName","originalFn","originalCallback","root","factory","define","amd","exports","module","require","Exceptionless","ContextData","setException","defineProperty","get","enumerable","configurable","getException","hasException","markAsUnhandledError","setSubmissionMethod","method","getSubmissionMethod","InMemoryLastReferenceIdManager","_lastReferenceId","getLast","clearLast","setLast","eventId","ConsoleLog","info","console","warn","error","NullLog","EventPluginContext","client","contextData","cancel","config","log","EventPluginManager","run","plugins","reduce","promise","plugin","then","Promise","resolve","addDefaultPlugins","addPlugin","ConfigurationDefaultsPlugin","ErrorPlugin","DuplicateCheckerPlugin","ModuleInfoPlugin","RequestInfoPlugin","EnvironmentInfoPlugin","SubmissionMethodPlugin","ReferenceIdPlugin","priority","reference_id","type","Utils","guid","DefaultEventQueue","_processingQueue","_config","enqueue","ensureQueueTimer","areQueuedItemsDiscarded","queuePath","Date","toJSON","randomNumber","storage","save","process","_this","enabled","apiKey","events","submissionBatchSize","serverUrl","submissionClient","submit","response","processSubmissionResponse","suspendProcessing","success","serviceUnavailable","requeueEvents","paymentRequired","unableToAuthenticate","notFound","badRequest","requestEntityTooLarge","round","_queueTimer","setInterval","onProcessQueue","isQueueProcessingSuspended","durationInMinutes","discardFutureQueuedItems","clearQueue","_suspendProcessingUntil","getTime","_discardQueuedItemsUntil","clear","Exception","InMemoryStorage","_items","path","value","searchPattern","limit","results","regex","test","count","getHashCode","hash","character","charCodeAt","s4","random","merge","defaultValues","values","parseVersion","versionRegex","matches","parseQueryString","query","pairs","pair","decodeURIComponent","stringify","data","cache","JSON","Configuration","settings","inject","fn","_enabled","_serverUrl","_plugins","lastReferenceIdManager","defaultTags","defaultData","defaults","environmentInfoCollector","errorParser","moduleCollector","requestInfoCollector","queue","_apiKey","set","sort","p1","p2","pluginOrName","pluginAction","pluginExists","removePlugin","setVersion","version","setUserIdentity","userInfoOrIdentity","userInfo","identity","shouldRemove","useReferenceIds","useDebugLogger","_defaultSettings","EventBuilder","pluginContextData","target","setType","setSource","setSessionId","sessionId","isValidIdentifier","session_id","setReferenceId","referenceId","setMessage","setGeo","latitude","longitude","geo","setProperty","setValue","addTags","tags","_i","markAsCritical","critical","addRequestInfo","submitEvent","isDigit","isLetter","isMinus","ExceptionlessClient","settingsOrApiKey","createException","createEvent","submitException","createUnhandledException","submissionMethod","builder","submitUnhandledException","createFeatureUsage","feature","submitFeatureUsage","createLog","sourceOrMessage","level","callee","submitLog","createNotFound","resource","submitNotFound","createSessionStart","submitSessionStart","createSessionEnd","submitSessionEnd","date","reject","getLastReferenceId","_instance","tag","parser","parse","modules","getModules","ri","getRequestInfo","ei","getEnvironmentInfo","SettingsResponse","settingsVersion","SubmissionResponse","statusCode","os","NodeEnvironmentInfoCollector","environmentInfo","processor_count","cpus","total_physical_memory","totalmem","available_physical_memory","freemem","command_line","argv","process_name","title","process_id","pid","process_memory_size","memoryUsage","heapTotal","architecture","arch","o_s_name","o_s_version","release","ip_address","getIpAddresses","machine_name","hostname","runtime_version","loadavg","platform","tmpdir","uptime","endianness","ips","interfaces","networkInterfaces","keys","forEach","iface","family","internal","address","nodestacktrace","NodeErrorParser","stackFrames","stack_trace","getStackFrames","frames","frame","getMethodName","getFunctionName","file_name","getFileName","line_number","getLineNumber","getColumnNumber","declaring_type","getTypeName","is_native","isNative","filename","NodeRequestInfoCollector","client_ip_address","ip","user_agent","headers","is_secure","secure","http_method","host","post_data","cookies","getCookies","query_string","params","cookie","https","NodeSubmissionClient","sendRequest","msg","getResponseMessage","submitDescription","encodeURIComponent","getSettings","statusMessage","parsedHost","options","auth","port","parseInt","Content-Type","Content-Length","on","chunk","write","NodeBootstrapper","register","isNode","getExitCodeReason","global","WebErrorParser","stackTrace","parameters","getParameters","WebModuleCollector","module_id","innerHTML","WebRequestInfoCollector","requestInfo","protocol","pathname","search","referrer","DefaultSubmissionClient","xhr","status","responseBody","statusText","createRequest","XDomainRequest","setRequestHeader","timeout","onreadystatechange","readyState","ontimeout","onload","WindowBootstrapper","configDefaults","getDefaultsSettingsFromScriptTag","processUnhandledException","$","ajaxError","processJQueryAjaxError","pop","stackTraceLimit","Infinity"],"mappings":"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","file":"exceptionless.min.js","sourcesContent":["/*\n TraceKit - Cross brower stack traces - github.com/occ/TraceKit\n MIT license\n*/\n\n(function(window, undefined) {\n\n\nvar TraceKit = {};\nvar _oldTraceKit = window.TraceKit;\n\n// global reference to slice\nvar _slice = [].slice;\nvar UNKNOWN_FUNCTION = '?';\n\n\n/**\n * _has, a better form of hasOwnProperty\n * Example: _has(MainHostObject, property) === true/false\n *\n * @param {Object} host object to check property\n * @param {string} key to check\n */\nfunction _has(object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n}\n\nfunction _isUndefined(what) {\n    return typeof what === 'undefined';\n}\n\n/**\n * TraceKit.noConflict: Export TraceKit out to another variable\n * Example: var TK = TraceKit.noConflict()\n */\nTraceKit.noConflict = function noConflict() {\n    window.TraceKit = _oldTraceKit;\n    return TraceKit;\n};\n\n/**\n * TraceKit.wrap: Wrap any function in a TraceKit reporter\n * Example: func = TraceKit.wrap(func);\n *\n * @param {Function} func Function to be wrapped\n * @return {Function} The wrapped func\n */\nTraceKit.wrap = function traceKitWrapper(func) {\n    function wrapped() {\n        try {\n            return func.apply(this, arguments);\n        } catch (e) {\n            TraceKit.report(e);\n            throw e;\n        }\n    }\n    return wrapped;\n};\n\n/**\n * TraceKit.report: cross-browser processing of unhandled exceptions\n *\n * Syntax:\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\n *   TraceKit.report.unsubscribe(function(stackInfo) { ... })\n *   TraceKit.report(exception)\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\n *\n * Supports:\n *   - Firefox: full stack trace with line numbers, plus column number\n *              on top frame; column number is not guaranteed\n *   - Opera:   full stack trace with line and column numbers\n *   - Chrome:  full stack trace with line and column numbers\n *   - Safari:  line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *   - IE:      line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *\n * In theory, TraceKit should work on all of the following versions:\n *   - IE5.5+ (only 8.0 tested)\n *   - Firefox 0.9+ (only 3.5+ tested)\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\n *     Exceptions Have Stacktrace to be enabled in opera:config)\n *   - Safari 3+ (only 4+ tested)\n *   - Chrome 1+ (only 5+ tested)\n *   - Konqueror 3.5+ (untested)\n *\n * Requires TraceKit.computeStackTrace.\n *\n * Tries to catch all unhandled exceptions and report them to the\n * subscribed handlers. Please note that TraceKit.report will rethrow the\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\n * If the exception does not reach the top of the browser, you will only\n * get a stack trace from the point where TraceKit.report was called.\n *\n * Handlers receive a stackInfo object as described in the\n * TraceKit.computeStackTrace docs.\n */\nTraceKit.report = (function reportModuleWrapper() {\n    var handlers = [],\n        lastException = null,\n        lastExceptionStack = null;\n\n    /**\n     * Add a crash handler.\n     * @param {Function} handler\n     */\n    function subscribe(handler) {\n        installGlobalHandler();\n        handlers.push(handler);\n    }\n\n    /**\n     * Remove a crash handler.\n     * @param {Function} handler\n     */\n    function unsubscribe(handler) {\n        for (var i = handlers.length - 1; i >= 0; --i) {\n            if (handlers[i] === handler) {\n                handlers.splice(i, 1);\n            }\n        }\n    }\n\n    /**\n     * Dispatch stack information to all handlers.\n     * @param {Object.<string, *>} stack\n     */\n    function notifyHandlers(stack, windowError) {\n        var exception = null;\n        if (windowError && !TraceKit.collectWindowErrors) {\n          return;\n        }\n        for (var i in handlers) {\n            if (_has(handlers, i)) {\n                try {\n                    handlers[i].apply(null, [stack].concat(_slice.call(arguments, 2)));\n                } catch (inner) {\n                    exception = inner;\n                }\n            }\n        }\n\n        if (exception) {\n            throw exception;\n        }\n    }\n\n    var _oldOnerrorHandler, _onErrorHandlerInstalled;\n\n    /**\n     * Ensures all global unhandled exceptions are recorded.\n     * Supported by Gecko and IE.\n     * @param {string} message Error message.\n     * @param {string} url URL of script that generated the exception.\n     * @param {(number|string)} lineNo The line number at which the error\n     * occurred.\n     */\n    function traceKitWindowOnError(message, url, lineNo, columnNo, errorObj) {\n        var stack = null;\n\n        if (errorObj) {\n          stack = TraceKit.computeStackTrace(errorObj);\n        }\n        else\n        {\n            if (lastExceptionStack) {\n                TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);\n                stack = lastExceptionStack;\n                lastExceptionStack = null;\n                lastException = null;\n            } else {\n                var location = {\n                    'url': url,\n                    'line': lineNo,\n                    'column': columnNo\n                };\n                location.func = TraceKit.computeStackTrace.guessFunctionName(location.url, location.line);\n                location.context = TraceKit.computeStackTrace.gatherContext(location.url, location.line);\n                stack = {\n                    'mode': 'onerror',\n                    'message': message,\n                    'url': document.location.href,\n                    'stack': [location],\n                    'useragent': navigator.userAgent\n                };\n            }\n        }\n\n        notifyHandlers(stack, 'from window.onerror');\n\n        if (_oldOnerrorHandler) {\n            return _oldOnerrorHandler.apply(this, arguments);\n        }\n\n        return false;\n    }\n\n    function installGlobalHandler ()\n    {\n        if (_onErrorHandlerInstalled === true) {\n           return;\n        }\n        _oldOnerrorHandler = window.onerror;\n        window.onerror = traceKitWindowOnError;\n        _onErrorHandlerInstalled = true;\n    }\n\n    /**\n     * Reports an unhandled Error to TraceKit.\n     * @param {Error} ex\n     */\n    function report(ex) {\n        var args = _slice.call(arguments, 1);\n        if (lastExceptionStack) {\n            if (lastException === ex) {\n                return; // already caught by an inner catch block, ignore\n            } else {\n                var s = lastExceptionStack;\n                lastExceptionStack = null;\n                lastException = null;\n                notifyHandlers.apply(null, [s, null].concat(args));\n            }\n        }\n\n        var stack = TraceKit.computeStackTrace(ex);\n        lastExceptionStack = stack;\n        lastException = ex;\n\n        // If the stack trace is incomplete, wait for 2 seconds for\n        // slow slow IE to see if onerror occurs or not before reporting\n        // this exception; otherwise, we will end up with an incomplete\n        // stack trace\n        window.setTimeout(function () {\n            if (lastException === ex) {\n                lastExceptionStack = null;\n                lastException = null;\n                notifyHandlers.apply(null, [stack, null].concat(args));\n            }\n        }, (stack.incomplete ? 2000 : 0));\n\n        throw ex; // re-throw to propagate to the top level (and cause window.onerror)\n    }\n\n    report.subscribe = subscribe;\n    report.unsubscribe = unsubscribe;\n    return report;\n}());\n\n/**\n * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript\n *\n * Syntax:\n *   s = TraceKit.computeStackTrace.ofCaller([depth])\n *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)\n * Returns:\n *   s.name              - exception name\n *   s.message           - exception message\n *   s.stack[i].url      - JavaScript or HTML file URL\n *   s.stack[i].func     - function name, or empty for anonymous functions (if guessing did not work)\n *   s.stack[i].args     - arguments passed to the function, if known\n *   s.stack[i].line     - line number, if known\n *   s.stack[i].column   - column number, if known\n *   s.stack[i].context  - an array of source code lines; the middle element corresponds to the correct line#\n *   s.mode              - 'stack', 'stacktrace', 'multiline', 'callers', 'onerror', or 'failed' -- method used to collect the stack trace\n *\n * Supports:\n *   - Firefox:  full stack trace with line numbers and unreliable column\n *               number on top frame\n *   - Opera 10: full stack trace with line and column numbers\n *   - Opera 9-: full stack trace with line numbers\n *   - Chrome:   full stack trace with line and column numbers\n *   - Safari:   line and column number for the topmost stacktrace element\n *               only\n *   - IE:       no line numbers whatsoever\n *\n * Tries to guess names of anonymous functions by looking for assignments\n * in the source code. In IE and Safari, we have to guess source file names\n * by searching for function bodies inside all page scripts. This will not\n * work for scripts that are loaded cross-domain.\n * Here be dragons: some function names may be guessed incorrectly, and\n * duplicate functions may be mismatched.\n *\n * TraceKit.computeStackTrace should only be used for tracing purposes.\n * Logging of unhandled exceptions should be done with TraceKit.report,\n * which builds on top of TraceKit.computeStackTrace and provides better\n * IE support by utilizing the window.onerror event to retrieve information\n * about the top of the stack.\n *\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\n * so computeStackTrace instead walks its *own* chain of callers.\n * This means that:\n *  * in Safari, some methods may be missing from the stack trace;\n *  * in IE, the topmost function in the stack trace will always be the\n *    caller of computeStackTrace.\n *\n * This is okay for tracing (because you are likely to be calling\n * computeStackTrace from the function you want to be the topmost element\n * of the stack trace anyway), but not okay for logging unhandled\n * exceptions (because your catch block will likely be far away from the\n * inner function that actually caused the exception).\n *\n * Tracing example:\n *     function trace(message) {\n *         var stackInfo = TraceKit.computeStackTrace.ofCaller();\n *         var data = message + \"\\n\";\n *         for(var i in stackInfo.stack) {\n *             var item = stackInfo.stack[i];\n *             data += (item.func || '[anonymous]') + \"() in \" + item.url + \":\" + (item.line || '0') + \"\\n\";\n *         }\n *         if (window.console)\n *             console.info(data);\n *         else\n *             alert(data);\n *     }\n */\nTraceKit.computeStackTrace = (function computeStackTraceWrapper() {\n    var debug = false,\n        sourceCache = {};\n\n    /**\n     * Attempts to retrieve source code via XMLHttpRequest, which is used\n     * to look up anonymous function names.\n     * @param {string} url URL of source code.\n     * @return {string} Source contents.\n     */\n    function loadSource(url) {\n        if (typeof url !== 'string') {\n          return [];\n        }\n        \n        if (!TraceKit.remoteFetching) { //Only attempt request if remoteFetching is on.\n            return '';\n        }\n        try {\n            var getXHR = function() {\n                try {\n                    return new window.XMLHttpRequest();\n                } catch (e) {\n                    // explicitly bubble up the exception if not found\n                    return new window.ActiveXObject('Microsoft.XMLHTTP');\n                }\n            };\n\n            var request = getXHR();\n            request.open('GET', url, false);\n            request.send('');\n            return request.responseText;\n        } catch (e) {\n            return '';\n        }\n    }\n\n    /**\n     * Retrieves source code from the source code cache.\n     * @param {string} url URL of source code.\n     * @return {Array.<string>} Source contents.\n     */\n    function getSource(url) {\n        if (!_has(sourceCache, url)) {\n            // URL needs to be able to fetched within the acceptable domain.  Otherwise,\n            // cross-domain errors will be triggered.\n            var source = '';\n\n            url = url || \"\";\n\n            if (url.indexOf && url.indexOf(document.domain) !== -1) {\n                source = loadSource(url);\n            }\n            sourceCache[url] = source ? source.split('\\n') : [];\n        }\n\n        return sourceCache[url];\n    }\n\n    /**\n     * Tries to use an externally loaded copy of source code to determine\n     * the name of a function by looking at the name of the variable it was\n     * assigned to, if any.\n     * @param {string} url URL of source code.\n     * @param {(string|number)} lineNo Line number in source code.\n     * @return {string} The function name, if discoverable.\n     */\n    function guessFunctionName(url, lineNo) {\n        var reFunctionArgNames = /function ([^(]*)\\(([^)]*)\\)/,\n            reGuessFunction = /['\"]?([0-9A-Za-z$_]+)['\"]?\\s*[:=]\\s*(function|eval|new Function)/,\n            line = '',\n            maxLines = 10,\n            source = getSource(url),\n            m;\n\n        if (!source.length) {\n            return UNKNOWN_FUNCTION;\n        }\n\n        // Walk backwards from the first line in the function until we find the line which\n        // matches the pattern above, which is the function definition\n        for (var i = 0; i < maxLines; ++i) {\n            line = source[lineNo - i] + line;\n\n            if (!_isUndefined(line)) {\n                if ((m = reGuessFunction.exec(line))) {\n                    return m[1];\n                } else if ((m = reFunctionArgNames.exec(line))) {\n                    return m[1];\n                }\n            }\n        }\n\n        return UNKNOWN_FUNCTION;\n    }\n\n    /**\n     * Retrieves the surrounding lines from where an exception occurred.\n     * @param {string} url URL of source code.\n     * @param {(string|number)} line Line number in source code to centre\n     * around for context.\n     * @return {?Array.<string>} Lines of source code.\n     */\n    function gatherContext(url, line) {\n        var source = getSource(url);\n\n        if (!source.length) {\n            return null;\n        }\n\n        var context = [],\n            // linesBefore & linesAfter are inclusive with the offending line.\n            // if linesOfContext is even, there will be one extra line\n            //   *before* the offending line.\n            linesBefore = Math.floor(TraceKit.linesOfContext / 2),\n            // Add one extra line if linesOfContext is odd\n            linesAfter = linesBefore + (TraceKit.linesOfContext % 2),\n            start = Math.max(0, line - linesBefore - 1),\n            end = Math.min(source.length, line + linesAfter - 1);\n\n        line -= 1; // convert to 0-based index\n\n        for (var i = start; i < end; ++i) {\n            if (!_isUndefined(source[i])) {\n                context.push(source[i]);\n            }\n        }\n\n        return context.length > 0 ? context : null;\n    }\n\n    /**\n     * Escapes special characters, except for whitespace, in a string to be\n     * used inside a regular expression as a string literal.\n     * @param {string} text The string.\n     * @return {string} The escaped string literal.\n     */\n    function escapeRegExp(text) {\n        return text.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#]/g, '\\\\$&');\n    }\n\n    /**\n     * Escapes special characters in a string to be used inside a regular\n     * expression as a string literal. Also ensures that HTML entities will\n     * be matched the same as their literal friends.\n     * @param {string} body The string.\n     * @return {string} The escaped string.\n     */\n    function escapeCodeAsRegExpForMatchingInsideHTML(body) {\n        return escapeRegExp(body).replace('<', '(?:<|&lt;)').replace('>', '(?:>|&gt;)').replace('&', '(?:&|&amp;)').replace('\"', '(?:\"|&quot;)').replace(/\\s+/g, '\\\\s+');\n    }\n\n    /**\n     * Determines where a code fragment occurs in the source code.\n     * @param {RegExp} re The function definition.\n     * @param {Array.<string>} urls A list of URLs to search.\n     * @return {?Object.<string, (string|number)>} An object containing\n     * the url, line, and column number of the defined function.\n     */\n    function findSourceInUrls(re, urls) {\n        var source, m;\n        for (var i = 0, j = urls.length; i < j; ++i) {\n            // console.log('searching', urls[i]);\n            if ((source = getSource(urls[i])).length) {\n                source = source.join('\\n');\n                if ((m = re.exec(source))) {\n                    // console.log('Found function in ' + urls[i]);\n\n                    return {\n                        'url': urls[i],\n                        'line': source.substring(0, m.index).split('\\n').length,\n                        'column': m.index - source.lastIndexOf('\\n', m.index) - 1\n                    };\n                }\n            }\n        }\n\n        // console.log('no match');\n\n        return null;\n    }\n\n    /**\n     * Determines at which column a code fragment occurs on a line of the\n     * source code.\n     * @param {string} fragment The code fragment.\n     * @param {string} url The URL to search.\n     * @param {(string|number)} line The line number to examine.\n     * @return {?number} The column number.\n     */\n    function findSourceInLine(fragment, url, line) {\n        var source = getSource(url),\n            re = new RegExp('\\\\b' + escapeRegExp(fragment) + '\\\\b'),\n            m;\n\n        line -= 1;\n\n        if (source && source.length > line && (m = re.exec(source[line]))) {\n            return m.index;\n        }\n\n        return null;\n    }\n\n    /**\n     * Determines where a function was defined within the source code.\n     * @param {(Function|string)} func A function reference or serialized\n     * function definition.\n     * @return {?Object.<string, (string|number)>} An object containing\n     * the url, line, and column number of the defined function.\n     */\n    function findSourceByFunctionBody(func) {\n        var urls = [window.location.href],\n            scripts = document.getElementsByTagName('script'),\n            body,\n            code = '' + func,\n            codeRE = /^function(?:\\s+([\\w$]+))?\\s*\\(([\\w\\s,]*)\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/,\n            eventRE = /^function on([\\w$]+)\\s*\\(event\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/,\n            re,\n            parts,\n            result;\n\n        for (var i = 0; i < scripts.length; ++i) {\n            var script = scripts[i];\n            if (script.src) {\n                urls.push(script.src);\n            }\n        }\n\n        if (!(parts = codeRE.exec(code))) {\n            re = new RegExp(escapeRegExp(code).replace(/\\s+/g, '\\\\s+'));\n        }\n\n        // not sure if this is really necessary, but I don’t have a test\n        // corpus large enough to confirm that and it was in the original.\n        else {\n            var name = parts[1] ? '\\\\s+' + parts[1] : '',\n                args = parts[2].split(',').join('\\\\s*,\\\\s*');\n\n            body = escapeRegExp(parts[3]).replace(/;$/, ';?'); // semicolon is inserted if the function ends with a comment.replace(/\\s+/g, '\\\\s+');\n            re = new RegExp('function' + name + '\\\\s*\\\\(\\\\s*' + args + '\\\\s*\\\\)\\\\s*{\\\\s*' + body + '\\\\s*}');\n        }\n\n        // look for a normal function definition\n        if ((result = findSourceInUrls(re, urls))) {\n            return result;\n        }\n\n        // look for an old-school event handler function\n        if ((parts = eventRE.exec(code))) {\n            var event = parts[1];\n            body = escapeCodeAsRegExpForMatchingInsideHTML(parts[2]);\n\n            // look for a function defined in HTML as an onXXX handler\n            re = new RegExp('on' + event + '=[\\\\\\'\"]\\\\s*' + body + '\\\\s*[\\\\\\'\"]', 'i');\n\n            if ((result = findSourceInUrls(re, urls[0]))) {\n                return result;\n            }\n\n            // look for ???\n            re = new RegExp(body);\n\n            if ((result = findSourceInUrls(re, urls))) {\n                return result;\n            }\n        }\n\n        return null;\n    }\n\n    // Contents of Exception in various browsers.\n    //\n    // SAFARI:\n    // ex.message = Can't find variable: qq\n    // ex.line = 59\n    // ex.sourceId = 580238192\n    // ex.sourceURL = http://...\n    // ex.expressionBeginOffset = 96\n    // ex.expressionCaretOffset = 98\n    // ex.expressionEndOffset = 98\n    // ex.name = ReferenceError\n    //\n    // FIREFOX:\n    // ex.message = qq is not defined\n    // ex.fileName = http://...\n    // ex.lineNumber = 59\n    // ex.stack = ...stack trace... (see the example below)\n    // ex.name = ReferenceError\n    //\n    // CHROME:\n    // ex.message = qq is not defined\n    // ex.name = ReferenceError\n    // ex.type = not_defined\n    // ex.arguments = ['aa']\n    // ex.stack = ...stack trace...\n    //\n    // INTERNET EXPLORER:\n    // ex.message = ...\n    // ex.name = ReferenceError\n    //\n    // OPERA:\n    // ex.message = ...message... (see the example below)\n    // ex.name = ReferenceError\n    // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\n    // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\n\n    /**\n     * Computes stack trace information from the stack property.\n     * Chrome and Gecko use this property.\n     * Added WinJS regex for Raygun4JS's offline caching support\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceFromStackProp(ex) {\n        if (!ex.stack) {\n            return null;\n        }\n\n        var chrome = /^\\s*at (.*?) ?\\(?((?:file|http|https|chrome-extension):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n            gecko = /^\\s*(.*?)(?:\\((.*?)\\))?@?((?:file|http|https|chrome):.*?):(\\d+)(?::(\\d+))?\\s*$/i,\n            winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:ms-appx|http|https):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n            lines = ex.stack.split('\\n'),\n            stack = [],\n            parts,\n            element,\n            reference = /^(.*) is undefined$/.exec(ex.message);\n\n        for (var i = 0, j = lines.length; i < j; ++i) {\n            if ((parts = gecko.exec(lines[i]))) {\n                element = {\n                    'url': parts[3],\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'args': parts[2] ? parts[2].split(',') : '',\n                    'line': +parts[4],\n                    'column': parts[5] ? +parts[5] : null\n                };\n            } else if ((parts = chrome.exec(lines[i]))) {\n                element = {\n                    'url': parts[2],\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'line': +parts[3],\n                    'column': parts[4] ? +parts[4] : null\n                };\n            } else if ((parts = winjs.exec(lines[i]))) {\n              element = {\n                'url': parts[2],\n                'func': parts[1] || UNKNOWN_FUNCTION,\n                'line': +parts[3],\n                'column': parts[4] ? +parts[4] : null\n              };\n            } else {\n                continue;\n            }\n\n            if (!element.func && element.line) {\n                element.func = guessFunctionName(element.url, element.line);\n            }\n\n            if (element.line) {\n                element.context = gatherContext(element.url, element.line);\n            }\n\n            stack.push(element);\n        }\n\n        if (stack[0] && stack[0].line && !stack[0].column && reference) {\n            stack[0].column = findSourceInLine(reference[1], stack[0].url, stack[0].line);\n        } else if (!stack[0].column && typeof ex.columnNumber !== 'undefined') {\n            // Firefox column number\n            stack[0].column = ex.columnNumber + 1;\n        }\n\n        if (!stack.length) {\n            return null;\n        }\n\n        return {\n            'mode': 'stack',\n            'name': ex.name,\n            'message': ex.message,\n            'url': document.location.href,\n            'stack': stack,\n            'useragent': navigator.userAgent\n        };\n    }\n\n    /**\n     * Computes stack trace information from the stacktrace property.\n     * Opera 10 uses this property.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceFromStacktraceProp(ex) {\n        // Access and store the stacktrace property before doing ANYTHING\n        // else to it because Opera is not very good at providing it\n        // reliably in other circumstances.\n        var stacktrace = ex.stacktrace;\n\n        var testRE = / line (\\d+), column (\\d+) in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\) in (.*):\\s*$/i,\n            lines = stacktrace.split('\\n'),\n            stack = [],\n            parts;\n\n        for (var i = 0, j = lines.length; i < j; i += 2) {\n            if ((parts = testRE.exec(lines[i]))) {\n                var element = {\n                    'line': +parts[1],\n                    'column': +parts[2],\n                    'func': parts[3] || parts[4],\n                    'args': parts[5] ? parts[5].split(',') : [],\n                    'url': parts[6]\n                };\n\n                if (!element.func && element.line) {\n                    element.func = guessFunctionName(element.url, element.line);\n                }\n                if (element.line) {\n                    try {\n                        element.context = gatherContext(element.url, element.line);\n                    } catch (exc) {}\n                }\n\n                if (!element.context) {\n                    element.context = [lines[i + 1]];\n                }\n\n                stack.push(element);\n            }\n        }\n\n        if (!stack.length) {\n            return null;\n        }\n\n        return {\n            'mode': 'stacktrace',\n            'name': ex.name,\n            'message': ex.message,\n            'url': document.location.href,\n            'stack': stack,\n            'useragent': navigator.userAgent\n        };\n    }\n\n    /**\n     * NOT TESTED.\n     * Computes stack trace information from an error message that includes\n     * the stack trace.\n     * Opera 9 and earlier use this method if the option to show stack\n     * traces is turned on in opera:config.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack information.\n     */\n    function computeStackTraceFromOperaMultiLineMessage(ex) {\n        // Opera includes a stack trace into the exception message. An example is:\n        //\n        // Statement on line 3: Undefined variable: undefinedFunc\n        // Backtrace:\n        //   Line 3 of linked script file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.js: In function zzz\n        //         undefinedFunc(a);\n        //   Line 7 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function yyy\n        //           zzz(x, y, z);\n        //   Line 3 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function xxx\n        //           yyy(a, a, a);\n        //   Line 1 of function script\n        //     try { xxx('hi'); return false; } catch(ex) { TraceKit.report(ex); }\n        //   ...\n\n        var lines = ex.message.split('\\n');\n        if (lines.length < 4) {\n            return null;\n        }\n\n        var lineRE1 = /^\\s*Line (\\d+) of linked script ((?:file|http|https)\\S+)(?:: in function (\\S+))?\\s*$/i,\n            lineRE2 = /^\\s*Line (\\d+) of inline#(\\d+) script in ((?:file|http|https)\\S+)(?:: in function (\\S+))?\\s*$/i,\n            lineRE3 = /^\\s*Line (\\d+) of function script\\s*$/i,\n            stack = [],\n            scripts = document.getElementsByTagName('script'),\n            inlineScriptBlocks = [],\n            parts,\n            i,\n            len,\n            source;\n\n        for (i in scripts) {\n            if (_has(scripts, i) && !scripts[i].src) {\n                inlineScriptBlocks.push(scripts[i]);\n            }\n        }\n\n        for (i = 2, len = lines.length; i < len; i += 2) {\n            var item = null;\n            if ((parts = lineRE1.exec(lines[i]))) {\n                item = {\n                    'url': parts[2],\n                    'func': parts[3],\n                    'line': +parts[1]\n                };\n            } else if ((parts = lineRE2.exec(lines[i]))) {\n                item = {\n                    'url': parts[3],\n                    'func': parts[4]\n                };\n                var relativeLine = (+parts[1]); // relative to the start of the <SCRIPT> block\n                var script = inlineScriptBlocks[parts[2] - 1];\n                if (script) {\n                    source = getSource(item.url);\n                    if (source) {\n                        source = source.join('\\n');\n                        var pos = source.indexOf(script.innerText);\n                        if (pos >= 0) {\n                            item.line = relativeLine + source.substring(0, pos).split('\\n').length;\n                        }\n                    }\n                }\n            } else if ((parts = lineRE3.exec(lines[i]))) {\n                var url = window.location.href.replace(/#.*$/, ''),\n                    line = parts[1];\n                var re = new RegExp(escapeCodeAsRegExpForMatchingInsideHTML(lines[i + 1]));\n                source = findSourceInUrls(re, [url]);\n                item = {\n                    'url': url,\n                    'line': source ? source.line : line,\n                    'func': ''\n                };\n            }\n\n            if (item) {\n                if (!item.func) {\n                    item.func = guessFunctionName(item.url, item.line);\n                }\n                var context = gatherContext(item.url, item.line);\n                var midline = (context ? context[Math.floor(context.length / 2)] : null);\n                if (context && midline.replace(/^\\s*/, '') === lines[i + 1].replace(/^\\s*/, '')) {\n                    item.context = context;\n                } else {\n                    // if (context) alert(\"Context mismatch. Correct midline:\\n\" + lines[i+1] + \"\\n\\nMidline:\\n\" + midline + \"\\n\\nContext:\\n\" + context.join(\"\\n\") + \"\\n\\nURL:\\n\" + item.url);\n                    item.context = [lines[i + 1]];\n                }\n                stack.push(item);\n            }\n        }\n        if (!stack.length) {\n            return null; // could not parse multiline exception message as Opera stack trace\n        }\n\n        return {\n            'mode': 'multiline',\n            'name': ex.name,\n            'message': lines[0],\n            'url': document.location.href,\n            'stack': stack,\n            'useragent': navigator.userAgent\n        };\n    }\n\n    /**\n     * Adds information about the first frame to incomplete stack traces.\n     * Safari and IE require this to get complete data on the first frame.\n     * @param {Object.<string, *>} stackInfo Stack trace information from\n     * one of the compute* methods.\n     * @param {string} url The URL of the script that caused an error.\n     * @param {(number|string)} lineNo The line number of the script that\n     * caused an error.\n     * @param {string=} message The error generated by the browser, which\n     * hopefully contains the name of the object that caused the error.\n     * @return {boolean} Whether or not the stack information was\n     * augmented.\n     */\n    function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\n        var initial = {\n            'url': url,\n            'line': lineNo\n        };\n\n        if (initial.url && initial.line) {\n            stackInfo.incomplete = false;\n\n            if (!initial.func) {\n                initial.func = guessFunctionName(initial.url, initial.line);\n            }\n\n            if (!initial.context) {\n                initial.context = gatherContext(initial.url, initial.line);\n            }\n\n            var reference = / '([^']+)' /.exec(message);\n            if (reference) {\n                initial.column = findSourceInLine(reference[1], initial.url, initial.line);\n            }\n\n            if (stackInfo.stack.length > 0) {\n                if (stackInfo.stack[0].url === initial.url) {\n                    if (stackInfo.stack[0].line === initial.line) {\n                        return false; // already in stack trace\n                    } else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {\n                        stackInfo.stack[0].line = initial.line;\n                        stackInfo.stack[0].context = initial.context;\n                        return false;\n                    }\n                }\n            }\n\n            stackInfo.stack.unshift(initial);\n            stackInfo.partial = true;\n            return true;\n        } else {\n            stackInfo.incomplete = true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Computes stack trace information by walking the arguments.caller\n     * chain at the time the exception occurred. This will cause earlier\n     * frames to be missed but is the only way to get any stack trace in\n     * Safari and IE. The top frame is restored by\n     * {@link augmentStackTraceWithInitialElement}.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceByWalkingCallerChain(ex, depth) {\n        var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i,\n            stack = [],\n            funcs = {},\n            recursion = false,\n            parts,\n            item,\n            source;\n\n        for (var curr = computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\n            if (curr === computeStackTrace || curr === TraceKit.report) {\n                // console.log('skipping internal function');\n                continue;\n            }\n\n            item = {\n                'url': null,\n                'func': UNKNOWN_FUNCTION,\n                'line': null,\n                'column': null\n            };\n\n            if (curr.name) {\n                item.func = curr.name;\n            } else if ((parts = functionName.exec(curr.toString()))) {\n                item.func = parts[1];\n            }\n\n            if (typeof item.func === 'undefined') {\n              try {\n                item.func = parts.input.substring(0, parts.input.indexOf('{'))\n              } catch (e) { }\n            }\n\n            if ((source = findSourceByFunctionBody(curr))) {\n                item.url = source.url;\n                item.line = source.line;\n\n                if (item.func === UNKNOWN_FUNCTION) {\n                    item.func = guessFunctionName(item.url, item.line);\n                }\n\n                var reference = / '([^']+)' /.exec(ex.message || ex.description);\n                if (reference) {\n                    item.column = findSourceInLine(reference[1], source.url, source.line);\n                }\n            }\n\n            if (funcs['' + curr]) {\n                recursion = true;\n            }else{\n                funcs['' + curr] = true;\n            }\n\n            stack.push(item);\n        }\n\n        if (depth) {\n            // console.log('depth is ' + depth);\n            // console.log('stack is ' + stack.length);\n            stack.splice(0, depth);\n        }\n\n        var result = {\n            'mode': 'callers',\n            'name': ex.name,\n            'message': ex.message,\n            'url': document.location.href,\n            'stack': stack,\n            'useragent': navigator.userAgent\n        };\n        augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description);\n        return result;\n    }\n\n    /**\n     * Computes a stack trace for an exception.\n     * @param {Error} ex\n     * @param {(string|number)=} depth\n     */\n    function computeStackTrace(ex, depth) {\n        var stack = null;\n        depth = (depth == null ? 0 : +depth);\n\n        try {\n            // This must be tried first because Opera 10 *destroys*\n            // its stacktrace property if you try to access the stack\n            // property first!!\n            stack = computeStackTraceFromStacktraceProp(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceFromStackProp(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceFromOperaMultiLineMessage(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        return {\n            'mode': 'failed'\n        };\n    }\n\n    /**\n     * Logs a stacktrace starting from the previous call and working down.\n     * @param {(number|string)=} depth How many frames deep to trace.\n     * @return {Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceOfCaller(depth) {\n        depth = (depth == null ? 0 : +depth) + 1; // \"+ 1\" because \"ofCaller\" should drop one frame\n        try {\n            throw new Error();\n        } catch (ex) {\n            return computeStackTrace(ex, depth + 1);\n        }\n    }\n\n    computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;\n    computeStackTrace.guessFunctionName = guessFunctionName;\n    computeStackTrace.gatherContext = gatherContext;\n    computeStackTrace.ofCaller = computeStackTraceOfCaller;\n\n    return computeStackTrace;\n}());\n\n/**\n * Extends support for global error handling for asynchronous browser\n * functions. Adopted from Closure Library's errorhandler.js\n */\nTraceKit.extendToAsynchronousCallbacks = function () {\n    var _helper = function _helper(fnName) {\n        var originalFn = window[fnName];\n        window[fnName] = function traceKitAsyncExtension() {\n            // Make a copy of the arguments\n            var args = _slice.call(arguments);\n            var originalCallback = args[0];\n            if (typeof (originalCallback) === 'function') {\n                args[0] = TraceKit.wrap(originalCallback);\n            }\n            // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\n            // also only supports 2 argument and doesn't care what \"this\" is, so we\n            // can just call the original function directly.\n            if (originalFn.apply) {\n                return originalFn.apply(this, args);\n            } else {\n                return originalFn(args[0], args[1]);\n            }\n        };\n    };\n\n    _helper('setTimeout');\n    _helper('setInterval');\n};\n\n//Default options:\nif (!TraceKit.remoteFetching) {\n  TraceKit.remoteFetching = true;\n}\nif (!TraceKit.collectWindowErrors) {\n  TraceKit.collectWindowErrors = true;\n}\nif (!TraceKit.linesOfContext || TraceKit.linesOfContext < 1) {\n  // 5 lines before, the offending line, 5 lines after\n  TraceKit.linesOfContext = 11;\n}\n\n\n\n// Export to global object\nwindow.TraceKit = TraceKit;\n\n}(window));\n","export interface IBootstrapper {\n  register():void;\n}\n\nexport interface ILastReferenceIdManager {\r\n  getLast(): string;\r\n  clearLast(): void;\r\n  setLast(eventId:string): void;\r\n}\r\n\nexport interface ILog {\r\n  info(message:string);\r\n  warn(message:string);\r\n  error(message:string);\r\n}\r\n\nexport interface IEvent {\r\n  type?:string;\r\n  source?:string;\r\n  date?:Date;\r\n  tags?:string[];\r\n  message?:string;\r\n  geo?:string;\r\n  value?:number;\r\n  data?:any;\r\n  reference_id?:string;\r\n  session_id?:string;\r\n}\r\n\n                                          \r\n\r\nexport interface IEventQueue {\r\n  enqueue(event:IEvent);\r\n  process();\r\n  suspendProcessing(durationInMinutes?:number, discardFutureQueuedItems?:boolean, clearQueue?:boolean);\r\n}\r\n\nexport interface IEnvironmentInfo {\n  processor_count?:number;\n  total_physical_memory?:number;\n  available_physical_memory?:number;\n  command_line?:string;\n  process_name?:string;\n  process_id?:string;\n  process_memory_size?:number;\n  thread_id?:string;\n  architecture?:string;\n  o_s_name?:string;\n  o_s_version?:string;\n  ip_address?:string;\n  machine_name?:string;\n  install_id?:string;\n  runtime_version?:string;\n  data?:any;\n}\n\nexport class ContextData {\n  public setException(exception:Error): void {\n    if (exception) {\n      this['@@_Exception'] = exception;\n    }\n  }\n\n  public get hasException(): boolean {\n    return !!this['@@_Exception']\n  }\n\n  public getException(): Error {\n    if (!this.hasException) {\n      return null;\n    }\n\n    return this['@@_Exception'];\n  }\n\n  public markAsUnhandledError(): void {\n    this['@@_IsUnhandledError'] = true;\n  }\n\n  public get isUnhandledError(): boolean {\n    return !!this['@@_IsUnhandledError'];\n  }\n\n  public setSubmissionMethod(method:string): void {\n    if (method && method.length > 0) {\n      this['@@_SubmissionMethod'] = method;\n    }\n  }\n\n  public getSubmissionMethod(): string {\n    if (!!this['@@_SubmissionMethod']) {\n      return null;\n    }\n\n    return this['@@_SubmissionMethod'];\n  }\n}\n\n                                                                                                                                   \r\n\r\nexport interface IEnvironmentInfoCollector {\r\n  getEnvironmentInfo(context:EventPluginContext):IEnvironmentInfo;\r\n}\r\n\n                                                                                                               \r\n\r\nexport interface IErrorParser {\r\n  parse(context:EventPluginContext, exception:Error):Promise<IError>;\r\n}\r\n\n                                                                                                                \n\nexport interface IModuleCollector {\n  getModules(context:EventPluginContext):IModule[];\n}\n\n                                                                                                                           \r\n\r\nexport interface IRequestInfoCollector {\r\n  getRequestInfo(context:EventPluginContext):IRequestInfo;\r\n}\r\n\nexport interface IStorage<T>{\r\n  save<T>(path:string, value:T): boolean;\r\n  get(searchPattern?:string, limit?:number): T[];\r\n  clear(searchPattern?:string);\r\n  count(searchPattern?:string): number;\r\n}\r\n\n                                                                                                                                                                                                                                                                                               \r\n\r\nexport interface ISubmissionClient {\r\n  submit(events:IEvent[], config:Configuration): Promise<SubmissionResponse>;\r\n  submitDescription(referenceId:string, description:IUserDescription, config:Configuration): Promise<SubmissionResponse>;\r\n  getSettings(config:Configuration): Promise<SettingsResponse>;\r\n}\r\n\nn\nexport interface IConfigurationSettings {\n  apiKey?:string;\n  serverUrl?:string;\n  environmentInfoCollector?:IEnvironmentInfoCollector;\n  errorParser?:IErrorParser;\n  lastReferenceIdManager?:ILastReferenceIdManager;\n  log?:ILog;\n  moduleCollector?:IModuleCollector;\n  requestInfoCollector?:IRequestInfoCollector;\n  submissionBatchSize?:number;\n  submissionClient?:ISubmissionClient;\n  storage?:IStorage<any>;\n  queue?:IEventQueue;\n}\n\n                                                                    \r\n\r\nexport class InMemoryLastReferenceIdManager implements ILastReferenceIdManager {\r\n  private _lastReferenceId:string = null;\r\n\r\n  getLast(): string {\r\n    return this._lastReferenceId;\r\n  }\r\n\r\n  clearLast():void {\r\n    this._lastReferenceId = null;\r\n  }\r\n\r\n  setLast(eventId:string):void {\r\n    this._lastReferenceId = eventId;\r\n  }\r\n}\r\n\n                              \n\nexport class ConsoleLog implements ILog {\n  public info(message) {\n    if (console && console.info) {\n      console.info(`[INFO] Exceptionless:${message}`)\n    }\n  }\n\n  public warn(message) {\n    if (console && console.warn) {\n      console.warn(`[Warn] Exceptionless:${message}`)\n    }\n  }\n\n  public error(message) {\n    if (console && console.error) {\n      console.error(`[Error] Exceptionless:${message}`)\n    }\n  }\n}\n\n                              \r\n\r\nexport class NullLog implements ILog {\r\n  public info(message) {}\r\n  public warn(message) {}\r\n  public error(message) {}\r\n}\r\n\nexport interface IUserInfo {\n  identity?:string;\n  name?:string;\n  data?:any;\n}\n\n                                                                                                          \r\n\r\nexport interface IEventPlugin {\r\n  priority?:number;\r\n  name?:string;\r\n  run(context:EventPluginContext): Promise<any>;\r\n}\r\n\n                                                                                                                                                                                                                                                \r\n\r\nexport class EventPluginContext {\r\n  public client:ExceptionlessClient;\r\n  public event:IEvent;\r\n  public contextData:ContextData;\r\n  public cancel:boolean = false;\r\n\r\n  constructor(client:ExceptionlessClient, event:IEvent, contextData?:ContextData) {\r\n    this.client = client;\r\n    this.event = event;\r\n    this.contextData = contextData ? contextData : new ContextData();\r\n  }\r\n\r\n  public get log(): ILog {\r\n    return this.client.config.log;\r\n  }\r\n}\r\n\nr\n\r\nexport class EventPluginManager {\r\n  public static run(context:EventPluginContext): Promise<any> {\r\n    return context.client.config.plugins.reduce((promise:Promise<any>, plugin:IEventPlugin) => {\r\n      return promise.then(() => {\r\n        return plugin.run(context);\r\n      });\r\n    }, Promise.resolve());\r\n  }\r\n\r\n  public static addDefaultPlugins(config:Configuration): void {\r\n    config.addPlugin(new ConfigurationDefaultsPlugin());\r\n    config.addPlugin(new ErrorPlugin());\r\n    config.addPlugin(new DuplicateCheckerPlugin());\r\n    config.addPlugin(new ModuleInfoPlugin());\r\n    config.addPlugin(new RequestInfoPlugin());\r\n    config.addPlugin(new EnvironmentInfoPlugin())\r\n    config.addPlugin(new SubmissionMethodPlugin());\r\n  }\r\n}\r\n\n                                                                                                                                                  \r\n\r\nexport class ReferenceIdPlugin implements IEventPlugin {\r\n  public priority:number = 20;\r\n  public name:string = 'ReferenceIdPlugin';\r\n\r\n  run(context:EventPluginContext): Promise<any> {\r\n    if ((!context.event.reference_id || context.event.reference_id.length === 0) && context.event.type === 'error') {\r\n      context.event.reference_id = Utils.guid().replace('-', '').substring(0, 10);\r\n    }\r\n\r\n    return Promise.resolve();\r\n  }\r\n}\r\n\n                                                                                                                                                                                                                                                                       \n\nexport class DefaultEventQueue implements IEventQueue {\n  private _config:Configuration;\n  private _suspendProcessingUntil:Date;\n  private _discardQueuedItemsUntil:Date;\n  private _processingQueue:boolean = false;\n  private _queueTimer:any;\n\n  constructor(config:Configuration) {\n    this._config = config;\n  }\n\n  public enqueue(event:IEvent) {\n    this.ensureQueueTimer();\n\n    if (this.areQueuedItemsDiscarded()) {\n      this._config.log.info('Queue items are currently being discarded. The event will not be queued.');\n      return;\n    }\n\n    var key = `${this.queuePath()}-${new Date().toJSON()}-${Utils.randomNumber()}`;\n    this._config.log.info(`Enqueuing event: ${key}`);\n    return this._config.storage.save(key, event);\n  }\n\n  public process() {\n    this.ensureQueueTimer();\n\n    if (this._processingQueue) {\n      return;\n    }\n\n    this._config.log.info('Processing queue...');\n    if (!this._config.enabled) {\n      this._config.log.info('Configuration is disabled. The queue will not be processed.');\n      return;\n    }\n\n    if (!this._config.apiKey || this._config.apiKey.length < 10) {\n      this._config.log.info('ApiKey is not set. The queue will not be processed.');\n      return;\n    }\n\n    this._processingQueue = true;\n\n    try {\n      var events = this._config.storage.get(this.queuePath(), this._config.submissionBatchSize);\n      if (!events || events.length == 0) {\n        this._config.log.info('There are currently no queued events to process.');\n        this._processingQueue = false;\n        return;\n      }\n\n      this._config.log.info(`Sending ${events.length} events to ${this._config.serverUrl}.`);\n      this._config.submissionClient.submit(events, this._config)\n        .then(\n        (response:SubmissionResponse) => this.processSubmissionResponse(response, events),\n        (response:SubmissionResponse) => this.processSubmissionResponse(response, events))\n        .then(() => {\n          this._config.log.info('Finished processing queue.');\n          this._processingQueue = false;\n        });\n    } catch (ex) {\n      this._config.log.error(`An error occurred while processing the queue: ${ex}`);\n      this.suspendProcessing();\n      this._processingQueue = false;\n    }\n  }\n\n  private processSubmissionResponse(response:SubmissionResponse, events:IEvent[]){\n    if (response.success) {\n      this._config.log.info(`Sent ${events.length} events to ${this._config.serverUrl}.`);\n      return;\n    }\n\n    if (response.serviceUnavailable) {\n      // You are currently over your rate limit or the servers are under stress.\n      this._config.log.error('Server returned service unavailable.');\n      this.suspendProcessing();\n      this.requeueEvents(events);\n      return;\n    }\n\n    if (response.paymentRequired) {\n      // If the organization over the rate limit then discard the event.\n      this._config.log.info('Too many events have been submitted, please upgrade your plan.');\n      this.suspendProcessing(null, true, true);\n      return;\n    }\n\n    if (response.unableToAuthenticate) {\n      // The api key was suspended or could not be authorized.\n      this._config.log.info('Unable to authenticate, please check your configuration. The event will not be submitted.');\n      this.suspendProcessing(15);\n      return;\n    }\n\n    if (response.notFound || response.badRequest) {\n      // The service end point could not be found.\n      this._config.log.error(`Error while trying to submit data: ${response.message}`);\n      this.suspendProcessing(60 * 4);\n      return;\n    }\n\n    if (response.requestEntityTooLarge) {\n      if (this._config.submissionBatchSize > 1) {\n        this._config.log.error('Event submission discarded for being too large. The event will be retried with a smaller events size.');\n        this._config.submissionBatchSize = Math.max(1, Math.round(this._config.submissionBatchSize / 1.5));\n        this.requeueEvents(events);\n      } else {\n        this._config.log.error('Event submission discarded for being too large. The event will not be submitted.');\n      }\n\n      return;\n    }\n\n    if (!response.success) {\n      this._config.log.error(`An error occurred while submitting events: ${ response.message}`);\n      this.suspendProcessing();\n      this.requeueEvents(events);\n    }\n  }\n\n  private ensureQueueTimer() : void {\n    if (!this._queueTimer) {\n      this._queueTimer = setInterval(() => this.onProcessQueue(), 10000);\n    }\n  }\n\n  private onProcessQueue(): void {\n    if (!this.isQueueProcessingSuspended() && !this._processingQueue) {\n      this.process();\n    }\n  }\n\n  public suspendProcessing(durationInMinutes?:number, discardFutureQueuedItems?:boolean, clearQueue?:boolean): void {\n    if (!durationInMinutes || durationInMinutes <= 0) {\n      durationInMinutes = 5;\n    }\n\n    this._config.log.info(`Suspending processing for ${durationInMinutes} minutes.`);\n    this._suspendProcessingUntil = new Date(new Date().getTime() + (durationInMinutes * 60000));\n\n    if (discardFutureQueuedItems) {\n      this._discardQueuedItemsUntil = new Date(new Date().getTime() + (durationInMinutes * 60000));\n    }\n\n    if (!clearQueue) {\n      return;\n    }\n\n    // Account is over the limit and we want to ensure that the sample size being sent in will contain newer errors.\n    try {\n      this._config.storage.clear(this.queuePath());\n    } catch (Exception) { }\n  }\n\n  private requeueEvents(events:IEvent[]): void {\n    this._config.log.info(`Requeuing ${events.length} events.`);\n\n    for (var index = 0; index < events.length; index++) {\n      this.enqueue(events[index]);\n    }\n  }\n\n  private isQueueProcessingSuspended(): boolean {\n    return this._suspendProcessingUntil && this._suspendProcessingUntil > new Date();\n  }\n\n  private areQueuedItemsDiscarded(): boolean {\n    return this._discardQueuedItemsUntil && this._discardQueuedItemsUntil > new Date();\n  }\n\n  private queuePath(): string {\n    return 'ex-q';\n  }\n}\n\n                                      \r\n\r\nexport class InMemoryStorage<T> implements IStorage<T> {\r\n  private _items = {};\r\n\r\n  public save<T>(path:string, value:T):boolean {\r\n    this._items[path] = value;\r\n    return true;\r\n  }\r\n\r\n  public get(searchPattern?:string, limit?:number):T[] {\r\n    var results = [];\r\n    var regex = new RegExp(searchPattern || '.*');\r\n\r\n    for (var key in this._items) {\r\n      if (results.length >= limit) {\r\n        break;\r\n      }\r\n\r\n      if (regex.test(key)) {\r\n        results.push(this._items[key]);\r\n        delete this._items[key];\r\n      }\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  public clear(searchPattern?:string) {\r\n    if (!searchPattern) {\r\n      this._items = {};\r\n      return;\r\n    }\r\n\r\n    var regex = new RegExp(searchPattern);\r\n    for (var key in this._items) {\r\n      if (regex.test(key)) {\r\n        delete this._items[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  public count(searchPattern?:string):number {\r\n    var regex = new RegExp(searchPattern || '.*');\r\n    var results = [];\r\n    for (var key in this._items) {\r\n      if (regex.test(key)) {\r\n        results.push(key);\r\n      }\r\n    }\r\n\r\n    return results.length;\r\n  }\r\n}\r\n\nexport class Utils {\r\n  public static getHashCode(source:string): string {\r\n    if (!source || source.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    var hash:number = 0;\r\n    for (var index = 0; index < source.length; index++) {\r\n      var character   = source.charCodeAt(index);\r\n      hash  = ((hash << 5) - hash) + character;\r\n      hash |= 0;\r\n    }\r\n\r\n    return hash.toString();\r\n  }\r\n\r\n  public static guid(): string {\r\n    function s4() {\r\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\r\n  }\r\n\r\n  public static merge(defaultValues:any, values:any) {\r\n    var result = {};\r\n\r\n    for (var key in defaultValues || {}) {\r\n      if (!!defaultValues[key]) {\r\n        result[key] = defaultValues[key];\r\n      }\r\n    }\r\n\r\n    for (var key in values || {}) {\r\n      if (!!values[key]) {\r\n        result[key] = values[key];\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public static parseVersion(source:string): string {\r\n    if (!source) {\r\n      return null;\r\n    }\r\n\r\n    var versionRegex = /(v?((\\d+)\\.(\\d+)(\\.(\\d+))?)(?:-([\\dA-Za-z\\-]+(?:\\.[\\dA-Za-z\\-]+)*))?(?:\\+([\\dA-Za-z\\-]+(?:\\.[\\dA-Za-z\\-]+)*))?)/;\r\n    var matches = versionRegex.exec(source);\r\n    if (matches && matches.length > 0) {\r\n      return matches[0];\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public static parseQueryString(query:string) {\r\n    if (!query || query.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    var pairs = query.split('&');\r\n    if (pairs.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    var result = {};\r\n    for (var index = 0; index < pairs.length; index++) {\r\n      var pair = pairs[index].split('=');\r\n      result[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public static randomNumber(): number {\r\n    return Math.floor(Math.random() * 9007199254740992);\r\n  }\r\n\r\n  public static stringify(data:any): string {\r\n    var cache = [];\r\n\r\n    return JSON.stringify(data, function(key, value) {\r\n      if (typeof value === 'object' && value !== null) {\r\n        if (cache.indexOf(value) !== -1) {\r\n          // Circular reference found, discard key\r\n          return;\r\n        }\r\n\r\n        cache.push(value);\r\n      }\r\n\r\n      return value;\r\n    });\r\n  }\r\n}\r\n\nn\nexport class Configuration implements IConfigurationSettings {\n  private _apiKey:string;\n  private _enabled:boolean = true;\n  private _serverUrl:string = 'https://collector.exceptionless.io';\n  private _plugins:IEventPlugin[] = [];\n\n  public environmentInfoCollector:IEnvironmentInfoCollector;\n  public errorParser:IErrorParser;\n  public lastReferenceIdManager:ILastReferenceIdManager = new InMemoryLastReferenceIdManager();\n  public log:ILog;\n  public moduleCollector:IModuleCollector;\n  public requestInfoCollector:IRequestInfoCollector;\n  public submissionBatchSize;\n  public submissionClient:ISubmissionClient;\n  public storage:IStorage<any>;\n  public queue:IEventQueue;\n  public defaultTags:string[] = [];\n  public defaultData:Object = {};\n\n  constructor(settings?:IConfigurationSettings) {\n    function inject(fn:any) {\n      return typeof fn === 'function' ? fn(this) : fn;\n    }\n\n    settings = Utils.merge(Configuration.defaults, settings);\n\n    this.log = inject(settings.log) || new NullLog();\n    this.apiKey = settings.apiKey;\n    this.serverUrl = settings.serverUrl;\n\n    this.environmentInfoCollector = inject(settings.environmentInfoCollector);\n    this.errorParser = inject(settings.errorParser);\n    this.lastReferenceIdManager = inject(settings.lastReferenceIdManager) || new InMemoryLastReferenceIdManager();\n    this.moduleCollector = inject(settings.moduleCollector);\n    this.requestInfoCollector = inject(settings.requestInfoCollector);\n    this.submissionBatchSize = inject(settings.submissionBatchSize) || 50;\n    this.submissionClient = inject(settings.submissionClient);\n    this.storage = inject(settings.storage) || new InMemoryStorage<any>();\n    this.queue = inject(settings.queue) || new DefaultEventQueue(this);\n\n    EventPluginManager.addDefaultPlugins(this);\n  }\n\n  public get apiKey(): string {\n    return this._apiKey;\n  }\n\n  public set apiKey(value:string) {\n    this._apiKey = value || null;\n    this.log.info(`apiKey set to: ${this._apiKey }`);\n  }\n\n  public get serverUrl(): string {\n    return this._serverUrl;\n  }\n\n  public set serverUrl(value:string) {\n    if (!!value && value.length > 0) {\n      this._serverUrl = value;\n      this.log.info(`serverUrl set to: ${this._serverUrl }`);\n    }\n  }\n\n  public get enabled(): boolean {\n    return this._enabled;\n  }\n\n  public get plugins(): IEventPlugin[] {\n    return this._plugins.sort((p1:IEventPlugin, p2:IEventPlugin) => {\n      return (p1.priority < p2.priority) ? -1 : (p1.priority > p2.priority) ? 1 : 0;\n    });\n  }\n\n  public addPlugin(plugin:IEventPlugin): void;\n  public addPlugin(name:string, priority:number, pluginAction:(context:EventPluginContext) => void): void;\n  public addPlugin(pluginOrName:IEventPlugin|string, priority?:number, pluginAction?:(context:EventPluginContext) => Promise<any>): void {\n    var plugin:IEventPlugin = !!pluginAction ? { name: <string>pluginOrName, priority: priority, run: pluginAction } : <IEventPlugin>pluginOrName;\n    if (!plugin || !plugin.run) {\n      this.log.error('Unable to add plugin: No run method was found.');\n      return;\n    }\n\n    if (!plugin.name) {\n      plugin.name = Utils.guid();\n    }\n\n    if (!plugin.priority) {\n      plugin.priority = 0;\n    }\n\n    var pluginExists:boolean = false;\n    for(var index = 0; index < this._plugins.length; index++) {\n      if (this._plugins[index].name === plugin.name) {\n        pluginExists = true;\n        break;\n      }\n    }\n\n    if (!pluginExists) {\n      this._plugins.push(plugin);\n    }\n  }\n\n  public removePlugin(plugin:IEventPlugin): void;\n  public removePlugin(name:string): void;\n  public removePlugin(pluginOrName:IEventPlugin|string): void {\n    var name:string = typeof pluginOrName === 'string' ? pluginOrName : pluginOrName.name;\n    if (!name) {\n      this.log.error('Unable to remove plugin: No plugin name was specified.');\n      return;\n    }\n\n    for(var index = 0; index < this._plugins.length; index++) {\n      if (this._plugins[index].name === name) {\n        this._plugins.splice(index, 1);\n        break;\n      }\n    }\n  }\n\n  public setVersion(version:string): void {\n    if (!!version && version.length > 0) {\n      this.defaultData['@version'] = version;\n    }\n  }\n\n  public setUserIdentity(userInfo:IUserInfo): void;\n  public setUserIdentity(identity:string): void;\n  public setUserIdentity(identity:string, name:string): void;\n  public setUserIdentity(userInfoOrIdentity:IUserInfo|string, name?:string): void {\n    var userInfo:IUserInfo = typeof userInfoOrIdentity !== 'string' ? userInfoOrIdentity : { identity: userInfoOrIdentity, name: name };\n    var shouldRemove:boolean = !userInfo || (!userInfo.identity && !userInfo.name);\n    if (shouldRemove) {\n      delete this.defaultData['@user'];\n    } else {\n      this.defaultData['@user'] = userInfo;\n    }\n\n    this.log.info(`user identity set to: ${shouldRemove ? 'null' : userInfo.identity}`);\n  }\n\n  public useReferenceIds(): void {\n    this.addPlugin(new ReferenceIdPlugin());\n  }\n\n  // TODO: Support a min log level.\n  public useDebugLogger(): void {\n    this.log = new ConsoleLog();\n  }\n\n  private static _defaultSettings:IConfigurationSettings = null;\n  public static get defaults() {\n    if(Configuration._defaultSettings === null) {\n      Configuration._defaultSettings = {};\n    }\n\n    return Configuration._defaultSettings;\n  }\n}\n\n                                                                                                                                                                                                                                                                                                           \n\nexport class EventBuilder {\n  public target:IEvent;\n  public client:ExceptionlessClient;\n  public pluginContextData:ContextData;\n\n  constructor(event:IEvent, client:ExceptionlessClient, pluginContextData?:ContextData) {\n    this.target = event;\n    this.client = client;\n    this.pluginContextData = pluginContextData || new ContextData();\n  }\n\n  public setType(type:string): EventBuilder {\n    if (!!type && type.length > 0) {\n      this.target.type = type;\n    }\n\n    return this;\n  }\n\n  public setSource(source:string): EventBuilder {\n    if (!!source && source.length > 0) {\n      this.target.source = source;\n    }\n\n    return this;\n  }\n\n  public setSessionId(sessionId:string): EventBuilder {\n    if (!this.isValidIdentifier(sessionId)) {\n      throw new Error(\"SessionId must contain between 8 and 100 alphanumeric or '-' characters.\");\n    }\n\n    this.target.session_id = sessionId;\n    return this;\n  }\n\n  public setReferenceId(referenceId:string): EventBuilder {\n    if (!this.isValidIdentifier(referenceId)) {\n      throw new Error(\"SessionId must contain between 8 and 100 alphanumeric or '-' characters.\");\n    }\n\n    this.target.reference_id = referenceId;\n    return this;\n  }\n\n  public setMessage(message:string): EventBuilder {\n    if (!!message && message.length > 0) {\n      this.target.message = message;\n    }\n\n    return this;\n  }\n\n  public setGeo(latitude: number, longitude: number): EventBuilder {\n    if (latitude < -90.0 || latitude > 90.0)\n      throw new Error('Must be a valid latitude value between -90.0 and 90.0.');\n    if (longitude < -180.0 || longitude > 180.0)\n      throw new Error('Must be a valid longitude value between -180.0 and 180.0.');\n\n    this.target.geo = `${latitude},${longitude}`;\n    return this;\n  }\n\n  public setUserIdentity(userInfo:IUserInfo): EventBuilder;\n  public setUserIdentity(identity:string): EventBuilder;\n  public setUserIdentity(identity:string, name:string): EventBuilder;\n  public setUserIdentity(userInfoOrIdentity:IUserInfo|string, name?:string): EventBuilder {\n    var userInfo = typeof userInfoOrIdentity !== 'string' ? userInfoOrIdentity : { identity: userInfoOrIdentity, name: name };\n    if (!userInfo || (!userInfo.identity && !userInfo.name)) {\n      return this;\n    }\n\n    this.setProperty('@user', userInfo);\n    return this;\n  }\n\n  // TODO: we to see if it makes sense to add setUserDescription.\n\n  public setValue(value:number): EventBuilder {\n    if (!!value) {\n      this.target.value = value;\n    }\n\n    return this;\n  }\n\n  public addTags(...tags:string[]): EventBuilder {\n    if (!tags || tags.length === 0) {\n      return this;\n    }\n\n    if (!this.target.tags) {\n      this.target.tags = [];\n    }\n\n    for (var index = 0; index < tags.length; index++) {\n      if (tags[index] && this.target.tags.indexOf(tags[index]) < 0) {\n        this.target.tags.push(tags[index]);\n      }\n    }\n\n    return this;\n  }\n\n  public setProperty(name:string, value:any): EventBuilder {\n    if (!name || (value === undefined || value == null)) {\n      return this;\n    }\n\n    if (!this.target.data) {\n      this.target.data = {};\n    }\n\n    this.target.data[name] = value;\n    return this;\n  }\n\n  public markAsCritical(critical:boolean): EventBuilder {\n    if (critical) {\n      this.addTags('Critical');\n    }\n\n    return this;\n  }\n\n  public addRequestInfo(request:any) {\n    if (!!request) {\n      this.pluginContextData['@request'] = request;\n    }\n\n\n    return this;\n  }\n\n  public submit(): Promise<any> {\n    return this.client.submitEvent(this.target, this.pluginContextData);\n  }\n\n  private isValidIdentifier(value:string): boolean {\n    if (!value || !value.length) {\n      return true;\n    }\n\n    if (value.length < 8 || value.length > 100) {\n      return false;\n    }\n\n    for (var index = 0; index < value.length; index++) {\n      var code = value.charCodeAt(index);\n      var isDigit = (code >= 48) && (code <= 57);\n      var isLetter = ((code >= 65) && (code <= 90)) || ((code >= 97) && (code <= 122));\n      var isMinus = code === 45;\n\n      if (!(isDigit || isLetter) && !isMinus) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n\n                                                                                  \r\n\r\nexport interface IError extends IInnerError {\r\n  modules?:IModule[]\r\n}\r\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n\nexport class ExceptionlessClient {\n  public config:Configuration;\n\n  constructor();\n  constructor(settings:IConfigurationSettings);\n  constructor(apiKey:string, serverUrl?:string);\n  constructor(settingsOrApiKey?:IConfigurationSettings|string, serverUrl?:string) {\n    // TODO: populate this in a plugin..\n    //var settings = this.getSettingsFromScriptTag() || {};\n\n    if (typeof settingsOrApiKey !== 'object') {\n      this.config = new Configuration(settingsOrApiKey);\n    } else {\n      this.config = new Configuration({ apiKey: <string>settingsOrApiKey, serverUrl: serverUrl });\n    }\n  }\n\n  public createException(exception:Error): EventBuilder {\n    var pluginContextData = new ContextData();\n    pluginContextData.setException(exception);\n    return this.createEvent(pluginContextData).setType('error');\n  }\n\n  public submitException(exception:Error): Promise<any> {\n    return this.createException(exception).submit();\n  }\n\n  public createUnhandledException(exception:Error, submissionMethod?:string): EventBuilder {\n    var builder = this.createException(exception);\n    builder.pluginContextData.markAsUnhandledError();\n    builder.pluginContextData.setSubmissionMethod(submissionMethod);\n\n    return builder;\n  }\n\n  public submitUnhandledException(exception:Error, submissionMethod?:string): Promise<any> {\n    return this.createUnhandledException(exception, submissionMethod).submit();\n  }\n\n  public createFeatureUsage(feature:string): EventBuilder {\n    return this.createEvent().setType('usage').setSource(feature);\n  }\n\n  public submitFeatureUsage(feature:string): Promise<any> {\n    return this.createFeatureUsage(feature).submit();\n  }\n\n  public createLog(message:string): EventBuilder;\n  public createLog(source:string, message:string): EventBuilder;\n  public createLog(source:string, message:string, level:string): EventBuilder;\n  public createLog(sourceOrMessage:string, message?:string, level?:string): EventBuilder {\n    var builder = this.createEvent().setType('log');\n\n    if (sourceOrMessage && message && level) {\n      builder = builder.setSource(sourceOrMessage).setMessage(message).setProperty('@level', level);\n    } else if (sourceOrMessage && message) {\n      builder = builder.setSource(sourceOrMessage).setMessage(message);\n    } else {\n      // TODO: Look into using https://www.stevefenton.co.uk/Content/Blog/Date/201304/Blog/Obtaining-A-Class-Name-At-Runtime-In-TypeScript/\n      var source = (<any>(arguments.callee.caller)).name;\n      builder = builder.setSource(source).setMessage(sourceOrMessage);\n    }\n\n    return builder;\n  }\n\n  public submitLog(message:string): Promise<any>;\n  public submitLog(source:string, message:string): Promise<any>;\n  public submitLog(source:string, message:string, level:string): Promise<any>;\n  public submitLog(sourceOrMessage:string, message?:string, level?:string): Promise<any> {\n    return this.createLog(sourceOrMessage, message, level).submit();\n  }\n\n  public createNotFound(resource:string): EventBuilder {\n    return this.createEvent().setType('404').setSource(resource);\n  }\n\n  public submitNotFound(resource:string): Promise<any> {\n    return this.createNotFound(resource).submit();\n  }\n\n  public createSessionStart(sessionId:string): EventBuilder {\n    return this.createEvent().setType('start').setSessionId(sessionId);\n  }\n\n  public submitSessionStart(sessionId:string): Promise<any> {\n    return this.createSessionStart(sessionId).submit();\n  }\n\n  public createSessionEnd(sessionId:string): EventBuilder {\n    return this.createEvent().setType('end').setSessionId(sessionId);\n  }\n\n  public submitSessionEnd(sessionId:string): Promise<any> {\n    return this.createSessionEnd(sessionId).submit();\n  }\n\n  public createEvent(pluginContextData?:ContextData): EventBuilder {\n    return new EventBuilder({ date: new Date() }, this, pluginContextData);\n  }\n\n  public submitEvent(event:IEvent, pluginContextData?:ContextData): Promise<any> {\n    if (!event) {\n      return Promise.reject(new Error('Unable to submit undefined event.'));\n    }\n\n    if (!this.config.enabled) {\n      var message:string = 'Event submission is currently disabled.';\n      this.config.log.info(message);\n      return Promise.reject(new Error(message));\n    }\n\n    var context = new EventPluginContext(this, event, pluginContextData);\n    return EventPluginManager.run(context)\n      .then(() => {\n        if (context.cancel) {\n          var message:string = `Event submission cancelled by plugin\": id=${event.reference_id} type=${event.type}`;\n          this.config.log.info(message);\n          return Promise.reject(new Error(message));\n        }\n\n        // ensure all required data\n        if (!event.type || event.type.length === 0) {\n          event.type = 'log';\n        }\n\n        if (!event.date) {\n          event.date = new Date();\n        }\n\n        this.config.log.info(`Submitting event: type=${event.type} ${!!event.reference_id ? 'refid=' + event.reference_id : ''}`);\n        this.config.queue.enqueue(event);\n\n        if (event.reference_id && event.reference_id.length > 0) {\n          this.config.log.info(`Setting last reference id \"${event.reference_id}\"`);\n          this.config.lastReferenceIdManager.setLast(event.reference_id);\n        }\n\n        return Promise.resolve();\n      })\n      .catch((error:Error) => {\n        var message:string = `Event submission cancelled. An error occurred while running the plugins: ${error && error.message ? error.message : <any>error}`;\n        this.config.log.error(message);\n        return Promise.reject(new Error(message));\n      });\n  }\n\n  public getLastReferenceId(): string {\n    return this.config.lastReferenceIdManager.getLast();\n  }\n\n  private static _instance:ExceptionlessClient = null;\n  public static get default() {\n    if(ExceptionlessClient._instance === null) {\n      ExceptionlessClient._instance = new ExceptionlessClient(null);\n    }\n    return ExceptionlessClient._instance;\n  }\n}\n\nexport interface IParameter {\r\n  data?:any;\r\n  generic_arguments?:string[];\r\n\r\n  name?:string;\r\n  type?:string;\r\n  type_namespace?:string;\r\n}\r\n\n                                          \r\n\r\nexport interface IMethod {\r\n  data?:any;\r\n  generic_arguments?:string[];\r\n  parameters?:IParameter[];\r\n\r\n  is_signature_target?:boolean;\r\n  declaring_namespace?:string;\r\n  declaring_type?:string;\r\n  name?:string;\r\n  module_id?:number;\r\n}\r\n\n                                    \r\n\r\nexport interface IStackFrame extends IMethod {\r\n  file_name:string;\r\n  line_number:number;\r\n  column:number;\r\n}\r\n\n                                                                                  \r\n\r\nexport interface IInnerError {\r\n  message?:string;\r\n  type?:string;\r\n  code?:string;\r\n  data?:any;\r\n  inner?:IInnerError\r\n  stack_trace?:IStackFrame[];\r\n  target_method?:IMethod;\r\n}\r\n\nexport interface IModule {\r\n  data?:any;\r\n\r\n  module_id?:number;\r\n  name?:string;\r\n  version?:string;\r\n  is_entry?:boolean;\r\n  created_date?:Date;\r\n  modified_date?:Date;\r\n}\r\n\n                                                                                                            \r\n\r\nexport class ConfigurationDefaultsPlugin implements IEventPlugin {\r\n  public priority:number = 10;\r\n  public name:string = 'ConfigurationDefaultsPlugin';\r\n\r\n  run(context:EventPluginContext): Promise<any> {\r\n    if (!!context.client.config.defaultTags) {\r\n      if (!context.event.tags) {\r\n        context.event.tags = [];\r\n      }\r\n\r\n      for (var index = 0; index < context.client.config.defaultTags.length; index++) {\r\n        var tag = context.client.config.defaultTags[index];\r\n        if (tag && context.client.config.defaultTags.indexOf(tag) < 0) {\r\n          context.event.tags.push(tag)\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!!context.client.config.defaultData) {\r\n      if (!context.event.data) {\r\n        context.event.data = {};\r\n      }\r\n\r\n      for (var key in context.client.config.defaultData) {\r\n        if (!!context.client.config.defaultData[key]) {\r\n          context.event.data[key] = context.client.config.defaultData[key];\r\n        }\r\n      }\r\n    }\r\n\r\n    return Promise.resolve();\r\n  }\r\n}\r\n\n                                                                                                           \n\nexport class ErrorPlugin implements IEventPlugin {\n  public priority:number = 30;\n  public name:string = 'ErrorPlugin';\n\n  run(context:EventPluginContext): Promise<any> {\n    var exception = context.contextData.getException();\n    if (exception == null) {\n      return Promise.resolve();\n    }\n\n    if (!context.event.data) {\n      context.event.data = {};\n    }\n\n    context.event.type = 'error';\n    if (!!context.event.data['@error']) {\n      return Promise.resolve();\n    }\n\n    var parser = context.client.config.errorParser;\n    if (!parser) {\n      context.cancel = true;\n      return Promise.reject(new Error('No error parser was defined. This exception will be discarded.'))\n    }\n\n    return parser.parse(context, exception);\n  }\n}\n\n                                                                                                            \r\n\r\nexport class DuplicateCheckerPlugin implements IEventPlugin {\r\n  public priority:number = 50;\r\n  public name:string = 'DuplicateCheckerPlugin';\r\n\r\n  run(context:EventPluginContext):Promise<any> {\r\n    // TODO: Implement\r\n    return Promise.resolve();\r\n  }\r\n}\r\n\n                                                                                                                                                                                                \n\nexport class ModuleInfoPlugin implements IEventPlugin {\n  public priority:number = 40;\n  public name:string = 'ModuleInfoPlugin';\n\n  run(context:EventPluginContext):Promise<any> {\n    if (!context.event.data ||\n        !context.event.data['@error'] ||\n        !!context.event.data['@error'].modules ||\n        !context.client.config.moduleCollector) {\n      return Promise.resolve();\n    }\n\n    var modules = context.client.config.moduleCollector.getModules(context);\n    if (modules && modules.length > 0) {\n      context.event.data['@error'].modules = modules;\n    }\n\n    return Promise.resolve();\n  }\n}\n\nexport interface IRequestInfo {\r\n  user_agent?:string;\r\n  http_method?:string;\r\n  is_secure?:boolean;\r\n  host?:string;\r\n  port?:number;\r\n  path?:string;\r\n  referrer?:string;\r\n  client_ip_address?:string;\r\n  cookies?:any;\r\n  post_data?:any;\r\n  query_string?:any;\r\n  data?:any\r\n}\r\n\n                                                                                                                                                                       \r\n\r\nexport class RequestInfoPlugin implements IEventPlugin {\r\n  public priority:number = 60;\r\n  public name:string = 'RequestInfoPlugin';\r\n\r\n  run(context:EventPluginContext):Promise<any> {\r\n    if (!!context.event.data && !!context.event.data['@request'] || !context.client.config.requestInfoCollector) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    if (!context.event.data) {\r\n      context.event.data = {};\r\n    }\r\n\r\n    var ri = context.client.config.requestInfoCollector.getRequestInfo(context);\r\n    if (ri) {\r\n      context.event.data['@request'] = ri;\r\n    }\r\n\r\n    return Promise.resolve();\r\n  }\r\n}\r\n\n                                                                                                                                                                               \r\n\r\nexport class EnvironmentInfoPlugin implements IEventPlugin {\r\n  public priority:number = 70;\r\n  public name:string = 'EnvironmentInfoPlugin';\r\n\r\n  run(context:EventPluginContext):Promise<any> {\r\n    if (!!context.event.data && !!context.event.data['@environment'] || !context.client.config.environmentInfoCollector) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    if (!context.event.data) {\r\n      context.event.data = {};\r\n    }\r\n\r\n    var ei = context.client.config.environmentInfoCollector.getEnvironmentInfo(context);\r\n    if (ei) {\r\n      context.event.data['@environment'] = ei;\r\n    }\r\n\r\n    return Promise.resolve();\r\n  }\r\n}\r\n\n                                                                                                            \r\n\r\nexport class SubmissionMethodPlugin implements IEventPlugin {\r\n  public priority:number = 100;\r\n  public name:string = 'SubmissionMethodPlugin';\r\n\r\n  run(context:EventPluginContext):Promise<any> {\r\n    var submissionMethod:string = context.contextData.getSubmissionMethod();\r\n    if (!!submissionMethod) {\r\n      if (!context.event.data) {\r\n        context.event.data = {};\r\n      }\r\n\r\n      context.event.data['@submission_method'] = submissionMethod;\r\n    }\r\n\r\n    return Promise.resolve();\r\n  }\r\n}\r\n\nexport interface IUserDescription {\r\n  email_address?:string;\r\n  description?:string;\r\n  data?:any;\r\n}\r\n\nexport class SettingsResponse {\r\n  success:boolean = false;\r\n  settings:any;\r\n  settingsVersion:number = -1;\r\n  message:string;\r\n  exception:any;\r\n\r\n  constructor(success:boolean, settings:any, settingsVersion:number = -1, exception:any = null, message:string = null) {\r\n    this.success = success;\r\n    this.settings = settings;\r\n    this.settingsVersion = settingsVersion;\r\n    this.exception = exception;\r\n    this.message = message;\r\n  }\r\n}\r\n\nexport class SubmissionResponse {\r\n  success:boolean = false;\r\n  badRequest:boolean = false;\r\n  serviceUnavailable:boolean = false;\r\n  paymentRequired:boolean = false;\r\n  unableToAuthenticate:boolean = false;\r\n  notFound:boolean = false;\r\n  requestEntityTooLarge:boolean = false;\r\n  statusCode:number;\r\n  message:string;\r\n\r\n  constructor(statusCode:number, message?:string) {\r\n    this.statusCode = statusCode;\r\n    this.message = message;\r\n\r\n    this.success = statusCode >= 200 && statusCode <= 299;\r\n    this.badRequest = statusCode === 400;\r\n    this.serviceUnavailable = statusCode === 503;\r\n    this.paymentRequired = statusCode === 402;\r\n    this.unableToAuthenticate = statusCode === 401 || statusCode === 403;\r\n    this.notFound = statusCode === 404;\r\n    this.requestEntityTooLarge = statusCode === 413;\r\n  }\r\n}\r\n\n                                                                                                                                                                                                             \r\n\r\nimport os = require('os');\r\n\r\nexport class NodeEnvironmentInfoCollector implements IEnvironmentInfoCollector {\r\n  public getEnvironmentInfo(context:EventPluginContext): IEnvironmentInfo {\r\n    if (!os) {\r\n      return null;\r\n    }\r\n\r\n    var environmentInfo: IEnvironmentInfo = {\r\n      processor_count: os.cpus().length,\r\n      total_physical_memory: os.totalmem(),\r\n      available_physical_memory: os.freemem(),\r\n      command_line: process.argv.join(' '),\r\n      process_name: process.title,\r\n      process_id: process.pid + '',\r\n      process_memory_size: process.memoryUsage().heapTotal,\r\n      //thread_id: '',\r\n      architecture: os.arch(),\r\n      o_s_name: os.type(),\r\n      o_s_version: os.release(),\r\n      ip_address: this.getIpAddresses(),\r\n      machine_name: os.hostname(),\r\n      //install_id: '',\r\n      runtime_version: process.version,\r\n      data: {\r\n        loadavg: os.loadavg(),\r\n        platform: os.platform(),\r\n        tmpdir: os.tmpdir(),\r\n        uptime: os.uptime()\r\n      }\r\n    };\r\n\r\n    if ((<any>os).endianness) {\r\n      environmentInfo.data.endianness = (<any>os).endianness();\r\n    }\r\n\r\n    return environmentInfo;\r\n  }\r\n\r\n  private getIpAddresses():string {\r\n    var ips = [];\r\n    var interfaces = os.networkInterfaces();\r\n    Object.keys(interfaces).forEach((name) => {\r\n      interfaces[name].forEach((iface:any) => {\r\n        if ('IPv4' === iface.family && !iface.internal) {\r\n          ips.push(iface.address);\r\n        }\r\n      });\r\n    });\r\n\r\n    return ips.join(', ');\r\n  }\r\n}\r\n\n                                                                                                                                                                                                                \n\nimport nodestacktrace = require('stack-trace');\n\nexport class NodeErrorParser implements IErrorParser {\n  public parse(context:EventPluginContext, exception:Error): Promise<IError> {\n    if (!nodestacktrace) {\n      context.cancel = true;\n      return Promise.reject(new Error('Unable to load the stack trace library. This exception will be discarded.'))\n    }\n\n    var stackFrames = nodestacktrace.parse(exception);\n    if (!stackFrames || stackFrames.length === 0) {\n      context.cancel = true;\n      return Promise.reject(new Error('Unable to parse the exceptions stack trace. This exception will be discarded.'))\n    }\n\n    var error:IError = {\n      message: exception.message,\n      stack_trace: this.getStackFrames(context, stackFrames || [])\n    };\n\n    context.event.data['@error'] = error;\n    return Promise.resolve();\n  }\n\n  private getStackFrames(context:EventPluginContext, stackFrames:any[]): IStackFrame[] {\n    var frames:IStackFrame[] = [];\n\n    for (var index = 0; index < stackFrames.length; index++) {\n      var frame = stackFrames[index];\n      frames.push({\n        name: frame.getMethodName() || frame.getFunctionName(),\n        //parameters: stackFrames[index].args,\n        file_name: frame.getFileName(),\n        line_number: frame.getLineNumber(),\n        column: frame.getColumnNumber(),\n        declaring_type: frame.getTypeName(),\n        data: {\n          is_native: frame.isNative() || (!!frame.filename && frame.filename[0] !== '/' && frame.filename[0] !== '.')\n        }\n      });\n    }\n\n    return frames;\n  }\n}\n\n                                                                                                                                                                                         \n\nexport class NodeRequestInfoCollector implements IRequestInfoCollector {\n  getRequestInfo(context:EventPluginContext):IRequestInfo {\n    if (!context.contextData['@request']) {\n      return null;\n    }\n\n    var request = context.contextData['@request'];\n    var ri:IRequestInfo = {\n      client_ip_address: request.ip,\n      user_agent: request.headers['user-agent'],\n      is_secure: request.secure,\n      http_method: request.method,\n      host: request.hostname || request.host,\n      //port: TODO,\n      path: request.path,\n      post_data: request.body,\n      //referrer: TODO,\n      cookies: this.getCookies(request),\n      query_string: request.params\n    };\n\n    return ri;\n  }\n\n  private getCookies(request): any {\n    if (!request) {\n      return null;\n    }\n\n    if (request.cookies) {\n      return request.cookies;\n    }\n\n    var result = {};\n    var cookies = (request.headers['cookie'] || '').split('; ');\n    for (var index = 0; index < cookies.length; index++) {\n      var cookie = cookies[index].split('=');\n      result[cookie[0]] = cookie[1];\n    }\n\n    return result;\n  }\n}\n\n                                                                                                                                                                                                                                                                                                                                                                                            \r\n\r\nimport http = require('http');\r\nimport https = require('https');\r\nimport url = require('url');\r\n\r\nexport class NodeSubmissionClient implements ISubmissionClient {\r\n  public submit(events:IEvent[], config:Configuration): Promise<SubmissionResponse> {\r\n    return this.sendRequest('POST', config.serverUrl, '/api/v2/events', config.apiKey, Utils.stringify(events)).then(\r\n      msg => { return new SubmissionResponse(msg.statusCode, this.getResponseMessage(msg)); },\r\n      msg => { return new SubmissionResponse(msg.statusCode || 500, this.getResponseMessage(msg)); }\r\n    );\r\n  }\r\n\r\n  public submitDescription(referenceId:string, description:IUserDescription, config:Configuration): Promise<SubmissionResponse> {\r\n    var path = `/api/v2/events/by-ref/${encodeURIComponent(referenceId)}/user-description`;\r\n    return this.sendRequest('POST', config.serverUrl, path, config.apiKey, Utils.stringify(description)).then(\r\n      msg => { return new SubmissionResponse(msg.statusCode, this.getResponseMessage(msg)); },\r\n      msg => { return new SubmissionResponse(msg.statusCode || 500, this.getResponseMessage(msg)); }\r\n    );\r\n  }\r\n\r\n  public getSettings(config:Configuration): Promise<SettingsResponse> {\r\n    return this.sendRequest('GET', config.serverUrl, '/api/v2/projects/config', config.apiKey).then(\r\n      msg => {\r\n        if (msg.statusCode !== 200 || !(<any>msg).responseText) {\r\n          return new SettingsResponse(false, null, -1, null, `Unable to retrieve configuration settings: ${this.getResponseMessage(msg)}`);\r\n        }\r\n\r\n        var settings;\r\n        try {\r\n          settings = JSON.parse((<any>msg).responseText);\r\n        } catch (e) {\r\n          config.log.error(`An error occurred while parsing the settings response text: \"${(<any>msg).responseText}\"`);\r\n        }\r\n\r\n        if (!settings || !settings.settings || !settings.version) {\r\n          return new SettingsResponse(true, null, -1, null, 'Invalid configuration settings.');\r\n        }\r\n\r\n        return new SettingsResponse(true, settings.settings, settings.version);\r\n      },\r\n      msg => {\r\n        return new SettingsResponse(false, null, -1, null, this.getResponseMessage(msg));\r\n      }\r\n    );\r\n  }\r\n\r\n  private getResponseMessage(msg:http.IncomingMessage): string {\r\n    if (!msg || (msg.statusCode >= 200 && msg.statusCode <= 299)) {\r\n      return null;\r\n    }\r\n\r\n    if (msg.statusCode === 0) {\r\n      return 'Unable to connect to server.';\r\n    }\r\n\r\n    return msg.statusMessage || (<any>msg).message;\r\n  }\r\n\r\n  private sendRequest(method:string, host:string, path:string, apiKey:string, data?:string): Promise<http.IncomingMessage> {\r\n    return new Promise((resolve, reject) => {\r\n      var parsedHost = url.parse(host);\r\n      var options:https.RequestOptions = {\r\n        auth: `client:${apiKey}`,\r\n        hostname: parsedHost.hostname,\r\n        method: method,\r\n        port: parsedHost.port && parseInt(parsedHost.port),\r\n        path: path\r\n      };\r\n\r\n      if (method === 'POST') {\r\n        options.headers = {\r\n          'Content-Type': 'application/json',\r\n          'Content-Length': data.length\r\n        }\r\n      }\r\n\r\n      var request:http.ClientRequest = https.request(options, (response:http.IncomingMessage) => {\r\n        var body = '';\r\n        response.on('data', chunk => body += chunk);\r\n        response.on('end', () => {\r\n          (<any>response).responseText = body;\r\n          resolve(response);\r\n        });\r\n      });\r\n\r\n      request.on('error', function(e) {\r\n        reject(e)\r\n      });\r\n\r\n      request.write(data);\r\n      request.end();\r\n    });\r\n  }\r\n}\r\n\nr\n\r\nexport class NodeBootstrapper implements IBootstrapper {\r\n  public register(): void {\r\n    if (!this.isNode()) {\r\n      return;\r\n    }\r\n\r\n    Configuration.defaults.environmentInfoCollector = new NodeEnvironmentInfoCollector();\r\n    Configuration.defaults.errorParser = new NodeErrorParser();\r\n    Configuration.defaults.requestInfoCollector = new NodeRequestInfoCollector();\r\n    Configuration.defaults.submissionClient = new NodeSubmissionClient();\r\n    process.on('uncaughtException', function(error) {\r\n      ExceptionlessClient.default.submitUnhandledException(error, 'uncaughtException');\r\n    });\r\n\r\n    process.on('beforeExit', (code:number) => {\r\n      var client = ExceptionlessClient.default;\r\n\r\n      var message = this.getExitCodeReason(code);\r\n      if (message !== null) {\r\n        client.submitLog('beforeExit', message, 'Error')\r\n      }\r\n\r\n      client.config.queue.process()\r\n    });\r\n  }\r\n\r\n  // exit codes: https://nodejs.org/api/process.html#process_event_exit\r\n  private getExitCodeReason(code:number): string {\r\n    if (code === 1) {\r\n      return 'Uncaught Fatal Exception';\r\n    }\r\n\r\n    if (code === 3) {\r\n      return 'Internal JavaScript Parse Error';\r\n    }\r\n\r\n    if (code === 4) {\r\n      return 'Internal JavaScript Evaluation Failure';\r\n    }\r\n\r\n    if (code === 5) {\r\n      return 'Fatal Exception';\r\n    }\r\n\r\n    if (code === 6) {\r\n      return 'Non-function Internal Exception Handler ';\r\n    }\r\n\r\n    if (code === 7) {\r\n      return 'Internal Exception Handler Run-Time Failure';\r\n    }\r\n\r\n    if (code === 8) {\r\n      return 'Uncaught Exception';\r\n    }\r\n\r\n    if (code === 9) {\r\n      return 'Invalid Argument';\r\n    }\r\n\r\n    if (code === 10) {\r\n      return 'Internal JavaScript Run-Time Failure';\r\n    }\r\n\r\n    if (code === 12) {\r\n      return 'Invalid Debug Argument';\r\n    }\r\n\r\n    if (code > 128) {\r\n      return 'Signal Exits';\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  private isNode(): boolean {\r\n    return typeof window === 'undefined' && typeof global !== 'undefined' && {}.toString.call(global) === '[object global]';\r\n  }\r\n}\r\n\n                                                                                                                                                                                                                                                                   \n\nexport class WebErrorParser implements IErrorParser {\n  public parse(context:EventPluginContext, exception:Error): Promise<IError> {\n    var stackTrace:TraceKit.StackTrace = !!context['@@_TraceKit.StackTrace']\n      ? context['@@_TraceKit.StackTrace']\n      : TraceKit.computeStackTrace(exception, 25);\n\n    if (stackTrace) {\n      var error:IError = {\n        message: stackTrace.message || exception.message,\n        stack_trace: this.getStackFrames(context, stackTrace.stack || [])\n      };\n\n      context.event.data['@error'] = error;\n\n      return Promise.resolve();\n    }\n\n    context.cancel = true;\n    return Promise.reject(new Error('Unable to parse the exceptions stack trace. This exception will be discarded.'));\n  }\n\n  private getStackFrames(context:EventPluginContext, stackFrames:TraceKit.StackFrame[]): IStackFrame[] {\n    var frames:IStackFrame[] = [];\n\n    for (var index = 0; index < stackFrames.length; index++) {\n      var frame = stackFrames[index];\n      frames.push({\n        name: frame.func || '[anonymous]',\n        parameters: this.getParameters(frame.args),\n        file_name: frame.url,\n        line_number: frame.line,\n        column: frame.column\n      });\n    }\n\n    return frames;\n  }\n\n  private getParameters(parameters:string|string[]): IParameter[] {\n    var params:string[] = (typeof parameters === 'string' ? [parameters] : parameters) || [];\n\n    var result:IParameter[] = [];\n    for (var index = 0; index < params.length; index++) {\n      result.push({ name: params[index] })\n    }\n\n    return result;\n  }\n}\n\n                                                                                                                                                                                                       \n\nexport class WebModuleCollector implements IModuleCollector {\n  public getModules(context:EventPluginContext): IModule[] {\n    if (document && document.getElementsByTagName) {\n      return null;\n    }\n\n    var modules:IModule[] = [];\n    var scripts = document.getElementsByTagName('script');\n    if (scripts && scripts.length > 0) {\n      for (var index = 0; index < scripts.length; index++) {\n        if (scripts[index].src) {\n          modules.push({\n            module_id: index,\n            name: scripts[index].src,\n            version: Utils.parseVersion(scripts[index].src)\n          });\n        } else if (!!scripts[index].innerHTML) {\n          modules.push({\n            module_id: index,\n            name: 'Script Tag',\n            version: Utils.getHashCode(scripts[index].innerHTML)\n          });\n        }\n      }\n    }\n\n    return modules;\n  }\n}\n\n                                                                                                                                                                                                                              \r\n\r\nexport class WebRequestInfoCollector implements IRequestInfoCollector {\r\n  public getRequestInfo(context:EventPluginContext): IRequestInfo {\r\n    if (!navigator || !location) {\r\n      return null;\r\n    }\r\n\r\n    var requestInfo:IRequestInfo = {\r\n      user_agent: navigator.userAgent,\r\n      is_secure: location.protocol === 'https:',\r\n      host: location.hostname,\r\n      port: location.port && location.port !== '' ? parseInt(location.port) : 80,\r\n      path: location.pathname,\r\n      //client_ip_address: 'TODO',\r\n      cookies: this.getCookies(),\r\n      query_string: Utils.parseQueryString(location.search.substring(1))\r\n    };\r\n\r\n    if (document.referrer && document.referrer !== '') {\r\n      requestInfo.referrer = document.referrer;\r\n    }\r\n  }\r\n\r\n  private getCookies(): any {\r\n    if (!document.cookie) {\r\n      return null;\r\n    }\r\n\r\n    var result = {};\r\n\r\n    var cookies = document.cookie.split(', ');\r\n    for (var index = 0; index < cookies.length; index++) {\r\n      var cookie = cookies[index].split('=');\r\n      result[cookie[0]] = cookie[1];\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\n                                                                                                                                                                                                                                                                                                                                                                                      \n\ndeclare var XDomainRequest: { new (); create(); };\n\nexport class DefaultSubmissionClient implements ISubmissionClient {\n  public submit(events:IEvent[], config:Configuration): Promise<SubmissionResponse> {\n    var url = `${config.serverUrl}/api/v2/events?access_token=${encodeURIComponent(config.apiKey)}`;\n    return this.sendRequest('POST', url, Utils.stringify(events)).then(\n        xhr => { return new SubmissionResponse(xhr.status, this.getResponseMessage(xhr)); },\n        xhr => { return new SubmissionResponse(xhr.status || 500, this.getResponseMessage(xhr)); }\n    );\n  }\n\n  public submitDescription(referenceId:string, description:IUserDescription, config:Configuration): Promise<SubmissionResponse> {\n    var url = `${config.serverUrl}/api/v2/events/by-ref/${encodeURIComponent(referenceId)}/user-description?access_token=${encodeURIComponent(config.apiKey)}`;\n    return this.sendRequest('POST', url, Utils.stringify(description)).then(\n        xhr => { return new SubmissionResponse(xhr.status, this.getResponseMessage(xhr)); },\n        xhr => { return new SubmissionResponse(xhr.status || 500, this.getResponseMessage(xhr)); }\n    );\n  }\n\n  public getSettings(config:Configuration): Promise<SettingsResponse> {\n    var url = `${config.serverUrl}/api/v2/projects/config?access_token=${encodeURIComponent(config.apiKey)}`;\n    return this.sendRequest('GET', url).then(\n        xhr => {\n        if (xhr.status !== 200) {\n          return new SettingsResponse(false, null, -1, null, `Unable to retrieve configuration settings: ${this.getResponseMessage(xhr)}`);\n        }\n\n        var settings;\n        try {\n          settings = JSON.parse(xhr.responseText);\n        } catch (e) {\n          config.log.error(`An error occurred while parsing the settings response text: \"${xhr.responseText}\"`);\n        }\n\n        if (!settings || !settings.settings || !settings.version) {\n          return new SettingsResponse(true, null, -1, null, 'Invalid configuration settings.');\n        }\n\n        return new SettingsResponse(true, settings.settings, settings.version);\n      },\n        xhr => {\n        return new SettingsResponse(false, null, -1, null, this.getResponseMessage(xhr));\n      }\n    );\n  }\n\n  private getResponseMessage(xhr:XMLHttpRequest): string {\n    if (!xhr || (xhr.status >= 200 && xhr.status <= 299)) {\n      return null;\n    }\n\n    if (xhr.status === 0) {\n      return 'Unable to connect to server.';\n    }\n\n    if (xhr.responseBody) {\n      return xhr.responseBody.message;\n    }\n\n    if (xhr.responseText) {\n      try {\n        return JSON.parse(xhr.responseText).message;\n      } catch (e) {\n        return xhr.responseText;\n      }\n    }\n\n    return  xhr.statusText;\n  }\n\n  private createRequest(method:string, url:string): XMLHttpRequest {\n    var xhr:any = new XMLHttpRequest();\n    if ('withCredentials' in xhr) {\n      xhr.open(method, url, true);\n    } else if (typeof XDomainRequest != 'undefined') {\n      xhr = new XDomainRequest();\n      xhr.open(method, url);\n    } else {\n      xhr = null;\n    }\n\n    if (xhr) {\n      if (method === 'POST' && xhr.setRequestHeader) {\n        xhr.setRequestHeader('Content-Type', 'application/json');\n      }\n\n      xhr.timeout = 10000;\n    }\n\n    return xhr;\n  }\n\n  private sendRequest(method:string, url:string, data?:string): Promise<any> {\n    var xhr = this.createRequest(method || 'POST', url);\n\n    return new Promise((resolve, reject) => {\n      if (!xhr) {\n        return reject({ status: 503, message: 'CORS not supported.' });\n      }\n\n      if ('withCredentials' in xhr) {\n        xhr.onreadystatechange = () => {\n          // xhr not ready.\n          if (xhr.readyState !== 4) {\n            return;\n          }\n\n          if (xhr.status >= 200 && xhr.status <= 299) {\n            resolve(xhr);\n          } else {\n            reject(xhr);\n          }\n        };\n      }\n\n      xhr.ontimeout = () => reject(xhr);\n      xhr.onerror = () => reject(xhr);\n      xhr.onload = () => resolve(xhr);\n\n      xhr.send(data);\n    });\n  }\n}\n\nn\nexport class WindowBootstrapper implements IBootstrapper {\n  public register(): void {\n    if (typeof window === 'undefined' || typeof document === 'undefined') {\n      return;\n    }\n\n    var configDefaults = Configuration.defaults;\n    var settings = this.getDefaultsSettingsFromScriptTag();\n    if (settings && (settings.apiKey || settings.serverUrl)) {\n      configDefaults.apiKey = settings.apiKey;\n      configDefaults.serverUrl = settings.serverUrl;\n    }\n\n    configDefaults.errorParser = new WebErrorParser();\n    configDefaults.moduleCollector = new WebModuleCollector();\n    configDefaults.requestInfoCollector = new WebRequestInfoCollector();\n    configDefaults.submissionClient = new DefaultSubmissionClient();\n\n    TraceKit.report.subscribe(this.processUnhandledException);\n    TraceKit.extendToAsynchronousCallbacks();\n    if ($ && $(document)) {\n      $(document).ajaxError(this.processJQueryAjaxError);\n    }\n  }\n\n  private getDefaultsSettingsFromScriptTag(): IConfigurationSettings {\n    if (!document || !document.getElementsByTagName) {\n      return null;\n    }\n\n    var scripts = document.getElementsByTagName('script');\n    for (var index = 0; index < scripts.length; index++) {\n      if (scripts[index].src && scripts[index].src.indexOf('/exceptionless') > -1) {\n        return Utils.parseQueryString(scripts[index].src.split('?').pop());\n      }\n    }\n    return null;\n  }\n\n  private processUnhandledException(stackTrace:TraceKit.StackTrace, options): void {\n    options == options || {};\n    var builder = ExceptionlessClient.default.createUnhandledException(new Error(stackTrace.message || options.status || 'Script error'), 'onerror');\n    builder.pluginContextData['@@_TraceKit.StackTrace'] = stackTrace;\n    builder.submit();\n  }\n\n  private processJQueryAjaxError(event, xhr, settings, error): void {\n    var client = ExceptionlessClient.default;\n    if (xhr.status === 404) {\n      client.submitNotFound(settings.url);\n    } else if (xhr.status !== 401) {\n      client.createUnhandledException(error, 'JQuery.ajaxError')\n        .setSource(settings.url)\n        .setProperty('status', xhr.status)\n        .setProperty('request', settings.data)\n        .setProperty('response', xhr.responseText && xhr.responseText.slice ? xhr.responseText.slice(0, 1024) : undefined)\n        .submit();\n    }\n  }\n}\n\ndeclare var $;\n\nn\nnew NodeBootstrapper().register();\nnew WindowBootstrapper().register();\n(<any>Error).stackTraceLimit = Infinity;\n\n",null],"sourceRoot":"/source/"}