{"version":3,"sources":["tracekit.js","/source/exceptionless.ts"],"names":["SettingsManager","SettingsManager.constructor","SettingsManager.onChanged","SettingsManager.applySavedServerSettings","SettingsManager.checkVersion","SettingsManager.updateSettings","SettingsManager.changed","SettingsManager.getSavedServerSettings","DefaultLastReferenceIdManager","DefaultLastReferenceIdManager.constructor","DefaultLastReferenceIdManager.getLast","DefaultLastReferenceIdManager.clearLast","DefaultLastReferenceIdManager.setLast","ConsoleLog","ConsoleLog.constructor","ConsoleLog.info","ConsoleLog.warn","ConsoleLog.error","ConsoleLog.log","NullLog","NullLog.constructor","NullLog.info","NullLog.warn","NullLog.error","EventPluginContext","EventPluginContext.constructor","EventPluginContext.log","EventPluginManager","EventPluginManager.constructor","EventPluginManager.run","EventPluginManager.addDefaultPlugins","HeartbeatPlugin","HeartbeatPlugin.constructor","HeartbeatPlugin.run","ReferenceIdPlugin","ReferenceIdPlugin.constructor","ReferenceIdPlugin.run","DefaultEventQueue","DefaultEventQueue.constructor","DefaultEventQueue.enqueue","DefaultEventQueue.process","DefaultEventQueue.suspendProcessing","DefaultEventQueue.areQueuedItemsDiscarded","DefaultEventQueue.ensureQueueTimer","DefaultEventQueue.isQueueProcessingSuspended","DefaultEventQueue.onProcessQueue","DefaultEventQueue.processSubmissionResponse","DefaultEventQueue.removeEvents","InMemoryStorageProvider","InMemoryStorageProvider.constructor","DefaultSubmissionClient","DefaultSubmissionClient.constructor","DefaultSubmissionClient.postEvents","DefaultSubmissionClient.postUserDescription","DefaultSubmissionClient.getSettings","DefaultSubmissionClient.createRequest","DefaultSubmissionClient.createSubmissionCallback","Utils","Utils.constructor","Utils.addRange","Utils.getHashCode","Utils.getCookies","Utils.guid","Utils.guid.s4","Utils.merge","Utils.parseVersion","Utils.parseQueryString","Utils.randomNumber","Utils.isMatch","Utils.isEmpty","Utils.stringify","Utils.stringify.stringifyImpl","Configuration","Configuration.constructor","Configuration.constructor.inject","Configuration.apiKey","Configuration.isValid","Configuration.serverUrl","Configuration.dataExclusions","Configuration.addDataExclusions","Configuration.userAgentBotPatterns","Configuration.addUserAgentBotPatterns","Configuration.plugins","Configuration.addPlugin","Configuration.removePlugin","Configuration.setVersion","Configuration.setUserIdentity","Configuration.userAgent","Configuration.useSessions","Configuration.useReferenceIds","Configuration.useLocalStorage","Configuration.useDebugLogger","Configuration.defaults","EventBuilder","EventBuilder.constructor","EventBuilder.setType","EventBuilder.setSource","EventBuilder.setReferenceId","EventBuilder.setEventReference","EventBuilder.setMessage","EventBuilder.setGeo","EventBuilder.setUserIdentity","EventBuilder.setUserDescription","EventBuilder.setManualStackingKey","EventBuilder.setValue","EventBuilder.addTags","EventBuilder.setProperty","EventBuilder.markAsCritical","EventBuilder.addRequestInfo","EventBuilder.submit","EventBuilder.isValidIdentifier","ContextData","ContextData.constructor","ContextData.setException","ContextData.hasException","ContextData.getException","ContextData.markAsUnhandledError","ContextData.isUnhandledError","ContextData.setSubmissionMethod","ContextData.getSubmissionMethod","SubmissionResponse","SubmissionResponse.constructor","ExceptionlessClient","ExceptionlessClient.constructor","ExceptionlessClient.createException","ExceptionlessClient.submitException","ExceptionlessClient.createUnhandledException","ExceptionlessClient.submitUnhandledException","ExceptionlessClient.createFeatureUsage","ExceptionlessClient.submitFeatureUsage","ExceptionlessClient.createLog","ExceptionlessClient.submitLog","ExceptionlessClient.createNotFound","ExceptionlessClient.submitNotFound","ExceptionlessClient.createSessionStart","ExceptionlessClient.submitSessionStart","ExceptionlessClient.createSessionEnd","ExceptionlessClient.submitSessionEnd","ExceptionlessClient.createSessionHeartbeat","ExceptionlessClient.submitSessionHeartbeat","ExceptionlessClient.createEvent","ExceptionlessClient.submitEvent","ExceptionlessClient.submitEvent.cancelled","ExceptionlessClient.updateUserEmailAndDescription","ExceptionlessClient.getLastReferenceId","ExceptionlessClient.default","ConfigurationDefaultsPlugin","ConfigurationDefaultsPlugin.constructor","ConfigurationDefaultsPlugin.run","ErrorPlugin","ErrorPlugin.constructor","ErrorPlugin.run","ModuleInfoPlugin","ModuleInfoPlugin.constructor","ModuleInfoPlugin.run","RequestInfoPlugin","RequestInfoPlugin.constructor","RequestInfoPlugin.run","EnvironmentInfoPlugin","EnvironmentInfoPlugin.constructor","EnvironmentInfoPlugin.run","SubmissionMethodPlugin","SubmissionMethodPlugin.constructor","SubmissionMethodPlugin.run","DuplicateCheckerPlugin","DuplicateCheckerPlugin.constructor","DuplicateCheckerPlugin.run","DuplicateCheckerPlugin.getNow","DuplicateCheckerPlugin.checkDuplicate","DuplicateCheckerPlugin.checkDuplicate.getHashCodeForError","SettingsResponse","SettingsResponse.constructor","InMemoryStorage","InMemoryStorage.constructor","InMemoryStorage.save","InMemoryStorage.get","InMemoryStorage.remove","InMemoryStorage.clear","KeyValueStorageBase","KeyValueStorageBase.constructor","KeyValueStorageBase.save","KeyValueStorageBase.get","KeyValueStorageBase.remove","KeyValueStorageBase.clear","KeyValueStorageBase.ensureIndex","KeyValueStorageBase.safeDelete","KeyValueStorageBase.createIndex","parseDate","BrowserStorage","BrowserStorage.constructor","BrowserStorage.isAvailable","BrowserStorage.write","BrowserStorage.read","BrowserStorage.readAllKeys","BrowserStorage.delete","BrowserStorage.getKey","BrowserStorage.getTimestamp","DefaultErrorParser","DefaultErrorParser.constructor","DefaultErrorParser.parse","DefaultErrorParser.parse.getParameters","DefaultErrorParser.parse.getStackFrames","DefaultModuleCollector","DefaultModuleCollector.constructor","DefaultModuleCollector.getModules","DefaultRequestInfoCollector","DefaultRequestInfoCollector.constructor","DefaultRequestInfoCollector.getRequestInfo","DefaultSubmissionAdapter","DefaultSubmissionAdapter.constructor","DefaultSubmissionAdapter.sendRequest","DefaultSubmissionAdapter.sendRequest.complete","DefaultSubmissionAdapter.sendRequest.complete.parseResponseHeaders","DefaultSubmissionAdapter.sendRequest.complete.parseResponseHeaders.trim","DefaultSubmissionAdapter.sendRequest.createRequest","BrowserStorageProvider","BrowserStorageProvider.constructor","getDefaultsSettingsFromScriptTag","processUnhandledException"],"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","file":"exceptionless.js","sourcesContent":["/*\n TraceKit - Cross browser stack traces - github.com/csnover/TraceKit\n MIT license\n*/\n\n(function(window, undefined) {\nif (!window) {\n    return;\n}\n\nvar TraceKit = {};\nvar _oldTraceKit = window.TraceKit;\n\n// global reference to slice\nvar _slice = [].slice;\nvar UNKNOWN_FUNCTION = '?';\n\n\n/**\n * _has, a better form of hasOwnProperty\n * Example: _has(MainHostObject, property) === true/false\n *\n * @param {Object} object to check property\n * @param {string} key to check\n */\nfunction _has(object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n}\n\nfunction _isUndefined(what) {\n    return typeof what === 'undefined';\n}\n\n/**\n * TraceKit.noConflict: Export TraceKit out to another variable\n * Example: var TK = TraceKit.noConflict()\n */\nTraceKit.noConflict = function noConflict() {\n    window.TraceKit = _oldTraceKit;\n    return TraceKit;\n};\n\n/**\n * TraceKit.wrap: Wrap any function in a TraceKit reporter\n * Example: func = TraceKit.wrap(func);\n *\n * @param {Function} func Function to be wrapped\n * @return {Function} The wrapped func\n */\nTraceKit.wrap = function traceKitWrapper(func) {\n    function wrapped() {\n        try {\n            return func.apply(this, arguments);\n        } catch (e) {\n            TraceKit.report(e);\n            throw e;\n        }\n    }\n    return wrapped;\n};\n\n/**\n * TraceKit.report: cross-browser processing of unhandled exceptions\n *\n * Syntax:\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\n *   TraceKit.report.unsubscribe(function(stackInfo) { ... })\n *   TraceKit.report(exception)\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\n *\n * Supports:\n *   - Firefox: full stack trace with line numbers, plus column number\n *              on top frame; column number is not guaranteed\n *   - Opera:   full stack trace with line and column numbers\n *   - Chrome:  full stack trace with line and column numbers\n *   - Safari:  line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *   - IE:      line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *\n * In theory, TraceKit should work on all of the following versions:\n *   - IE5.5+ (only 8.0 tested)\n *   - Firefox 0.9+ (only 3.5+ tested)\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\n *     Exceptions Have Stacktrace to be enabled in opera:config)\n *   - Safari 3+ (only 4+ tested)\n *   - Chrome 1+ (only 5+ tested)\n *   - Konqueror 3.5+ (untested)\n *\n * Requires TraceKit.computeStackTrace.\n *\n * Tries to catch all unhandled exceptions and report them to the\n * subscribed handlers. Please note that TraceKit.report will rethrow the\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\n * If the exception does not reach the top of the browser, you will only\n * get a stack trace from the point where TraceKit.report was called.\n *\n * Handlers receive a stackInfo object as described in the\n * TraceKit.computeStackTrace docs.\n */\nTraceKit.report = (function reportModuleWrapper() {\n    var handlers = [],\n        lastArgs = null,\n        lastException = null,\n        lastExceptionStack = null;\n\n    /**\n     * Add a crash handler.\n     * @param {Function} handler\n     */\n    function subscribe(handler) {\n        installGlobalHandler();\n        handlers.push(handler);\n    }\n\n    /**\n     * Remove a crash handler.\n     * @param {Function} handler\n     */\n    function unsubscribe(handler) {\n        for (var i = handlers.length - 1; i >= 0; --i) {\n            if (handlers[i] === handler) {\n                handlers.splice(i, 1);\n            }\n        }\n    }\n\n    /**\n     * Dispatch stack information to all handlers.\n     * @param {Object.<string, *>} stack\n     */\n    function notifyHandlers(stack, isWindowError) {\n        var exception = null;\n        if (isWindowError && !TraceKit.collectWindowErrors) {\n          return;\n        }\n        for (var i in handlers) {\n            if (_has(handlers, i)) {\n                try {\n                    handlers[i].apply(null, [stack].concat(_slice.call(arguments, 2)));\n                } catch (inner) {\n                    exception = inner;\n                }\n            }\n        }\n\n        if (exception) {\n            throw exception;\n        }\n    }\n\n    var _oldOnerrorHandler, _onErrorHandlerInstalled;\n\n    /**\n     * Ensures all global unhandled exceptions are recorded.\n     * Supported by Gecko and IE.\n     * @param {string} message Error message.\n     * @param {string} url URL of script that generated the exception.\n     * @param {(number|string)} lineNo The line number at which the error\n     * occurred.\n     * @param {?(number|string)} columnNo The column number at which the error\n     * occurred.\n     * @param {?Error} errorObj The actual Error object.\n     */\n    function traceKitWindowOnError(message, url, lineNo, columnNo, errorObj) {\n        var stack = null;\n\n        if (lastExceptionStack) {\n            TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);\n    \t    processLastException();\n\t    } else if (errorObj) {\n            stack = TraceKit.computeStackTrace(errorObj);\n            notifyHandlers(stack, true);\n        } else {\n            var location = {\n              'url': url,\n              'line': lineNo,\n              'column': columnNo\n            };\n            location.func = TraceKit.computeStackTrace.guessFunctionName(location.url, location.line);\n            location.context = TraceKit.computeStackTrace.gatherContext(location.url, location.line);\n            stack = {\n              'mode': 'onerror',\n              'message': message,\n              'stack': [location]\n            };\n\n            notifyHandlers(stack, true);\n        }\n\n        if (_oldOnerrorHandler) {\n            return _oldOnerrorHandler.apply(this, arguments);\n        }\n\n        return false;\n    }\n\n    function installGlobalHandler () {\n        if (_onErrorHandlerInstalled === true) {\n            return;\n        }\n        _oldOnerrorHandler = window.onerror;\n        window.onerror = traceKitWindowOnError;\n        _onErrorHandlerInstalled = true;\n    }\n\n    function processLastException() {\n        var _lastExceptionStack = lastExceptionStack,\n            _lastArgs = lastArgs;\n        lastArgs = null;\n        lastExceptionStack = null;\n        lastException = null;\n        notifyHandlers.apply(null, [_lastExceptionStack, false].concat(_lastArgs));\n    }\n    /**\n     * Reports an unhandled Error to TraceKit.\n     * @param {Error} ex\n     */\n    function report(ex) {\n        if (lastExceptionStack) {\n            if (lastException === ex) {\n                return; // already caught by an inner catch block, ignore\n            } else {\n              processLastException();\n            }\n        }\n\n        var stack = TraceKit.computeStackTrace(ex);\n        lastExceptionStack = stack;\n        lastException = ex;\n        lastArgs = _slice.call(arguments, 1);\n\n        // If the stack trace is incomplete, wait for 2 seconds for\n        // slow slow IE to see if onerror occurs or not before reporting\n        // this exception; otherwise, we will end up with an incomplete\n        // stack trace\n        window.setTimeout(function () {\n            if (lastException === ex) {\n                processLastException();\n            }\n        }, (stack.incomplete ? 2000 : 0));\n\n        throw ex; // re-throw to propagate to the top level (and cause window.onerror)\n    }\n\n    report.subscribe = subscribe;\n    report.unsubscribe = unsubscribe;\n    return report;\n}());\n\n/**\n * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript\n *\n * Syntax:\n *   s = TraceKit.computeStackTrace.ofCaller([depth])\n *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)\n * Returns:\n *   s.name              - exception name\n *   s.message           - exception message\n *   s.stack[i].url      - JavaScript or HTML file URL\n *   s.stack[i].func     - function name, or empty for anonymous functions (if guessing did not work)\n *   s.stack[i].args     - arguments passed to the function, if known\n *   s.stack[i].line     - line number, if known\n *   s.stack[i].column   - column number, if known\n *   s.stack[i].context  - an array of source code lines; the middle element corresponds to the correct line#\n *   s.mode              - 'stack', 'stacktrace', 'multiline', 'callers', 'onerror', or 'failed' -- method used to collect the stack trace\n *\n * Supports:\n *   - Firefox:  full stack trace with line numbers and unreliable column\n *               number on top frame\n *   - Opera 10: full stack trace with line and column numbers\n *   - Opera 9-: full stack trace with line numbers\n *   - Chrome:   full stack trace with line and column numbers\n *   - Safari:   line and column number for the topmost stacktrace element\n *               only\n *   - IE:       no line numbers whatsoever\n *\n * Tries to guess names of anonymous functions by looking for assignments\n * in the source code. In IE and Safari, we have to guess source file names\n * by searching for function bodies inside all page scripts. This will not\n * work for scripts that are loaded cross-domain.\n * Here be dragons: some function names may be guessed incorrectly, and\n * duplicate functions may be mismatched.\n *\n * TraceKit.computeStackTrace should only be used for tracing purposes.\n * Logging of unhandled exceptions should be done with TraceKit.report,\n * which builds on top of TraceKit.computeStackTrace and provides better\n * IE support by utilizing the window.onerror event to retrieve information\n * about the top of the stack.\n *\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\n * so computeStackTrace instead walks its *own* chain of callers.\n * This means that:\n *  * in Safari, some methods may be missing from the stack trace;\n *  * in IE, the topmost function in the stack trace will always be the\n *    caller of computeStackTrace.\n *\n * This is okay for tracing (because you are likely to be calling\n * computeStackTrace from the function you want to be the topmost element\n * of the stack trace anyway), but not okay for logging unhandled\n * exceptions (because your catch block will likely be far away from the\n * inner function that actually caused the exception).\n *\n * Tracing example:\n *     function trace(message) {\n *         var stackInfo = TraceKit.computeStackTrace.ofCaller();\n *         var data = message + \"\\n\";\n *         for(var i in stackInfo.stack) {\n *             var item = stackInfo.stack[i];\n *             data += (item.func || '[anonymous]') + \"() in \" + item.url + \":\" + (item.line || '0') + \"\\n\";\n *         }\n *         if (window.console)\n *             console.info(data);\n *         else\n *             alert(data);\n *     }\n */\nTraceKit.computeStackTrace = (function computeStackTraceWrapper() {\n    var debug = false,\n        sourceCache = {};\n\n    /**\n     * Attempts to retrieve source code via XMLHttpRequest, which is used\n     * to look up anonymous function names.\n     * @param {string} url URL of source code.\n     * @return {string} Source contents.\n     */\n    function loadSource(url) {\n        if (!TraceKit.remoteFetching) { //Only attempt request if remoteFetching is on.\n            return '';\n        }\n        try {\n            var getXHR = function() {\n                try {\n                    return new window.XMLHttpRequest();\n                } catch (e) {\n                    // explicitly bubble up the exception if not found\n                    return new window.ActiveXObject('Microsoft.XMLHTTP');\n                }\n            };\n\n            var request = getXHR();\n            request.open('GET', url, false);\n            request.send('');\n            return request.responseText;\n        } catch (e) {\n            return '';\n        }\n    }\n\n    /**\n     * Retrieves source code from the source code cache.\n     * @param {string} url URL of source code.\n     * @return {Array.<string>} Source contents.\n     */\n    function getSource(url) {\n        if (typeof url !== 'string') {\n            return [];\n        }\n\n        if (!_has(sourceCache, url)) {\n            // URL needs to be able to fetched within the acceptable domain.  Otherwise,\n            // cross-domain errors will be triggered.\n            var source = '';\n            var domain = '';\n            try { domain = document.domain; } catch (e) {}\n            if (url.indexOf(domain) !== -1) {\n                source = loadSource(url);\n            }\n            sourceCache[url] = source ? source.split('\\n') : [];\n        }\n\n        return sourceCache[url];\n    }\n\n    /**\n     * Tries to use an externally loaded copy of source code to determine\n     * the name of a function by looking at the name of the variable it was\n     * assigned to, if any.\n     * @param {string} url URL of source code.\n     * @param {(string|number)} lineNo Line number in source code.\n     * @return {string} The function name, if discoverable.\n     */\n    function guessFunctionName(url, lineNo) {\n        var reFunctionArgNames = /function ([^(]*)\\(([^)]*)\\)/,\n            reGuessFunction = /['\"]?([0-9A-Za-z$_]+)['\"]?\\s*[:=]\\s*(function|eval|new Function)/,\n            line = '',\n            maxLines = 10,\n            source = getSource(url),\n            m;\n\n        if (!source.length) {\n            return UNKNOWN_FUNCTION;\n        }\n\n        // Walk backwards from the first line in the function until we find the line which\n        // matches the pattern above, which is the function definition\n        for (var i = 0; i < maxLines; ++i) {\n            line = source[lineNo - i] + line;\n\n            if (!_isUndefined(line)) {\n                if ((m = reGuessFunction.exec(line))) {\n                    return m[1];\n                } else if ((m = reFunctionArgNames.exec(line))) {\n                    return m[1];\n                }\n            }\n        }\n\n        return UNKNOWN_FUNCTION;\n    }\n\n    /**\n     * Retrieves the surrounding lines from where an exception occurred.\n     * @param {string} url URL of source code.\n     * @param {(string|number)} line Line number in source code to centre\n     * around for context.\n     * @return {?Array.<string>} Lines of source code.\n     */\n    function gatherContext(url, line) {\n        var source = getSource(url);\n\n        if (!source.length) {\n            return null;\n        }\n\n        var context = [],\n            // linesBefore & linesAfter are inclusive with the offending line.\n            // if linesOfContext is even, there will be one extra line\n            //   *before* the offending line.\n            linesBefore = Math.floor(TraceKit.linesOfContext / 2),\n            // Add one extra line if linesOfContext is odd\n            linesAfter = linesBefore + (TraceKit.linesOfContext % 2),\n            start = Math.max(0, line - linesBefore - 1),\n            end = Math.min(source.length, line + linesAfter - 1);\n\n        line -= 1; // convert to 0-based index\n\n        for (var i = start; i < end; ++i) {\n            if (!_isUndefined(source[i])) {\n                context.push(source[i]);\n            }\n        }\n\n        return context.length > 0 ? context : null;\n    }\n\n    /**\n     * Escapes special characters, except for whitespace, in a string to be\n     * used inside a regular expression as a string literal.\n     * @param {string} text The string.\n     * @return {string} The escaped string literal.\n     */\n    function escapeRegExp(text) {\n        return text.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#]/g, '\\\\$&');\n    }\n\n    /**\n     * Escapes special characters in a string to be used inside a regular\n     * expression as a string literal. Also ensures that HTML entities will\n     * be matched the same as their literal friends.\n     * @param {string} body The string.\n     * @return {string} The escaped string.\n     */\n    function escapeCodeAsRegExpForMatchingInsideHTML(body) {\n        return escapeRegExp(body).replace('<', '(?:<|&lt;)').replace('>', '(?:>|&gt;)').replace('&', '(?:&|&amp;)').replace('\"', '(?:\"|&quot;)').replace(/\\s+/g, '\\\\s+');\n    }\n\n    /**\n     * Determines where a code fragment occurs in the source code.\n     * @param {RegExp} re The function definition.\n     * @param {Array.<string>} urls A list of URLs to search.\n     * @return {?Object.<string, (string|number)>} An object containing\n     * the url, line, and column number of the defined function.\n     */\n    function findSourceInUrls(re, urls) {\n        var source, m;\n        for (var i = 0, j = urls.length; i < j; ++i) {\n            // console.log('searching', urls[i]);\n            if ((source = getSource(urls[i])).length) {\n                source = source.join('\\n');\n                if ((m = re.exec(source))) {\n                    // console.log('Found function in ' + urls[i]);\n\n                    return {\n                        'url': urls[i],\n                        'line': source.substring(0, m.index).split('\\n').length,\n                        'column': m.index - source.lastIndexOf('\\n', m.index) - 1\n                    };\n                }\n            }\n        }\n\n        // console.log('no match');\n\n        return null;\n    }\n\n    /**\n     * Determines at which column a code fragment occurs on a line of the\n     * source code.\n     * @param {string} fragment The code fragment.\n     * @param {string} url The URL to search.\n     * @param {(string|number)} line The line number to examine.\n     * @return {?number} The column number.\n     */\n    function findSourceInLine(fragment, url, line) {\n        var source = getSource(url),\n            re = new RegExp('\\\\b' + escapeRegExp(fragment) + '\\\\b'),\n            m;\n\n        line -= 1;\n\n        if (source && source.length > line && (m = re.exec(source[line]))) {\n            return m.index;\n        }\n\n        return null;\n    }\n\n    /**\n     * Determines where a function was defined within the source code.\n     * @param {(Function|string)} func A function reference or serialized\n     * function definition.\n     * @return {?Object.<string, (string|number)>} An object containing\n     * the url, line, and column number of the defined function.\n     */\n    function findSourceByFunctionBody(func) {\n        if (_isUndefined(document)) {\n            return;\n        }\n\n        var urls = [window.location.href],\n            scripts = document.getElementsByTagName('script'),\n            body,\n            code = '' + func,\n            codeRE = /^function(?:\\s+([\\w$]+))?\\s*\\(([\\w\\s,]*)\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/,\n            eventRE = /^function on([\\w$]+)\\s*\\(event\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/,\n            re,\n            parts,\n            result;\n\n        for (var i = 0; i < scripts.length; ++i) {\n            var script = scripts[i];\n            if (script.src) {\n                urls.push(script.src);\n            }\n        }\n\n        if (!(parts = codeRE.exec(code))) {\n            re = new RegExp(escapeRegExp(code).replace(/\\s+/g, '\\\\s+'));\n        }\n\n        // not sure if this is really necessary, but I don’t have a test\n        // corpus large enough to confirm that and it was in the original.\n        else {\n            var name = parts[1] ? '\\\\s+' + parts[1] : '',\n                args = parts[2].split(',').join('\\\\s*,\\\\s*');\n\n            body = escapeRegExp(parts[3]).replace(/;$/, ';?'); // semicolon is inserted if the function ends with a comment.replace(/\\s+/g, '\\\\s+');\n            re = new RegExp('function' + name + '\\\\s*\\\\(\\\\s*' + args + '\\\\s*\\\\)\\\\s*{\\\\s*' + body + '\\\\s*}');\n        }\n\n        // look for a normal function definition\n        if ((result = findSourceInUrls(re, urls))) {\n            return result;\n        }\n\n        // look for an old-school event handler function\n        if ((parts = eventRE.exec(code))) {\n            var event = parts[1];\n            body = escapeCodeAsRegExpForMatchingInsideHTML(parts[2]);\n\n            // look for a function defined in HTML as an onXXX handler\n            re = new RegExp('on' + event + '=[\\\\\\'\"]\\\\s*' + body + '\\\\s*[\\\\\\'\"]', 'i');\n\n            if ((result = findSourceInUrls(re, urls[0]))) {\n                return result;\n            }\n\n            // look for ???\n            re = new RegExp(body);\n\n            if ((result = findSourceInUrls(re, urls))) {\n                return result;\n            }\n        }\n\n        return null;\n    }\n\n    // Contents of Exception in various browsers.\n    //\n    // SAFARI:\n    // ex.message = Can't find variable: qq\n    // ex.line = 59\n    // ex.sourceId = 580238192\n    // ex.sourceURL = http://...\n    // ex.expressionBeginOffset = 96\n    // ex.expressionCaretOffset = 98\n    // ex.expressionEndOffset = 98\n    // ex.name = ReferenceError\n    //\n    // FIREFOX:\n    // ex.message = qq is not defined\n    // ex.fileName = http://...\n    // ex.lineNumber = 59\n    // ex.columnNumber = 69\n    // ex.stack = ...stack trace... (see the example below)\n    // ex.name = ReferenceError\n    //\n    // CHROME:\n    // ex.message = qq is not defined\n    // ex.name = ReferenceError\n    // ex.type = not_defined\n    // ex.arguments = ['aa']\n    // ex.stack = ...stack trace...\n    //\n    // INTERNET EXPLORER:\n    // ex.message = ...\n    // ex.name = ReferenceError\n    //\n    // OPERA:\n    // ex.message = ...message... (see the example below)\n    // ex.name = ReferenceError\n    // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\n    // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\n\n    /**\n     * Computes stack trace information from the stack property.\n     * Chrome and Gecko use this property.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceFromStackProp(ex) {\n        if (!ex.stack) {\n            return null;\n        }\n\n        var chrome = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i,\n            gecko = /^\\s*(.*?)(?:\\((.*?)\\))?@?((?:file|https?|blob|chrome|\\[).*?)(?::(\\d+))?(?::(\\d+))?\\s*$/i,\n            winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:ms-appx|https?|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n            lines = ex.stack.split('\\n'),\n            stack = [],\n            parts,\n            element,\n            reference = /^(.*) is undefined$/.exec(ex.message);\n\n        for (var i = 0, j = lines.length; i < j; ++i) {\n            if ((parts = chrome.exec(lines[i]))) {\n                var isNative = parts[2] && parts[2].indexOf('native') !== -1;\n                element = {\n                    'url': !isNative ? parts[2] : null,\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'args': isNative ? [parts[2]] : [],\n                    'line': parts[3] ? +parts[3] : null,\n                    'column': parts[4] ? +parts[4] : null\n                };\n            } else if ( parts = winjs.exec(lines[i]) ) {\n                element = {\n                    'url': parts[2],\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'args': [],\n                    'line': +parts[3],\n                    'column': parts[4] ? +parts[4] : null\n                };\n            } else if ((parts = gecko.exec(lines[i]))) {\n                element = {\n                    'url': parts[3],\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'args': parts[2] ? parts[2].split(',') : [],\n                    'line': parts[4] ? +parts[4] : null,\n                    'column': parts[5] ? +parts[5] : null\n                };\n            } else {\n                continue;\n            }\n\n            if (!element.func && element.line) {\n                element.func = guessFunctionName(element.url, element.line);\n            }\n\n            if (element.line) {\n                element.context = gatherContext(element.url, element.line);\n            }\n\n            stack.push(element);\n        }\n\n        if (!stack.length) {\n            return null;\n        }\n\n        if (stack[0] && stack[0].line && !stack[0].column && reference) {\n            stack[0].column = findSourceInLine(reference[1], stack[0].url, stack[0].line);\n        } else if (!stack[0].column && !_isUndefined(ex.columnNumber)) {\n            // FireFox uses this awesome columnNumber property for its top frame\n            // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n            // so adding 1\n            stack[0].column = ex.columnNumber + 1;\n        }\n\n        return {\n            'mode': 'stack',\n            'name': ex.name,\n            'message': ex.message,\n            'stack': stack\n        };\n    }\n\n    /**\n     * Computes stack trace information from the stacktrace property.\n     * Opera 10+ uses this property.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceFromStacktraceProp(ex) {\n        // Access and store the stacktrace property before doing ANYTHING\n        // else to it because Opera is not very good at providing it\n        // reliably in other circumstances.\n        var stacktrace = ex.stacktrace;\n        if (!stacktrace) {\n            return;\n        }\n\n        var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i,\n            opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i,\n            lines = stacktrace.split('\\n'),\n            stack = [],\n            parts;\n\n        for (var line = 0; line < lines.length; line += 2) {\n            var element = null;\n            if ((parts = opera10Regex.exec(lines[line]))) {\n                element = {\n                    'url': parts[2],\n                    'line': +parts[1],\n                    'column': null,\n                    'func': parts[3],\n                    'args':[]\n                };\n            } else if ((parts = opera11Regex.exec(lines[line]))) {\n                element = {\n                    'url': parts[6],\n                    'line': +parts[1],\n                    'column': +parts[2],\n                    'func': parts[3] || parts[4],\n                    'args': parts[5] ? parts[5].split(',') : []\n                };\n            }\n\n            if (element) {\n                if (!element.func && element.line) {\n                    element.func = guessFunctionName(element.url, element.line);\n                }\n                if (element.line) {\n                    try {\n                        element.context = gatherContext(element.url, element.line);\n                    } catch (exc) {}\n                }\n\n                if (!element.context) {\n                    element.context = [lines[line + 1]];\n                }\n\n                stack.push(element);\n            }\n        }\n\n        if (!stack.length) {\n            return null;\n        }\n\n        return {\n            'mode': 'stacktrace',\n            'name': ex.name,\n            'message': ex.message,\n            'stack': stack\n        };\n    }\n\n    /**\n     * NOT TESTED.\n     * Computes stack trace information from an error message that includes\n     * the stack trace.\n     * Opera 9 and earlier use this method if the option to show stack\n     * traces is turned on in opera:config.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack information.\n     */\n    function computeStackTraceFromOperaMultiLineMessage(ex) {\n        // TODO: Clean this function up\n        // Opera includes a stack trace into the exception message. An example is:\n        //\n        // Statement on line 3: Undefined variable: undefinedFunc\n        // Backtrace:\n        //   Line 3 of linked script file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.js: In function zzz\n        //         undefinedFunc(a);\n        //   Line 7 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function yyy\n        //           zzz(x, y, z);\n        //   Line 3 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function xxx\n        //           yyy(a, a, a);\n        //   Line 1 of function script\n        //     try { xxx('hi'); return false; } catch(ex) { TraceKit.report(ex); }\n        //   ...\n\n        var lines = ex.message.split('\\n');\n        if (lines.length < 4) {\n            return null;\n        }\n\n        var lineRE1 = /^\\s*Line (\\d+) of linked script ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i,\n            lineRE2 = /^\\s*Line (\\d+) of inline#(\\d+) script in ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i,\n            lineRE3 = /^\\s*Line (\\d+) of function script\\s*$/i,\n            stack = [],\n            scripts = document.getElementsByTagName('script'),\n            inlineScriptBlocks = [],\n            parts;\n\n        for (var s in scripts) {\n            if (_has(scripts, s) && !scripts[s].src) {\n                inlineScriptBlocks.push(scripts[s]);\n            }\n        }\n\n        for (var line = 2; line < lines.length; line += 2) {\n            var item = null;\n            if ((parts = lineRE1.exec(lines[line]))) {\n                item = {\n                    'url': parts[2],\n                    'func': parts[3],\n                    'args': [],\n                    'line': +parts[1],\n                    'column': null\n                };\n            } else if ((parts = lineRE2.exec(lines[line]))) {\n                item = {\n                    'url': parts[3],\n                    'func': parts[4],\n                    'args': [],\n                    'line': +parts[1],\n                    'column': null // TODO: Check to see if inline#1 (+parts[2]) points to the script number or column number.\n                };\n                var relativeLine = (+parts[1]); // relative to the start of the <SCRIPT> block\n                var script = inlineScriptBlocks[parts[2] - 1];\n                if (script) {\n                    var source = getSource(item.url);\n                    if (source) {\n                        source = source.join('\\n');\n                        var pos = source.indexOf(script.innerText);\n                        if (pos >= 0) {\n                            item.line = relativeLine + source.substring(0, pos).split('\\n').length;\n                        }\n                    }\n                }\n            } else if ((parts = lineRE3.exec(lines[line]))) {\n                var url = window.location.href.replace(/#.*$/, '');\n                var re = new RegExp(escapeCodeAsRegExpForMatchingInsideHTML(lines[line + 1]));\n                var src = findSourceInUrls(re, [url]);\n                item = {\n                    'url': url,\n                    'func': '',\n                    'args': [],\n                    'line': src ? src.line : parts[1],\n                    'column': null\n                };\n            }\n\n            if (item) {\n                if (!item.func) {\n                    item.func = guessFunctionName(item.url, item.line);\n                }\n                var context = gatherContext(item.url, item.line);\n                var midline = (context ? context[Math.floor(context.length / 2)] : null);\n                if (context && midline.replace(/^\\s*/, '') === lines[line + 1].replace(/^\\s*/, '')) {\n                    item.context = context;\n                } else {\n                    // if (context) alert(\"Context mismatch. Correct midline:\\n\" + lines[i+1] + \"\\n\\nMidline:\\n\" + midline + \"\\n\\nContext:\\n\" + context.join(\"\\n\") + \"\\n\\nURL:\\n\" + item.url);\n                    item.context = [lines[line + 1]];\n                }\n                stack.push(item);\n            }\n        }\n        if (!stack.length) {\n            return null; // could not parse multiline exception message as Opera stack trace\n        }\n\n        return {\n            'mode': 'multiline',\n            'name': ex.name,\n            'message': lines[0],\n            'stack': stack\n        };\n    }\n\n    /**\n     * Adds information about the first frame to incomplete stack traces.\n     * Safari and IE require this to get complete data on the first frame.\n     * @param {Object.<string, *>} stackInfo Stack trace information from\n     * one of the compute* methods.\n     * @param {string} url The URL of the script that caused an error.\n     * @param {(number|string)} lineNo The line number of the script that\n     * caused an error.\n     * @param {string=} message The error generated by the browser, which\n     * hopefully contains the name of the object that caused the error.\n     * @return {boolean} Whether or not the stack information was\n     * augmented.\n     */\n    function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\n        var initial = {\n            'url': url,\n            'line': lineNo\n        };\n\n        if (initial.url && initial.line) {\n            stackInfo.incomplete = false;\n\n            if (!initial.func) {\n                initial.func = guessFunctionName(initial.url, initial.line);\n            }\n\n            if (!initial.context) {\n                initial.context = gatherContext(initial.url, initial.line);\n            }\n\n            var reference = / '([^']+)' /.exec(message);\n            if (reference) {\n                initial.column = findSourceInLine(reference[1], initial.url, initial.line);\n            }\n\n            if (stackInfo.stack.length > 0) {\n                if (stackInfo.stack[0].url === initial.url) {\n                    if (stackInfo.stack[0].line === initial.line) {\n                        return false; // already in stack trace\n                    } else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {\n                        stackInfo.stack[0].line = initial.line;\n                        stackInfo.stack[0].context = initial.context;\n                        return false;\n                    }\n                }\n            }\n\n            stackInfo.stack.unshift(initial);\n            stackInfo.partial = true;\n            return true;\n        } else {\n            stackInfo.incomplete = true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Computes stack trace information by walking the arguments.caller\n     * chain at the time the exception occurred. This will cause earlier\n     * frames to be missed but is the only way to get any stack trace in\n     * Safari and IE. The top frame is restored by\n     * {@link augmentStackTraceWithInitialElement}.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceByWalkingCallerChain(ex, depth) {\n        var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i,\n            stack = [],\n            funcs = {},\n            recursion = false,\n            parts,\n            item,\n            source;\n\n        for (var curr = computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\n            if (curr === computeStackTrace || curr === TraceKit.report) {\n                // console.log('skipping internal function');\n                continue;\n            }\n\n            item = {\n                'url': null,\n                'func': UNKNOWN_FUNCTION,\n                'args': [],\n                'line': null,\n                'column': null\n            };\n\n            if (curr.name) {\n                item.func = curr.name;\n            } else if ((parts = functionName.exec(curr.toString()))) {\n                item.func = parts[1];\n            }\n\n            if (typeof item.func === 'undefined') {\n              try {\n                item.func = parts.input.substring(0, parts.input.indexOf('{'));\n              } catch (e) { }\n            }\n\n            if ((source = findSourceByFunctionBody(curr))) {\n                item.url = source.url;\n                item.line = source.line;\n\n                if (item.func === UNKNOWN_FUNCTION) {\n                    item.func = guessFunctionName(item.url, item.line);\n                }\n\n                var reference = / '([^']+)' /.exec(ex.message || ex.description);\n                if (reference) {\n                    item.column = findSourceInLine(reference[1], source.url, source.line);\n                }\n            }\n\n            if (funcs['' + curr]) {\n                recursion = true;\n            }else{\n                funcs['' + curr] = true;\n            }\n\n            stack.push(item);\n        }\n\n        if (depth) {\n            // console.log('depth is ' + depth);\n            // console.log('stack is ' + stack.length);\n            stack.splice(0, depth);\n        }\n\n        var result = {\n            'mode': 'callers',\n            'name': ex.name,\n            'message': ex.message,\n            'stack': stack\n        };\n        augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description);\n        return result;\n    }\n\n    /**\n     * Computes a stack trace for an exception.\n     * @param {Error} ex\n     * @param {(string|number)=} depth\n     */\n    function computeStackTrace(ex, depth) {\n        var stack = null;\n        depth = (depth == null ? 0 : +depth);\n\n        try {\n            // This must be tried first because Opera 10 *destroys*\n            // its stacktrace property if you try to access the stack\n            // property first!!\n            stack = computeStackTraceFromStacktraceProp(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceFromStackProp(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceFromOperaMultiLineMessage(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        return {\n            'mode': 'failed'\n        };\n    }\n\n    /**\n     * Logs a stacktrace starting from the previous call and working down.\n     * @param {(number|string)=} depth How many frames deep to trace.\n     * @return {Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceOfCaller(depth) {\n        depth = (depth == null ? 0 : +depth) + 1; // \"+ 1\" because \"ofCaller\" should drop one frame\n        try {\n            throw new Error();\n        } catch (ex) {\n            return computeStackTrace(ex, depth + 1);\n        }\n    }\n\n    computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;\n    computeStackTrace.guessFunctionName = guessFunctionName;\n    computeStackTrace.gatherContext = gatherContext;\n    computeStackTrace.ofCaller = computeStackTraceOfCaller;\n    computeStackTrace.getSource = getSource;\n\n    return computeStackTrace;\n}());\n\n/**\n * Extends support for global error handling for asynchronous browser\n * functions. Adopted from Closure Library's errorhandler.js\n */\nTraceKit.extendToAsynchronousCallbacks = function () {\n    var _helper = function _helper(fnName) {\n        var originalFn = window[fnName];\n        window[fnName] = function traceKitAsyncExtension() {\n            // Make a copy of the arguments\n            var args = _slice.call(arguments);\n            var originalCallback = args[0];\n            if (typeof (originalCallback) === 'function') {\n                args[0] = TraceKit.wrap(originalCallback);\n            }\n            // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\n            // also only supports 2 argument and doesn't care what \"this\" is, so we\n            // can just call the original function directly.\n            if (originalFn.apply) {\n                return originalFn.apply(this, args);\n            } else {\n                return originalFn(args[0], args[1]);\n            }\n        };\n    };\n\n    _helper('setTimeout');\n    _helper('setInterval');\n};\n\n//Default options:\nif (!TraceKit.remoteFetching) {\n  TraceKit.remoteFetching = true;\n}\nif (!TraceKit.collectWindowErrors) {\n  TraceKit.collectWindowErrors = true;\n}\nif (!TraceKit.linesOfContext || TraceKit.linesOfContext < 1) {\n  // 5 lines before, the offending line, 5 lines after\n  TraceKit.linesOfContext = 11;\n}\n\n\n\n// Export to global object\nwindow.TraceKit = TraceKit;\n\n}(typeof window !== 'undefined' ? window : global));\n","export interface IEvent {\n  type?: string;\n  source?: string;\n  date?: Date;\n  tags?: string[];\n  message?: string;\n  geo?: string;\n  value?: number;\n  data?: any;\n  reference_id?: string;\n}\n\nexport interface ILastReferenceIdManager {\n  getLast(): string;\n  clearLast(): void;\n  setLast(eventId: string): void;\n}\n\nexport interface ILog {\n  info(message: string): void;\n  warn(message: string): void;\n  error(message: string): void;\n}\n\n                                          \n\nexport interface IEventQueue {\n  enqueue(event: IEvent): void;\n  process(isAppExiting?: boolean): void;\n  suspendProcessing(durationInMinutes?: number, discardFutureQueuedItems?: boolean, clearQueue?: boolean): void;\n}\n\n                                                                                                                                  \n\nexport interface IEnvironmentInfoCollector {\n  getEnvironmentInfo(context: EventPluginContext): IEnvironmentInfo;\n}\n\n                                                                                                              \n\nexport interface IErrorParser {\n  parse(context: EventPluginContext, exception: Error): IError;\n}\n\n                                                                                                                \n\nexport interface IModuleCollector {\n  getModules(context: EventPluginContext): IModule[];\n}\n\n                                                                                                                          \n\nexport interface IRequestInfoCollector {\n  getRequestInfo(context: EventPluginContext): IRequestInfo;\n}\n\n                                      \n\nexport interface IStorageProvider {\n  queue: IStorage;\n  settings: IStorage;\n}\n\n                                                                                                                   \n\nexport interface ISubmissionAdapter {\n  sendRequest(request: SubmissionRequest, callback: SubmissionCallback, isAppExiting?: boolean): void;\n}\n\n                                                                                                                                                                                                                                                                                           \n\nexport interface ISubmissionClient {\n  postEvents(events: IEvent[], config: Configuration, callback: (response: SubmissionResponse) => void, isAppExiting?: boolean): void;\n  postUserDescription(referenceId: string, description: IUserDescription, config: Configuration, callback: (response: SubmissionResponse) => void): void;\n  getSettings(config: Configuration, callback: (response: SettingsResponse) => void): void;\n}\n\nn\nexport interface IConfigurationSettings {\n  apiKey?: string;\n  serverUrl?: string;\n  environmentInfoCollector?: IEnvironmentInfoCollector;\n  errorParser?: IErrorParser;\n  lastReferenceIdManager?: ILastReferenceIdManager;\n  log?: ILog;\n  moduleCollector?: IModuleCollector;\n  requestInfoCollector?: IRequestInfoCollector;\n  submissionBatchSize?: number;\n  submissionClient?: ISubmissionClient;\n  submissionAdapter?: ISubmissionAdapter;\n  storage?: IStorageProvider;\n  queue?: IEventQueue;\n}\n\n                                                                                                                                                     \n\ninterface ISettingsWithVersion {\n  version: number;\n  settings: { [key: string]: string };\n}\n\nexport class SettingsManager {\n  /**\n   * A list of handlers that will be fired when the settings change.\n   * @type {Array}\n   * @private\n   */\n  private static _handlers: { (config: Configuration): void }[] = [];\n\n  public static onChanged(handler: (config: Configuration) => void) {\n    !!handler && this._handlers.push(handler);\n  }\n\n  public static applySavedServerSettings(config: Configuration): void {\n    let savedSettings = this.getSavedServerSettings(config);\n    config.log.info('Applying saved settings.');\n    config.settings = Utils.merge(config.settings, savedSettings.settings);\n    this.changed(config);\n  }\n\n  public static checkVersion(version: number, config: Configuration): void {\n    if (version) {\n      let savedSettings = this.getSavedServerSettings(config);\n      let savedVersion = savedSettings.version;\n      if (version > savedVersion) {\n        config.log.info(`Updating settings from v${savedVersion} to v${version}`);\n        this.updateSettings(config);\n      }\n    }\n  }\n\n  public static updateSettings(config: Configuration): void {\n    if (!config.isValid) {\n      config.log.error('Unable to update settings: ApiKey is not set.');\n      return;\n    }\n\n    config.submissionClient.getSettings(config, (response: SettingsResponse) => {\n      if (!response || !response.success || !response.settings) {\n        return;\n      }\n\n      config.settings = Utils.merge(config.settings, response.settings);\n\n      // TODO: Store snapshot of settings after reading from config and attributes and use that to revert to defaults.\n      // Remove any existing server settings that are not in the new server settings.\n      let savedServerSettings = SettingsManager.getSavedServerSettings(config);\n      for (let key in savedServerSettings) {\n        if (response.settings[key]) {\n          continue;\n        }\n\n        delete config.settings[key];\n      }\n\n      let newSettings = <ISettingsWithVersion>{\n        version: response.settingsVersion,\n        settings: response.settings\n      };\n\n      config.storage.settings.save(newSettings);\n\n      config.log.info('Updated settings');\n      this.changed(config);\n    });\n  }\n\n  private static changed(config: Configuration) {\n    let handlers = this._handlers; // optimization for minifier.\n    for (let index = 0; index < handlers.length; index++) {\n      handlers[index](config);\n    }\n  }\n\n  private static getSavedServerSettings(config: Configuration): ISettingsWithVersion {\n    let item = config.storage.settings.get()[0];\n    if (item && item.value && item.value.version && item.value.settings) {\n      return item.value;\n    }\n\n    return { version: 0, settings: {} };\n  }\n}\n\n                                                                    \n\nexport class DefaultLastReferenceIdManager implements ILastReferenceIdManager {\n  /**\n   * Gets the last event's reference id that was submitted to the server.\n   * @type {string}\n   * @private\n   */\n  private _lastReferenceId: string = null;\n\n  /**\n   * Gets the last event's reference id that was submitted to the server.\n   * @returns {string}\n   */\n  getLast(): string {\n    return this._lastReferenceId;\n  }\n\n  /**\n   * Clears the last event's reference id.\n   */\n  clearLast(): void {\n    this._lastReferenceId = null;\n  }\n\n  /**\n   * Sets the last event's reference id.\n   * @param eventId\n   */\n  setLast(eventId: string): void {\n    this._lastReferenceId = eventId;\n  }\n}\n\n                              \n\nexport class ConsoleLog implements ILog {\n  public info(message: string): void {\n    this.log('info', message);\n  }\n\n  public warn(message: string): void {\n    this.log('warn', message);\n  }\n\n  public error(message: string): void {\n    this.log('error', message);\n  }\n\n  private log(level: string, message: string) {\n    if (console && console[level]) {\n      console[level](`[${level}] Exceptionless: ${message}`);\n    }\n  }\n}\n\n                              \n\nexport class NullLog implements ILog {\n  public info(message: string): void { }\n  public warn(message: string): void { }\n  public error(message: string): void { }\n}\n\nexport interface IUserInfo {\n  identity?: string;\n  name?: string;\n  data?: any;\n}\n\n                                                                                                         \n\nexport interface IEventPlugin {\n  priority?: number;\n  name?: string;\n  run(context: EventPluginContext, next?: () => void): void;\n}\n\n                                                                                                                                                                                             \n\nexport class EventPluginContext {\n  public cancelled: boolean;\n  public client: ExceptionlessClient;\n  public event: IEvent;\n  public contextData: ContextData;\n\n  constructor(client: ExceptionlessClient, event: IEvent, contextData?: ContextData) {\n    this.client = client;\n    this.event = event;\n    this.contextData = contextData ? contextData : new ContextData();\n  }\n\n  public get log(): ILog {\n    return this.client.config.log;\n  }\n}\n\nn\nexport class EventPluginManager {\n  public static run(context: EventPluginContext, callback: (context?: EventPluginContext) => void): void {\n    let wrap = function(plugin: IEventPlugin, next?: () => void): () => void {\n      return () => {\n        try {\n          if (!context.cancelled) {\n            plugin.run(context, next);\n          }\n        } catch (ex) {\n          context.cancelled = true;\n          context.log.error(`Error running plugin '${plugin.name}': ${ex.message}. Discarding Event.`);\n        }\n\n        if (context.cancelled && !!callback) {\n          callback(context);\n        }\n      };\n    };\n\n    let plugins: IEventPlugin[] = context.client.config.plugins; // optimization for minifier.\n    let wrappedPlugins: { (): void }[] = [];\n    if (!!callback) {\n      wrappedPlugins[plugins.length] = wrap({ name: 'cb', priority: 9007199254740992, run: callback }, null);\n    }\n\n    for (let index = plugins.length - 1; index > -1; index--) {\n      wrappedPlugins[index] = wrap(plugins[index], !!callback || (index < plugins.length - 1) ? wrappedPlugins[index + 1] : null);\n    }\n\n    wrappedPlugins[0]();\n  }\n\n  public static addDefaultPlugins(config: Configuration): void {\n    config.addPlugin(new ConfigurationDefaultsPlugin());\n    config.addPlugin(new ErrorPlugin());\n    config.addPlugin(new DuplicateCheckerPlugin());\n    config.addPlugin(new ModuleInfoPlugin());\n    config.addPlugin(new RequestInfoPlugin());\n    config.addPlugin(new EnvironmentInfoPlugin());\n    config.addPlugin(new SubmissionMethodPlugin());\n  }\n}\n\n                                                                                                                                                               \n\nexport class HeartbeatPlugin implements IEventPlugin {\n  public priority: number = 100;\n  public name: string = 'HeartbeatPlugin';\n\n  private _heartbeatIntervalId: any;\n  private _lastUser: IUserInfo;\n\n  public run(context: EventPluginContext, next?: () => void): void {\n    let clearHeartbeatInterval = () => {\n      if (this._heartbeatIntervalId) {\n        clearInterval(this._heartbeatIntervalId);\n        this._heartbeatIntervalId = 0;\n      }\n    };\n\n    let type = context.event.type;\n    if (type !== 'heartbeat') {\n      if (type === 'sessionend') {\n        clearHeartbeatInterval();\n      } else {\n        let user: IUserInfo = context.event.data['@user'];\n        if (user && user.identity) {\n          let submitHeartbeatFn = () => context.client.createSessionHeartbeat().setUserIdentity(user).submit();\n\n          if (!this._heartbeatIntervalId) {\n            this._lastUser = user;\n          } else {\n            clearHeartbeatInterval();\n          }\n\n          this._heartbeatIntervalId = setInterval(submitHeartbeatFn, 30000);\n        }\n      }\n    }\n\n    next && next();\n  }\n}\n\n                                                                                                                                                \n\nexport class ReferenceIdPlugin implements IEventPlugin {\n  public priority: number = 20;\n  public name: string = 'ReferenceIdPlugin';\n\n  public run(context: EventPluginContext, next?: () => void): void {\n    if ((!context.event.reference_id || context.event.reference_id.length === 0) && context.event.type === 'error') {\n      context.event.reference_id = Utils.guid().replace('-', '').substring(0, 10);\n    }\n\n    next && next();\n  }\n}\n\n                                                                                                                                                                                                                                                                                                                                     \n\nexport class DefaultEventQueue implements IEventQueue {\n  /**\n   * The configuration object.\n   * @type {Configuration}\n   * @private\n   */\n  private _config: Configuration;\n\n  /**\n   * Suspends processing until the specified time.\n   * @type {Date}\n   * @private\n   */\n  private _suspendProcessingUntil: Date;\n\n  /**\n   * Discards queued items until the specified time.\n   * @type {Date}\n   * @private\n   */\n  private _discardQueuedItemsUntil: Date;\n\n  /**\n   * Returns true if the queue is processing.\n   * @type {boolean}\n   * @private\n   */\n  private _processingQueue: boolean = false;\n\n  /**\n   * Processes the queue every xx seconds.\n   * @type {Timer}\n   * @private\n   */\n  private _queueTimer: any;\n\n  constructor(config: Configuration) {\n    this._config = config;\n  }\n\n  public enqueue(event: IEvent): void {\n    let config: Configuration = this._config; // Optimization for minifier.\n    this.ensureQueueTimer();\n\n    if (this.areQueuedItemsDiscarded()) {\n      config.log.info('Queue items are currently being discarded. The event will not be queued.');\n      return;\n    }\n\n    let timestamp = config.storage.queue.save(event);\n    let logText = `type=${event.type} ${!!event.reference_id ? 'refid=' + event.reference_id : ''}`;\n    if (timestamp) {\n      config.log.info(`Enqueuing event: ${timestamp} ${logText}`);\n    } else {\n      config.log.error(`Could not enqueue event ${logText}`);\n    }\n  }\n\n  public process(isAppExiting?: boolean): void {\n    const queueNotProcessed: string = 'The queue will not be processed.'; // optimization for minifier.\n    let config: Configuration = this._config; // Optimization for minifier.\n    let log: ILog = config.log; // Optimization for minifier.\n\n    this.ensureQueueTimer();\n\n    if (this._processingQueue) {\n      return;\n    }\n\n    log.info('Processing queue...');\n    if (!config.enabled) {\n      log.info(`Configuration is disabled. ${queueNotProcessed}`);\n      return;\n    }\n\n    if (!config.isValid) {\n      log.info(`Invalid Api Key. ${queueNotProcessed}`);\n      return;\n    }\n\n    this._processingQueue = true;\n\n    try {\n      let events = config.storage.queue.get(config.submissionBatchSize);\n      if (!events || events.length === 0) {\n        this._processingQueue = false;\n        return;\n      }\n\n      log.info(`Sending ${events.length} events to ${config.serverUrl}.`);\n      config.submissionClient.postEvents(events.map(e => e.value), config, (response: SubmissionResponse) => {\n        this.processSubmissionResponse(response, events);\n        log.info('Finished processing queue.');\n        this._processingQueue = false;\n      }, isAppExiting);\n    } catch (ex) {\n      log.error(`Error processing queue: ${ex}`);\n      this.suspendProcessing();\n      this._processingQueue = false;\n    }\n  }\n\n  public suspendProcessing(durationInMinutes?: number, discardFutureQueuedItems?: boolean, clearQueue?: boolean): void {\n    let config: Configuration = this._config; // Optimization for minifier.\n\n    if (!durationInMinutes || durationInMinutes <= 0) {\n      durationInMinutes = 5;\n    }\n\n    config.log.info(`Suspending processing for ${durationInMinutes} minutes.`);\n    this._suspendProcessingUntil = new Date(new Date().getTime() + (durationInMinutes * 60000));\n\n    if (discardFutureQueuedItems) {\n      this._discardQueuedItemsUntil = new Date(new Date().getTime() + (durationInMinutes * 60000));\n    }\n\n    if (clearQueue) {\n      // Account is over the limit and we want to ensure that the sample size being sent in will contain newer errors.\n      config.storage.queue.clear();\n    }\n  }\n\n  private areQueuedItemsDiscarded(): boolean {\n    return this._discardQueuedItemsUntil && this._discardQueuedItemsUntil > new Date();\n  }\n\n  private ensureQueueTimer(): void {\n    if (!this._queueTimer) {\n      this._queueTimer = setInterval(() => this.onProcessQueue(), 10000);\n    }\n  }\n\n  private isQueueProcessingSuspended(): boolean {\n    return this._suspendProcessingUntil && this._suspendProcessingUntil > new Date();\n  }\n\n  private onProcessQueue(): void {\n    if (!this.isQueueProcessingSuspended() && !this._processingQueue) {\n      this.process();\n    }\n  }\n\n  private processSubmissionResponse(response: SubmissionResponse, events: IStorageItem[]): void {\n    const noSubmission: string = 'The event will not be submitted.'; // Optimization for minifier.\n    let config: Configuration = this._config; // Optimization for minifier.\n    let log: ILog = config.log; // Optimization for minifier.\n\n    if (response.success) {\n      log.info(`Sent ${events.length} events.`);\n      this.removeEvents(events);\n      return;\n    }\n\n    if (response.serviceUnavailable) {\n      // You are currently over your rate limit or the servers are under stress.\n      log.error('Server returned service unavailable.');\n      this.suspendProcessing();\n      return;\n    }\n\n    if (response.paymentRequired) {\n      // If the organization over the rate limit then discard the event.\n      log.info('Too many events have been submitted, please upgrade your plan.');\n      this.suspendProcessing(null, true, true);\n      return;\n    }\n\n    if (response.unableToAuthenticate) {\n      // The api key was suspended or could not be authorized.\n      log.info(`Unable to authenticate, please check your configuration. ${noSubmission}`);\n      this.suspendProcessing(15);\n      this.removeEvents(events);\n      return;\n    }\n\n    if (response.notFound || response.badRequest) {\n      // The service end point could not be found.\n      log.error(`Error while trying to submit data: ${response.message}`);\n      this.suspendProcessing(60 * 4);\n      this.removeEvents(events);\n      return;\n    }\n\n    if (response.requestEntityTooLarge) {\n      let message = 'Event submission discarded for being too large.';\n      if (config.submissionBatchSize > 1) {\n        log.error(`${message} Retrying with smaller batch size.`);\n        config.submissionBatchSize = Math.max(1, Math.round(config.submissionBatchSize / 1.5));\n      } else {\n        log.error(`${message} ${noSubmission}`);\n        this.removeEvents(events);\n      }\n\n      return;\n    }\n\n    if (!response.success) {\n      log.error(`Error submitting events: ${response.message || 'Please check the network tab for more info.'}`);\n      this.suspendProcessing();\n    }\n  }\n\n  private removeEvents(events: IStorageItem[]) {\n    for (let index = 0; index < (events || []).length; index++) {\n      this._config.storage.queue.remove(events[index].timestamp);\n    }\n  }\n}\n\n                                                                                                                                                   \n\nexport class InMemoryStorageProvider implements IStorageProvider {\n\n  queue: IStorage;\n  settings: IStorage;\n\n  constructor(maxQueueItems: number = 250) {\n    this.queue = new InMemoryStorage(maxQueueItems);\n    this.settings = new InMemoryStorage(1);\n  }\n\n}\n\nn\ndeclare var XDomainRequest: { new (); create(); };\n\nexport class DefaultSubmissionClient implements ISubmissionClient {\n  public configurationVersionHeader: string = 'x-exceptionless-configversion';\n\n  public postEvents(events: IEvent[], config: Configuration, callback: (response: SubmissionResponse) => void, isAppExiting?: boolean): void {\n    let data = JSON.stringify(events);\n    let request = this.createRequest(config, 'POST', '/api/v2/events', data);\n    let cb = this.createSubmissionCallback(config, callback);\n\n    return config.submissionAdapter.sendRequest(request, cb, isAppExiting);\n  }\n\n  public postUserDescription(referenceId: string, description: IUserDescription, config: Configuration, callback: (response: SubmissionResponse) => void): void {\n    let path = `/api/v2/events/by-ref/${encodeURIComponent(referenceId)}/user-description`;\n    let data = JSON.stringify(description);\n    let request = this.createRequest(config, 'POST', path, data);\n    let cb = this.createSubmissionCallback(config, callback);\n\n    return config.submissionAdapter.sendRequest(request, cb);\n  }\n\n  public getSettings(config: Configuration, callback: (response: SettingsResponse) => void): void {\n    let request = this.createRequest(config, 'GET', '/api/v2/projects/config');\n    let cb = (status, message, data?, headers?) => {\n      if (status !== 200) {\n        return callback(new SettingsResponse(false, null, -1, null, message));\n      }\n\n      let settings: IClientConfiguration;\n      try {\n        settings = JSON.parse(data);\n      } catch (e) {\n        config.log.error(`Unable to parse settings: '${data}'`);\n      }\n\n      if (!settings || isNaN(settings.version)) {\n        return callback(new SettingsResponse(false, null, -1, null, 'Invalid configuration settings.'));\n      }\n\n      callback(new SettingsResponse(true, settings.settings || {}, settings.version));\n    };\n\n    return config.submissionAdapter.sendRequest(request, cb);\n  }\n\n  private createRequest(config: Configuration, method: string, path: string, data: string = null): SubmissionRequest {\n    return {\n      method,\n      path,\n      data,\n      serverUrl: config.serverUrl,\n      apiKey: config.apiKey,\n      userAgent: config.userAgent\n    };\n  }\n\n  private createSubmissionCallback(config: Configuration, callback: (response: SubmissionResponse) => void) {\n    return (status, message, data?, headers?) => {\n      let settingsVersion: number = headers && parseInt(headers[this.configurationVersionHeader], 10);\n      SettingsManager.checkVersion(settingsVersion, config);\n\n      callback(new SubmissionResponse(status, message));\n    };\n  }\n}\n\nexport class Utils {\n  public static addRange<T>(target: T[], ...values: T[]) {\n    if (!target) {\n      target = [];\n    }\n\n    if (!values || values.length === 0) {\n      return target;\n    }\n\n    for (let index = 0; index < values.length; index++) {\n      if (values[index] && target.indexOf(values[index]) < 0) {\n        target.push(values[index]);\n      }\n    }\n\n    return target;\n  }\n\n  public static getHashCode(source: string): number {\n    if (!source || source.length === 0) {\n      return 0;\n    }\n\n    let hash: number = 0;\n    for (let index = 0; index < source.length; index++) {\n      let character = source.charCodeAt(index);\n      hash = ((hash << 5) - hash) + character;\n      hash |= 0;\n    }\n\n    return hash;\n  }\n\n  public static getCookies(cookies: string, exclusions?: string[]): Object {\n    let result: Object = {};\n\n    let parts: string[] = (cookies || '').split('; ');\n    for (let index = 0; index < parts.length; index++) {\n      let cookie: string[] = parts[index].split('=');\n      if (!Utils.isMatch(cookie[0], exclusions)) {\n        result[cookie[0]] = cookie[1];\n      }\n    }\n\n    return !Utils.isEmpty(result) ? result : null;\n  }\n\n  public static guid(): string {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    }\n\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  }\n\n  public static merge(defaultValues: Object, values: Object) {\n    let result: Object = {};\n\n    for (let key in defaultValues || {}) {\n      if (!!defaultValues[key]) {\n        result[key] = defaultValues[key];\n      }\n    }\n\n    for (let key in values || {}) {\n      if (!!values[key]) {\n        result[key] = values[key];\n      }\n    }\n\n    return result;\n  }\n\n  public static parseVersion(source: string): string {\n    if (!source) {\n      return null;\n    }\n\n    let versionRegex = /(v?((\\d+)\\.(\\d+)(\\.(\\d+))?)(?:-([\\dA-Za-z\\-]+(?:\\.[\\dA-Za-z\\-]+)*))?(?:\\+([\\dA-Za-z\\-]+(?:\\.[\\dA-Za-z\\-]+)*))?)/;\n    let matches = versionRegex.exec(source);\n    if (matches && matches.length > 0) {\n      return matches[0];\n    }\n\n    return null;\n  }\n\n  public static parseQueryString(query: string, exclusions?: string[]) {\n    if (!query || query.length === 0) {\n      return null;\n    }\n\n    let pairs: string[] = query.split('&');\n    if (pairs.length === 0) {\n      return null;\n    }\n\n    let result: Object = {};\n    for (let index = 0; index < pairs.length; index++) {\n      let pair = pairs[index].split('=');\n      if (!Utils.isMatch(pair[0], exclusions)) {\n        result[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n      }\n    }\n\n    return !Utils.isEmpty(result) ? result : null;\n  }\n\n  public static randomNumber(): number {\n    return Math.floor(Math.random() * 9007199254740992);\n  }\n\n  /**\n   * Checks to see if a value matches a pattern.\n   * @param input the value to check against the @pattern.\n   * @param pattern The pattern to check, supports wild cards (*).\n   */\n  public static isMatch(input: string, patterns: string[]): boolean {\n    if (!input || typeof input !== 'string') {\n      return false;\n    }\n\n    let trim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n    return (patterns || []).some(pattern => {\n      if (!pattern) {\n        return false;\n      }\n\n      pattern = pattern.toLowerCase().replace(trim, '');\n      input = input.toLowerCase().replace(trim, '');\n\n      if (pattern.length <= 0) {\n        return false;\n      }\n\n      let startsWithWildcard: boolean = pattern[0] === '*';\n      if (startsWithWildcard) {\n        pattern = pattern.slice(1);\n      }\n\n      let endsWithWildcard: boolean = pattern[pattern.length - 1] === '*';\n      if (endsWithWildcard) {\n        pattern = pattern.substring(0, pattern.length - 1);\n      }\n\n      if (startsWithWildcard && endsWithWildcard) {\n        return input.indexOf(pattern) !== -1;\n      }\n\n      if (startsWithWildcard) {\n        let lastIndexOf = input.lastIndexOf(pattern);\n        return lastIndexOf !== -1 && lastIndexOf === (input.length - pattern.length);\n      }\n\n      if (endsWithWildcard) {\n        return input.indexOf(pattern) === 0;\n      }\n\n      return input === pattern;\n    });\n  }\n\n  public static isEmpty(input: Object) {\n    return input === null || (typeof (input) === 'object' && Object.keys(input).length === 0);\n  }\n\n  /**\n   * Stringifys an object with optional exclusions and max depth.\n   * @param data The data object to add.\n   * @param exclusions Any property names that should be excluded.\n   * @param maxDepth The max depth of the object to include.\n   */\n  public static stringify(data: any, exclusions?: string[], maxDepth?: number): string {\n    function stringifyImpl(obj: any, excludedKeys: string[]): string {\n      let cache: string[] = [];\n      return JSON.stringify(obj, function(key: string, value: any) {\n        if (Utils.isMatch(key, excludedKeys)) {\n          return;\n        }\n\n        if (typeof value === 'object' && !!value) {\n          if (cache.indexOf(value) !== -1) {\n            // Circular reference found, discard key\n            return;\n          }\n\n          cache.push(value);\n        }\n\n        return value;\n      });\n    }\n\n    if (({}).toString.call(data) === '[object Object]') {\n      let flattened = {};\n      /* tslint:disable:forin */\n      for (let prop in data) {\n        let value = data[prop];\n        if (value === data) {\n          continue;\n        }\n        flattened[prop] = data[prop];\n      }\n      /* tslint:enable:forin */\n\n      return stringifyImpl(flattened, exclusions);\n    }\n\n    if (({}).toString.call(data) === '[object Array]') {\n      let result = [];\n      for (let index = 0; index < data.length; index++) {\n        result[index] = JSON.parse(stringifyImpl(data[index], exclusions));\n      }\n\n      return JSON.stringify(result);\n    }\n\n    return stringifyImpl(data, exclusions);\n  }\n}\n\nn\nexport class Configuration implements IConfigurationSettings {\n  /**\n   * The default configuration settings that are applied to new configuration instances.\n   * @type {IConfigurationSettings}\n   * @private\n   */\n  private static _defaultSettings: IConfigurationSettings = null;\n\n  /**\n   * A default list of tags that will automatically be added to every\n   * report submitted to the server.\n   *\n   * @type {Array}\n   */\n  public defaultTags: string[] = [];\n\n  /**\n   * A default list of of extended data objects that will automatically\n   * be added to every report submitted to the server.\n   *\n   * @type {{}}\n   */\n  public defaultData: Object = {};\n\n  /**\n   * Whether the client is currently enabled or not. If it is disabled,\n   * submitted errors will be discarded and no data will be sent to the server.\n   *\n   * @returns {boolean}\n   */\n  public enabled: boolean = true;\n\n  public environmentInfoCollector: IEnvironmentInfoCollector;\n  public errorParser: IErrorParser;\n  public lastReferenceIdManager: ILastReferenceIdManager = new DefaultLastReferenceIdManager();\n  public log: ILog;\n  public moduleCollector: IModuleCollector;\n  public requestInfoCollector: IRequestInfoCollector;\n\n  /**\n   * Maximum number of events that should be sent to the server together in a batch. (Defaults to 50)\n   */\n  public submissionBatchSize: number;\n  public submissionAdapter: ISubmissionAdapter;\n  public submissionClient: ISubmissionClient;\n\n  /**\n   * Contains a dictionary of custom settings that can be used to control\n   * the client and will be automatically updated from the server.\n   */\n  public settings: Object = {};\n\n  public storage: IStorageProvider;\n\n  public queue: IEventQueue;\n\n  /**\n   * The list of plugins that will be used in this configuration.\n   * @type {Array}\n   * @private\n   */\n  private _plugins: IEventPlugin[] = [];\n\n  constructor(configSettings?: IConfigurationSettings) {\n    function inject(fn: any) {\n      return typeof fn === 'function' ? fn(this) : fn;\n    }\n\n    configSettings = Utils.merge(Configuration.defaults, configSettings);\n\n    this.log = inject(configSettings.log) || new NullLog();\n    this.apiKey = configSettings.apiKey;\n    this.serverUrl = configSettings.serverUrl;\n\n    this.environmentInfoCollector = inject(configSettings.environmentInfoCollector);\n    this.errorParser = inject(configSettings.errorParser);\n    this.lastReferenceIdManager = inject(configSettings.lastReferenceIdManager) || new DefaultLastReferenceIdManager();\n    this.moduleCollector = inject(configSettings.moduleCollector);\n    this.requestInfoCollector = inject(configSettings.requestInfoCollector);\n    this.submissionBatchSize = inject(configSettings.submissionBatchSize) || 50;\n    this.submissionAdapter = inject(configSettings.submissionAdapter);\n    this.submissionClient = inject(configSettings.submissionClient) || new DefaultSubmissionClient();\n    this.storage = inject(configSettings.storage) || new InMemoryStorageProvider();\n    this.queue = inject(configSettings.queue) || new DefaultEventQueue(this);\n\n    SettingsManager.applySavedServerSettings(this);\n    EventPluginManager.addDefaultPlugins(this);\n  }\n\n  /**\n   * The API key that will be used when sending events to the server.\n   * @type {string}\n   * @private\n   */\n  private _apiKey: string;\n\n  /**\n   * The API key that will be used when sending events to the server.\n   * @returns {string}\n   */\n  public get apiKey(): string {\n    return this._apiKey;\n  }\n\n  /**\n   * The API key that will be used when sending events to the server.\n   * @param value\n   */\n  public set apiKey(value: string) {\n    this._apiKey = value || null;\n    this.log.info(`apiKey: ${this._apiKey}`);\n  }\n\n  /**\n   * Returns true if the apiKey is valid.\n   * @returns {boolean}\n   */\n  public get isValid(): boolean {\n    return !!this.apiKey && this.apiKey.length >= 10;\n  }\n\n  /**\n   * The server url that all events will be sent to.\n   * @type {string}\n   * @private\n   */\n  private _serverUrl: string = 'https://collector.exceptionless.io';\n\n  /**\n   * The server url that all events will be sent to.\n   * @returns {string}\n   */\n  public get serverUrl(): string {\n    return this._serverUrl;\n  }\n\n  /**\n   * The server url that all events will be sent to.\n   * @param value\n   */\n  public set serverUrl(value: string) {\n    if (!!value) {\n      this._serverUrl = value;\n      this.log.info(`serverUrl: ${this._serverUrl}`);\n    }\n  }\n\n  /**\n   * A list of exclusion patterns.\n   * @type {Array}\n   * @private\n   */\n  private _dataExclusions: string[] = [];\n\n  /**\n   * A list of user agent patterns.\n   * @type {Array}\n   * @private\n   */\n  private _userAgentBotPatterns: string[] = [];\n\n  /**\n   *  A list of exclusion patterns that will automatically remove any data that\n   *  matches them from any data submitted to the server.\n   *\n   *  For example, entering CreditCard will remove any extended data properties,\n   *  form fields, cookies and query parameters from the report.\n   *\n   * @returns {string[]}\n   */\n  public get dataExclusions(): string[] {\n    let exclusions: string = this.settings['@@DataExclusions'];\n    return this._dataExclusions.concat(exclusions && exclusions.split(',') || []);\n  }\n\n  /**\n   * Add items to the list of exclusion patterns that will automatically remove any\n   * data that matches them from any data submitted to the server.\n   *\n   * For example, entering CreditCard will remove any extended data properties, form\n   * fields, cookies and query parameters from the report.\n   *\n   * @param exclusions\n   */\n  public addDataExclusions(...exclusions: string[]) {\n    this._dataExclusions = Utils.addRange<string>(this._dataExclusions, ...exclusions);\n  }\n\n  /**\n   * A list of user agent patterns that will cause any event with a matching user agent to not be submitted.\n   *\n   * For example, entering *Bot* will cause any events that contains a user agent of Bot will not be submitted.\n   *\n   * @returns {string[]}\n   */\n  public get userAgentBotPatterns(): string[] {\n    let patterns: string = this.settings['@@UserAgentBotPatterns'];\n    return this._userAgentBotPatterns.concat(patterns && patterns.split(',') || []);\n  }\n\n  /**\n   * Add items to the list of user agent patterns that will cause any event with a matching user agent to not be submitted.\n   *\n   * For example, entering *Bot* will cause any events that contains a user agent of Bot will not be submitted.\n   *\n   * @param userAgentBotPatterns\n   */\n  public addUserAgentBotPatterns(...userAgentBotPatterns: string[]) {\n    this._userAgentBotPatterns = Utils.addRange<string>(this._userAgentBotPatterns, ...userAgentBotPatterns);\n  }\n\n  /**\n   * The list of plugins that will be used in this configuration.\n   * @returns {IEventPlugin[]}\n   */\n  public get plugins(): IEventPlugin[] {\n    return this._plugins.sort((p1: IEventPlugin, p2: IEventPlugin) => {\n      return (p1.priority < p2.priority) ? -1 : (p1.priority > p2.priority) ? 1 : 0;\n    });\n  }\n\n  /**\n   * Register an plugin to be used in this configuration.\n   * @param plugin\n   */\n  public addPlugin(plugin: IEventPlugin): void;\n\n  /**\n   * Register an plugin to be used in this configuration.\n   * @param name The name used to identify the plugin.\n   * @param priority Used to determine plugins priority.\n   * @param pluginAction A function that is run.\n   */\n  public addPlugin(name: string, priority: number, pluginAction: (context: EventPluginContext, next?: () => void) => void): void;\n  public addPlugin(pluginOrName: IEventPlugin | string, priority?: number, pluginAction?: (context: EventPluginContext, next?: () => void) => void): void {\n    let plugin: IEventPlugin = !!pluginAction ? { name: <string>pluginOrName, priority: priority, run: pluginAction } : <IEventPlugin>pluginOrName;\n    if (!plugin || !plugin.run) {\n      this.log.error('Add plugin failed: Run method not defined');\n      return;\n    }\n\n    if (!plugin.name) {\n      plugin.name = Utils.guid();\n    }\n\n    if (!plugin.priority) {\n      plugin.priority = 0;\n    }\n\n    let pluginExists: boolean = false;\n    let plugins = this._plugins; // optimization for minifier.\n    for (let index = 0; index < plugins.length; index++) {\n      if (plugins[index].name === plugin.name) {\n        pluginExists = true;\n        break;\n      }\n    }\n\n    if (!pluginExists) {\n      plugins.push(plugin);\n    }\n  }\n\n  /**\n   * Remove the plugin from this configuration.\n   * @param plugin\n   */\n  public removePlugin(plugin: IEventPlugin): void;\n\n  /**\n   * Remove an plugin by key from this configuration.\n   * @param name\n   */\n  public removePlugin(name: string): void;\n  public removePlugin(pluginOrName: IEventPlugin | string): void {\n    let name: string = typeof pluginOrName === 'string' ? pluginOrName : pluginOrName.name;\n    if (!name) {\n      this.log.error('Remove plugin failed: Plugin name not defined');\n      return;\n    }\n\n    let plugins = this._plugins; // optimization for minifier.\n    for (let index = 0; index < plugins.length; index++) {\n      if (plugins[index].name === name) {\n        plugins.splice(index, 1);\n        break;\n      }\n    }\n  }\n\n  /**\n   * Automatically set the application version for events.\n   * @param version\n   */\n  public setVersion(version: string): void {\n    if (!!version) {\n      this.defaultData['@version'] = version;\n    }\n  }\n\n  public setUserIdentity(userInfo: IUserInfo): void;\n  public setUserIdentity(identity: string): void;\n  public setUserIdentity(identity: string, name: string): void;\n  public setUserIdentity(userInfoOrIdentity: IUserInfo | string, name?: string): void {\n    const USER_KEY: string = '@user'; // optimization for minifier.\n    let userInfo: IUserInfo = typeof userInfoOrIdentity !== 'string' ? userInfoOrIdentity : { identity: userInfoOrIdentity, name: name };\n\n    let shouldRemove: boolean = !userInfo || (!userInfo.identity && !userInfo.name);\n    if (shouldRemove) {\n      delete this.defaultData[USER_KEY];\n    } else {\n      this.defaultData[USER_KEY] = userInfo;\n    }\n\n    this.log.info(`user identity: ${shouldRemove ? 'null' : userInfo.identity}`);\n  }\n\n  /**\n   * Used to identify the client that sent the events to the server.\n   * @returns {string}\n   */\n  public get userAgent(): string {\n    return 'exceptionless-js/1.0.0.0';\n  }\n\n  /**\n   * Automatically send a heartbeat to keep the session alive.\n   */\n  public useSessions(sendHeartbeats: boolean = true): void {\n    if (sendHeartbeats) {\n      this.addPlugin(new HeartbeatPlugin());\n    }\n  }\n\n  /**\n   * Automatically set a reference id for error events.\n   */\n  public useReferenceIds(): void {\n    this.addPlugin(new ReferenceIdPlugin());\n  }\n\n  public useLocalStorage(): void {\n    // This method will be injected via the prototype.\n  }\n\n  // TODO: Support a min log level.\n  public useDebugLogger(): void {\n    this.log = new ConsoleLog();\n  }\n\n  /**\n   * The default configuration settings that are applied to new configuration instances.\n   * @returns {IConfigurationSettings}\n   */\n  public static get defaults() {\n    if (Configuration._defaultSettings === null) {\n      Configuration._defaultSettings = {};\n    }\n\n    return Configuration._defaultSettings;\n  }\n}\n\n                                                                                                                                                                                                                                                                                                               \n\nexport class EventBuilder {\n  public target: IEvent;\n  public client: ExceptionlessClient;\n  public pluginContextData: ContextData;\n\n  private _validIdentifierErrorMessage: string = 'must contain between 8 and 100 alphanumeric or \\'-\\' characters.'; // optimization for minifier.\n\n  constructor(event: IEvent, client: ExceptionlessClient, pluginContextData?: ContextData) {\n    this.target = event;\n    this.client = client;\n    this.pluginContextData = pluginContextData || new ContextData();\n  }\n\n  public setType(type: string): EventBuilder {\n    if (!!type) {\n      this.target.type = type;\n    }\n\n    return this;\n  }\n\n  public setSource(source: string): EventBuilder {\n    if (!!source) {\n      this.target.source = source;\n    }\n\n    return this;\n  }\n\n  public setReferenceId(referenceId: string): EventBuilder {\n    if (!this.isValidIdentifier(referenceId)) {\n      throw new Error(`ReferenceId ${this._validIdentifierErrorMessage}`);\n    }\n\n    this.target.reference_id = referenceId;\n    return this;\n  }\n\n  /**\n   * Allows you to reference a parent event by its ReferenceId property. This allows you to have parent and child relationships.\n   * @param name Reference name\n   * @param id The reference id that points to a specific event\n   * @returns {EventBuilder}\n     */\n  public setEventReference(name: string, id: string): EventBuilder {\n    if (!name) {\n      throw new Error('Invalid name');\n    }\n\n    if (!id || !this.isValidIdentifier(id)) {\n      throw new Error(`Id ${this._validIdentifierErrorMessage}`);\n    }\n\n    this.setProperty('@ref:' + name, id);\n    return this;\n  }\n\n  public setMessage(message: string): EventBuilder {\n    if (!!message) {\n      this.target.message = message;\n    }\n\n    return this;\n  }\n\n  public setGeo(latitude: number, longitude: number): EventBuilder {\n    if (latitude < -90.0 || latitude > 90.0) {\n      throw new Error('Must be a valid latitude value between -90.0 and 90.0.');\n    }\n\n    if (longitude < -180.0 || longitude > 180.0) {\n      throw new Error('Must be a valid longitude value between -180.0 and 180.0.');\n    }\n\n    this.target.geo = `${latitude},${longitude}`;\n    return this;\n  }\n\n  public setUserIdentity(userInfo: IUserInfo): EventBuilder;\n  public setUserIdentity(identity: string): EventBuilder;\n  public setUserIdentity(identity: string, name: string): EventBuilder;\n  public setUserIdentity(userInfoOrIdentity: IUserInfo | string, name?: string): EventBuilder {\n    let userInfo = typeof userInfoOrIdentity !== 'string' ? userInfoOrIdentity : { identity: userInfoOrIdentity, name: name };\n    if (!userInfo || (!userInfo.identity && !userInfo.name)) {\n      return this;\n    }\n\n    this.setProperty('@user', userInfo);\n    return this;\n  }\n\n  /**\n   * Sets the user's description of the event.\n   *\n   * @param emailAddress The email address\n   * @param description The user's description of the event.\n   * @returns {EventBuilder}\n     */\n  public setUserDescription(emailAddress: string, description: string): EventBuilder {\n    if (emailAddress && description) {\n      this.setProperty('@user_description', { email_address: emailAddress, description: description });\n    }\n\n    return this;\n  }\n\n  /**\n   * Changes default stacking behavior by setting the stacking key.\n   * @param manualStackingKey The manual stacking key.\n   * @returns {EventBuilder}\n     */\n  public setManualStackingKey(manualStackingKey: string): EventBuilder {\n    if (manualStackingKey) {\n      this.setProperty('@stack', manualStackingKey);\n    }\n\n    return this;\n  }\n\n  public setValue(value: number): EventBuilder {\n    if (!!value) {\n      this.target.value = value;\n    }\n\n    return this;\n  }\n\n  public addTags(...tags: string[]): EventBuilder {\n    this.target.tags = Utils.addRange<string>(this.target.tags, ...tags);\n    return this;\n  }\n\n  /**\n   * Adds the object to extended data. Uses @excludedPropertyNames\n   * to exclude data from being included in the event.\n   * @param name The data object to add.\n   * @param value The name of the object to add.\n   * @param maxDepth The max depth of the object to include.\n   * @param excludedPropertyNames Any property names that should be excluded.\n   */\n  public setProperty(name: string, value: any, maxDepth?: number, excludedPropertyNames?: string[]): EventBuilder {\n    if (!name || (value === undefined || value == null)) {\n      return this;\n    }\n\n    if (!this.target.data) {\n      this.target.data = {};\n    }\n\n    let result = JSON.parse(Utils.stringify(value, this.client.config.dataExclusions.concat(excludedPropertyNames || []), maxDepth));\n    if (!Utils.isEmpty(result)) {\n      this.target.data[name] = result;\n    }\n\n    return this;\n  }\n\n  public markAsCritical(critical: boolean): EventBuilder {\n    if (critical) {\n      this.addTags('Critical');\n    }\n\n    return this;\n  }\n\n  public addRequestInfo(request: Object): EventBuilder {\n    if (!!request) {\n      this.pluginContextData['@request'] = request;\n    }\n\n    return this;\n  }\n\n  public submit(callback?: (context: EventPluginContext) => void): void {\n    this.client.submitEvent(this.target, this.pluginContextData, callback);\n  }\n\n  private isValidIdentifier(value: string): boolean {\n    if (!value) {\n      return true;\n    }\n\n    if (value.length < 8 || value.length > 100) {\n      return false;\n    }\n\n    for (let index = 0; index < value.length; index++) {\n      let code = value.charCodeAt(index);\n      let isDigit = (code >= 48) && (code <= 57);\n      let isLetter = ((code >= 65) && (code <= 90)) || ((code >= 97) && (code <= 122));\n      let isMinus = code === 45;\n\n      if (!(isDigit || isLetter) && !isMinus) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n\nexport interface IUserDescription {\n  email_address?: string;\n  description?: string;\n  data?: any;\n}\n\nexport class ContextData {\n  public setException(exception: Error): void {\n    if (exception) {\n      this['@@_Exception'] = exception;\n    }\n  }\n\n  public get hasException(): boolean {\n    return !!this['@@_Exception'];\n  }\n\n  public getException(): Error {\n    return this['@@_Exception'] || null;\n  }\n\n  public markAsUnhandledError(): void {\n    this['@@_IsUnhandledError'] = true;\n  }\n\n  public get isUnhandledError(): boolean {\n    return !!this['@@_IsUnhandledError'];\n  }\n\n  public setSubmissionMethod(method: string): void {\n    if (method) {\n      this['@@_SubmissionMethod'] = method;\n    }\n  }\n\n  public getSubmissionMethod(): string {\n    return this['@@_SubmissionMethod'] || null;\n  }\n}\n\nexport class SubmissionResponse {\n  success: boolean = false;\n  badRequest: boolean = false;\n  serviceUnavailable: boolean = false;\n  paymentRequired: boolean = false;\n  unableToAuthenticate: boolean = false;\n  notFound: boolean = false;\n  requestEntityTooLarge: boolean = false;\n  statusCode: number;\n  message: string;\n\n  constructor(statusCode: number, message?: string) {\n    this.statusCode = statusCode;\n    this.message = message;\n\n    this.success = statusCode >= 200 && statusCode <= 299;\n    this.badRequest = statusCode === 400;\n    this.serviceUnavailable = statusCode === 503;\n    this.paymentRequired = statusCode === 402;\n    this.unableToAuthenticate = statusCode === 401 || statusCode === 403;\n    this.notFound = statusCode === 404;\n    this.requestEntityTooLarge = statusCode === 413;\n  }\n}\n\nn\nexport class ExceptionlessClient {\n  /**\n   * The default ExceptionlessClient instance.\n   * @type {ExceptionlessClient}\n   * @private\n   */\n  private static _instance: ExceptionlessClient = null;\n\n  public config: Configuration;\n\n  constructor();\n  constructor(settings: IConfigurationSettings);\n  constructor(apiKey: string, serverUrl?: string);\n  constructor(settingsOrApiKey?: IConfigurationSettings | string, serverUrl?: string) {\n    if (typeof settingsOrApiKey !== 'object') {\n      this.config = new Configuration(settingsOrApiKey);\n    } else {\n      this.config = new Configuration({ apiKey: <string>settingsOrApiKey, serverUrl: serverUrl });\n    }\n  }\n\n  public createException(exception: Error): EventBuilder {\n    let pluginContextData = new ContextData();\n    pluginContextData.setException(exception);\n    return this.createEvent(pluginContextData).setType('error');\n  }\n\n  public submitException(exception: Error, callback?: (context: EventPluginContext) => void): void {\n    this.createException(exception).submit(callback);\n  }\n\n  public createUnhandledException(exception: Error, submissionMethod?: string): EventBuilder {\n    let builder = this.createException(exception);\n    builder.pluginContextData.markAsUnhandledError();\n    builder.pluginContextData.setSubmissionMethod(submissionMethod);\n\n    return builder;\n  }\n\n  public submitUnhandledException(exception: Error, submissionMethod?: string, callback?: (context: EventPluginContext) => void) {\n    this.createUnhandledException(exception, submissionMethod).submit(callback);\n  }\n\n  public createFeatureUsage(feature: string): EventBuilder {\n    return this.createEvent().setType('usage').setSource(feature);\n  }\n\n  public submitFeatureUsage(feature: string, callback?: (context: EventPluginContext) => void): void {\n    this.createFeatureUsage(feature).submit(callback);\n  }\n\n  public createLog(message: string): EventBuilder;\n  public createLog(source: string, message: string): EventBuilder;\n  public createLog(source: string, message: string, level: string): EventBuilder;\n  public createLog(sourceOrMessage: string, message?: string, level?: string): EventBuilder {\n    let builder = this.createEvent().setType('log');\n\n    if (message && level) {\n      builder = builder.setSource(sourceOrMessage).setMessage(message).setProperty('@level', level);\n    } else if (message) {\n      builder = builder.setSource(sourceOrMessage).setMessage(message);\n    } else {\n      // TODO: Look into using https://www.stevefenton.co.uk/Content/Blog/Date/201304/Blog/Obtaining-A-Class-Name-At-Runtime-In-TypeScript/\n      let caller: any = arguments.callee.caller;\n      builder = builder.setSource(caller && caller.name).setMessage(sourceOrMessage);\n    }\n\n    return builder;\n  }\n\n  public submitLog(message: string): void;\n  public submitLog(source: string, message: string): void;\n  public submitLog(source: string, message: string, level: string, callback?: (context: EventPluginContext) => void): void;\n  public submitLog(sourceOrMessage: string, message?: string, level?: string, callback?: (context: EventPluginContext) => void): void {\n    this.createLog(sourceOrMessage, message, level).submit(callback);\n  }\n\n  public createNotFound(resource: string): EventBuilder {\n    return this.createEvent().setType('404').setSource(resource);\n  }\n\n  public submitNotFound(resource: string, callback?: (context: EventPluginContext) => void): void {\n    this.createNotFound(resource).submit(callback);\n  }\n\n  public createSessionStart(): EventBuilder {\n    return this.createEvent().setType('session');\n  }\n\n  public submitSessionStart(callback?: (context: EventPluginContext) => void): void {\n    this.createSessionStart().submit(callback);\n  }\n\n  public createSessionEnd(): EventBuilder {\n    return this.createEvent().setType('sessionend');\n  }\n\n  public submitSessionEnd(callback?: (context: EventPluginContext) => void): void {\n    this.createSessionEnd().submit(callback);\n  }\n\n  public createSessionHeartbeat(): EventBuilder {\n    return this.createEvent().setType('heartbeat');\n  }\n\n  public submitSessionHeartbeat(callback?: (context: EventPluginContext) => void): void {\n    this.createSessionHeartbeat().submit(callback);\n  }\n\n  public createEvent(pluginContextData?: ContextData): EventBuilder {\n    return new EventBuilder({ date: new Date() }, this, pluginContextData);\n  }\n\n  /**\n   * Submits the event to be sent to the server.\n   * @param event The event data.\n   * @param pluginContextData Any contextual data objects to be used by Exceptionless plugins to gather default information for inclusion in the report information.\n   * @param callback\n   */\n  public submitEvent(event: IEvent, pluginContextData?: ContextData, callback?: (context: EventPluginContext) => void): void {\n    function cancelled(context: EventPluginContext) {\n      if (!!context) {\n        context.cancelled = true;\n      }\n\n      return !!callback && callback(context);\n    }\n\n    let context = new EventPluginContext(this, event, pluginContextData);\n    if (!event) {\n      return cancelled(context);\n    }\n\n    if (!this.config.enabled) {\n      this.config.log.info('Event submission is currently disabled.');\n      return cancelled(context);\n    }\n\n    if (!event.data) {\n      event.data = {};\n    }\n\n    if (!event.tags || !event.tags.length) {\n      event.tags = [];\n    }\n\n    EventPluginManager.run(context, function(ctx: EventPluginContext) {\n      let ev = ctx.event;\n      if (!ctx.cancelled) {\n        // ensure all required data\n        if (!ev.type || ev.type.length === 0) {\n          ev.type = 'log';\n        }\n\n        if (!ev.date) {\n          ev.date = new Date();\n        }\n\n        let config = ctx.client.config;\n        config.queue.enqueue(ev);\n\n        if (ev.reference_id && ev.reference_id.length > 0) {\n          ctx.log.info(`Setting last reference id '${ev.reference_id}'`);\n          config.lastReferenceIdManager.setLast(ev.reference_id);\n        }\n      }\n\n      !!callback && callback(ctx);\n    });\n  }\n\n  /**\n   * Updates the user's email address and description of an event for the specified reference id.\n   * @param referenceId The reference id of the event to update.\n   * @param email The user's email address to set on the event.\n   * @param description The user's description of the event.\n   * @param callback The submission response.\n   */\n  public updateUserEmailAndDescription(referenceId: string, email: string, description: string, callback?: (response: SubmissionResponse) => void) {\n    if (!referenceId || !email || !description || !this.config.enabled) {\n      return !!callback && callback(new SubmissionResponse(500, 'cancelled'));\n    }\n\n    let userDescription: IUserDescription = { email_address: email, description: description };\n    this.config.submissionClient.postUserDescription(referenceId, userDescription, this.config, (response: SubmissionResponse) => {\n      if (!response.success) {\n        this.config.log.error(`Failed to submit user email and description for event '${referenceId}': ${response.statusCode} ${response.message}`);\n      }\n\n      !!callback && callback(response);\n    });\n  }\n\n  /**\n   * Gets the last event client id that was submitted to the server.\n   * @returns {string} The event client id.\n   */\n  public getLastReferenceId(): string {\n    return this.config.lastReferenceIdManager.getLast();\n  }\n\n  /**\n   * The default ExceptionlessClient instance.\n   * @type {ExceptionlessClient}\n   */\n  public static get default() {\n    if (ExceptionlessClient._instance === null) {\n      ExceptionlessClient._instance = new ExceptionlessClient(null);\n    }\n\n    return ExceptionlessClient._instance;\n  }\n}\n\nexport interface IModule {\n  data?: any;\n\n  module_id?: number;\n  name?: string;\n  version?: string;\n  is_entry?: boolean;\n  created_date?: Date;\n  modified_date?: Date;\n}\n\nexport interface IRequestInfo {\n  user_agent?: string;\n  http_method?: string;\n  is_secure?: boolean;\n  host?: string;\n  port?: number;\n  path?: string;\n  referrer?: string;\n  client_ip_address?: string;\n  cookies?: any;\n  post_data?: any;\n  query_string?: any;\n  data?: any;\n}\n\nexport interface IEnvironmentInfo {\n  processor_count?: number;\n  total_physical_memory?: number;\n  available_physical_memory?: number;\n  command_line?: string;\n  process_name?: string;\n  process_id?: string;\n  process_memory_size?: number;\n  thread_id?: string;\n  architecture?: string;\n  o_s_name?: string;\n  o_s_version?: string;\n  ip_address?: string;\n  machine_name?: string;\n  install_id?: string;\n  runtime_version?: string;\n  data?: any;\n}\n\nexport interface IParameter {\n  data?: any;\n  generic_arguments?: string[];\n\n  name?: string;\n  type?: string;\n  type_namespace?: string;\n}\n\n                                          \n\nexport interface IMethod {\n  data?: any;\n  generic_arguments?: string[];\n  parameters?: IParameter[];\n\n  is_signature_target?: boolean;\n  declaring_namespace?: string;\n  declaring_type?: string;\n  name?: string;\n  module_id?: number;\n}\n\n                                    \n\nexport interface IStackFrame extends IMethod {\n  file_name?: string;\n  line_number?: number;\n  column?: number;\n}\n\n                                                                                 \n\nexport interface IInnerError {\n  message?: string;\n  type?: string;\n  code?: string;\n  data?: any;\n  inner?: IInnerError;\n  stack_trace?: IStackFrame[];\n  target_method?: IMethod;\n}\n\n                                                                                                                                                \n\nexport class ConfigurationDefaultsPlugin implements IEventPlugin {\n  public priority: number = 10;\n  public name: string = 'ConfigurationDefaultsPlugin';\n\n  public run(context: EventPluginContext, next?: () => void): void {\n    let config = context.client.config;\n    let defaultTags: string[] = config.defaultTags || [];\n    for (let index = 0; index < defaultTags.length; index++) {\n      let tag = defaultTags[index];\n      if (!!tag && context.event.tags.indexOf(tag) < 0) {\n        context.event.tags.push(tag);\n      }\n    }\n\n    let defaultData: Object = config.defaultData || {};\n    for (let key in defaultData) {\n      if (!!defaultData[key]) {\n        let result = JSON.parse(Utils.stringify(defaultData[key], config.dataExclusions));\n        if (!Utils.isEmpty(result)) {\n          context.event.data[key] = result;\n        }\n      }\n    }\n\n    next && next();\n  }\n}\n\n                                                                                                                                                \n\nexport class ErrorPlugin implements IEventPlugin {\n  public priority: number = 30;\n  public name: string = 'ErrorPlugin';\n\n  public run(context: EventPluginContext, next?: () => void): void {\n    const ERROR_KEY: string = '@error'; // optimization for minifier.\n    let ignoredProperties: string[] = [\n      'arguments',\n      'column',\n      'columnNumber',\n      'description',\n      'fileName',\n      'message',\n      'name',\n      'number',\n      'line',\n      'lineNumber',\n      'opera#sourceloc',\n      'sourceId',\n      'sourceURL',\n      'stack',\n      'stackArray',\n      'stacktrace'\n    ];\n\n    let exception = context.contextData.getException();\n    if (!!exception) {\n      context.event.type = 'error';\n\n      if (!context.event.data[ERROR_KEY]) {\n        let config = context.client.config;\n        let parser = config.errorParser;\n        if (!parser) {\n          throw new Error('No error parser was defined.');\n        }\n\n        let result = parser.parse(context, exception);\n        if (!!result) {\n          let additionalData = JSON.parse(Utils.stringify(exception, config.dataExclusions.concat(ignoredProperties)));\n          if (!Utils.isEmpty(additionalData)) {\n            if (!result.data) {\n              result.data = {};\n            }\n            result.data['@ext'] = additionalData;\n          }\n\n          context.event.data[ERROR_KEY] = result;\n        }\n      }\n    }\n\n    next && next();\n  }\n}\n\n                                                                                                                                                           \n\nexport class ModuleInfoPlugin implements IEventPlugin {\n  public priority: number = 50;\n  public name: string = 'ModuleInfoPlugin';\n\n  public run(context: EventPluginContext, next?: () => void): void {\n    const ERROR_KEY: string = '@error'; // optimization for minifier.\n\n    let collector = context.client.config.moduleCollector;\n    if (context.event.data[ERROR_KEY] && !context.event.data['@error'].modules && !!collector) {\n      let modules: IModule[] = collector.getModules(context);\n      if (modules && modules.length > 0) {\n        context.event.data[ERROR_KEY].modules = modules;\n      }\n    }\n\n    next && next();\n  }\n}\n\n                                                                                                                                                                                                          \n\nexport class RequestInfoPlugin implements IEventPlugin {\n  public priority: number = 70;\n  public name: string = 'RequestInfoPlugin';\n\n  public run(context: EventPluginContext, next?: () => void): void {\n    const REQUEST_KEY: string = '@request'; // optimization for minifier.\n\n    let config = context.client.config;\n    let collector = config.requestInfoCollector;\n    if (!context.event.data[REQUEST_KEY] && !!collector) {\n      let requestInfo: IRequestInfo = collector.getRequestInfo(context);\n      if (!!requestInfo) {\n        if (Utils.isMatch(requestInfo.user_agent, config.userAgentBotPatterns)) {\n          context.log.info('Cancelling event as the request user agent matches a known bot pattern');\n          context.cancelled = true;\n        } else {\n          context.event.data[REQUEST_KEY] = requestInfo;\n        }\n      }\n    }\n\n    next && next();\n  }\n}\n\n                                                                                                                                                                             \n\nexport class EnvironmentInfoPlugin implements IEventPlugin {\n  public priority: number = 80;\n  public name: string = 'EnvironmentInfoPlugin';\n\n  public run(context: EventPluginContext, next?: () => void): void {\n    const ENVIRONMENT_KEY: string = '@environment'; // optimization for minifier.\n\n    let collector = context.client.config.environmentInfoCollector;\n    if (!context.event.data[ENVIRONMENT_KEY] && collector) {\n      let environmentInfo: IEnvironmentInfo = collector.getEnvironmentInfo(context);\n      if (!!environmentInfo) {\n        context.event.data[ENVIRONMENT_KEY] = environmentInfo;\n      }\n    }\n\n    next && next();\n  }\n}\n\n                                                                                                           \n\nexport class SubmissionMethodPlugin implements IEventPlugin {\n  public priority: number = 100;\n  public name: string = 'SubmissionMethodPlugin';\n\n  public run(context: EventPluginContext, next?: () => void): void {\n    let submissionMethod: string = context.contextData.getSubmissionMethod();\n    if (!!submissionMethod) {\n      context.event.data['@submission_method'] = submissionMethod;\n    }\n\n    next && next();\n  }\n}\n\n                                                                                                                                                                                                                                                   \n\nconst ERROR_KEY: string = '@error';\nconst WINDOW_MILLISECONDS = 2000;\nconst MAX_QUEUE_LENGTH = 10;\n\nexport class DuplicateCheckerPlugin implements IEventPlugin {\n  public priority: number = 40;\n  public name: string = 'DuplicateCheckerPlugin';\n\n  private recentlyProcessedErrors: TimestampedHash[] = [];\n\n  public run(context: EventPluginContext, next?: () => void): void {\n    if (context.event.type === 'error') {\n      let error = context.event.data[ERROR_KEY];\n      let isDuplicate = this.checkDuplicate(error, context.log);\n      if (isDuplicate) {\n        context.cancelled = true;\n        return;\n      }\n    }\n\n    next && next();\n  }\n\n  private getNow() {\n    return Date.now();\n  }\n\n  private checkDuplicate(error: IInnerError, log: ILog): boolean {\n    function getHashCodeForError(err: IInnerError): number {\n      if (!err.stack_trace) {\n        return null;\n      }\n\n      return Utils.getHashCode(JSON.stringify(err.stack_trace));\n    }\n\n    let now = this.getNow();\n    let repeatWindow = now - WINDOW_MILLISECONDS;\n    let hashCode: number;\n    while (error) {\n      hashCode = getHashCodeForError(error);\n\n      // make sure that we don't process the same error multiple times within the repeat window\n      if (hashCode && this.recentlyProcessedErrors.some(h =>\n        h.hash === hashCode && h.timestamp >= repeatWindow)) {\n        log.info(`Ignoring duplicate error event: hash=${hashCode}`);\n        return true;\n      }\n\n      // add this exception to our list of recent errors that we have processed\n      this.recentlyProcessedErrors.push({ hash: hashCode, timestamp: now });\n\n      // only keep the last 10 recent errors\n      while (this.recentlyProcessedErrors.length > MAX_QUEUE_LENGTH) {\n        this.recentlyProcessedErrors.shift();\n      }\n\n      error = error.inner;\n    }\n\n    return false;\n  }\n}\n\ninterface TimestampedHash {\n  hash: number;\n  timestamp: number;\n}\n\n                                                                                 \n\nexport interface IError extends IInnerError {\n  modules?: IModule[];\n}\n\nexport interface IStorageItem {\n  timestamp: number;\n  value: any;\n}\n\n                                              \n\nexport interface IStorage {\n  save(value: any): number;\n  get(limit?: number): IStorageItem[];\n  remove(timestamp: number): void;\n  clear(): void;\n}\n\nexport interface SubmissionCallback {\n  (status: number, message: string, data?: string, headers?: Object): void;\n}\n\nexport interface SubmissionRequest {\n  serverUrl: string;\n  apiKey: string;\n  userAgent: string;\n  method: string;\n  path: string;\n  data: string;\n}\n\nexport class SettingsResponse {\n  success: boolean = false;\n  settings: any;\n  settingsVersion: number = -1;\n  message: string;\n  exception: any;\n\n  constructor(success: boolean, settings: any, settingsVersion: number = -1, exception: any = null, message: string = null) {\n    this.success = success;\n    this.settings = settings;\n    this.settingsVersion = settingsVersion;\n    this.exception = exception;\n    this.message = message;\n  }\n}\n\n                                                                                     \n\nexport class InMemoryStorage implements IStorage {\n  private maxItems: number;\n  private items: IStorageItem[] = [];\n  private lastTimestamp: number = 0;\n\n  constructor(maxItems: number) {\n    this.maxItems = maxItems;\n  }\n\n  public save(value: any): number {\n    if (!value) {\n      return null;\n    }\n\n    let items = this.items;\n    let timestamp = Math.max(Date.now(), this.lastTimestamp + 1);\n    let item = { timestamp, value };\n\n    if (items.push(item) > this.maxItems) {\n      items.shift();\n    }\n\n    this.lastTimestamp = timestamp;\n    return item.timestamp;\n  }\n\n  public get(limit?: number): IStorageItem[] {\n    return this.items.slice(0, limit);\n  }\n\n  public remove(timestamp: number): void {\n    let items = this.items;\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].timestamp === timestamp) {\n        items.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  public clear(): void {\n    this.items = [];\n  }\n}\n\nexport interface IClientConfiguration {\n  settings: Object;\n  version: number;\n}\n\n                                                                                     \n\nexport abstract class KeyValueStorageBase implements IStorage {\n  private maxItems: number;\n  private items: number[];\n  private lastTimestamp: number = 0;\n\n  constructor(maxItems) {\n    this.maxItems = maxItems;\n  }\n\n  save(value: any, single?: boolean): number {\n    if (!value) {\n      return null;\n    }\n\n    this.ensureIndex();\n\n    let items = this.items;\n    let timestamp = Math.max(Date.now(), this.lastTimestamp + 1);\n    let key = this.getKey(timestamp);\n    let json = JSON.stringify(value);\n\n    try {\n      this.write(key, json);\n      this.lastTimestamp = timestamp;\n      if (items.push(timestamp) > this.maxItems) {\n        this.delete(this.getKey(items.shift()));\n      }\n    } catch (e) {\n      return null;\n    }\n\n    return timestamp;\n  }\n\n  get(limit?: number): IStorageItem[] {\n    this.ensureIndex();\n\n    return this.items.slice(0, limit)\n      .map(timestamp => {\n        // Read and parse item for this timestamp\n        let key = this.getKey(timestamp);\n        try {\n          let json = this.read(key);\n          let value = JSON.parse(json, parseDate);\n          return { timestamp, value };\n        } catch (error) {\n          // Something went wrong - try to delete the cause.\n          this.safeDelete(key);\n          return null;\n        }\n      })\n      .filter(item => item != null);\n  }\n\n  remove(timestamp: number): void {\n    this.ensureIndex();\n\n    let items = this.items;\n    let index = items.indexOf(timestamp);\n    if (index >= 0) {\n      let key = this.getKey(timestamp);\n      this.safeDelete(key);\n      items.splice(index, 1);\n    };\n  }\n\n  clear(): void {\n    this.items.forEach(item => this.safeDelete(this.getKey(item)));\n    this.items = [];\n  }\n\n  protected abstract write(key: string, value: string): void;\n  protected abstract read(key: string): string;\n  protected abstract readAllKeys(): string[];\n  protected abstract delete(key: string);\n  protected abstract getKey(timestamp: number): string;\n  protected abstract getTimestamp(key: string): number;\n\n  private ensureIndex() {\n    if (!this.items) {\n      this.items = this.createIndex();\n      this.lastTimestamp = Math.max(0, ...this.items) + 1;\n    }\n  }\n\n  private safeDelete(key: string): void {\n    try {\n      this.delete(key);\n    } catch (error) {\n    }\n  }\n\n  private createIndex() {\n    try {\n      let keys = this.readAllKeys();\n      return keys.map(key => {\n        try {\n          let timestamp = this.getTimestamp(key);\n          if (!timestamp) {\n            this.safeDelete(key);\n            return null;\n          }\n          return timestamp;\n        } catch (error) {\n          this.safeDelete(key);\n          return null;\n        }\n      }).filter(timestamp => timestamp != null)\n        .sort((a, b) => a - b);\n    } catch (error) {\n      return [];\n    }\n  }\n}\n\nfunction parseDate(key, value) {\n  let dateRegx = /\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)/g;\n  if (typeof value === 'string') {\n    let a = dateRegx.exec(value);\n    if (a) {\n      return new Date(value);\n    }\n  }\n  return value;\n};\n\n                                                            \n\nexport class BrowserStorage extends KeyValueStorageBase {\n  private prefix: string;\n\n  static isAvailable(): boolean {\n    try {\n      let storage = window.localStorage,\n        x = '__storage_test__';\n      storage.setItem(x, x);\n      storage.removeItem(x);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  constructor(namespace: string, prefix: string = 'com.exceptionless.', maxItems: number = 20) {\n    super(maxItems);\n\n    this.prefix = prefix + namespace + '-';\n  }\n\n  write(key: string, value: string) {\n    window.localStorage.setItem(key, value);\n  }\n\n  read(key: string) {\n    return window.localStorage.getItem(key);\n  }\n\n  readAllKeys() {\n    return Object.keys(window.localStorage)\n      .filter(key => key.indexOf(this.prefix) === 0);\n  }\n\n  delete(key: string) {\n    window.localStorage.removeItem(key);\n  }\n\n  getKey(timestamp) {\n    return this.prefix + timestamp;\n  }\n\n  getTimestamp(key) {\n    return parseInt(key.substr(this.prefix.length), 10);\n  }\n}\n\n                                                                                                                                                                                                                                                                     \n\nexport class DefaultErrorParser implements IErrorParser {\n  public parse(context: EventPluginContext, exception: Error): IError {\n    function getParameters(parameters: string | string[]): IParameter[] {\n      let params: string[] = (typeof parameters === 'string' ? [parameters] : parameters) || [];\n\n      let result: IParameter[] = [];\n      for (let index = 0; index < params.length; index++) {\n        result.push({ name: params[index] });\n      }\n\n      return result;\n    }\n\n    function getStackFrames(stackFrames: TraceKit.StackFrame[]): IStackFrame[] {\n      const ANONYMOUS: string = '<anonymous>';\n      let frames: IStackFrame[] = [];\n\n      for (let index = 0; index < stackFrames.length; index++) {\n        let frame = stackFrames[index];\n        frames.push({\n          name: (frame.func || ANONYMOUS).replace('?', ANONYMOUS),\n          parameters: getParameters(frame.args),\n          file_name: frame.url,\n          line_number: frame.line || 0,\n          column: frame.column || 0\n        });\n      }\n\n      return frames;\n    }\n\n    const TRACEKIT_STACK_TRACE_KEY: string = '@@_TraceKit.StackTrace'; // optimization for minifier.\n\n    let stackTrace: TraceKit.StackTrace = !!context.contextData[TRACEKIT_STACK_TRACE_KEY]\n      ? context.contextData[TRACEKIT_STACK_TRACE_KEY]\n      : TraceKit.computeStackTrace(exception, 25);\n\n    if (!stackTrace) {\n      throw new Error('Unable to parse the exceptions stack trace.');\n    }\n\n    return {\n      type: stackTrace.name,\n      message: stackTrace.message || exception.message,\n      stack_trace: getStackFrames(stackTrace.stack || [])\n    };\n  }\n}\n\n                                                                                                                                                                                                         \n\nexport class DefaultModuleCollector implements IModuleCollector {\n  public getModules(context: EventPluginContext): IModule[] {\n    if (document && document.getElementsByTagName) {\n      return null;\n    }\n\n    let modules: IModule[] = [];\n    let scripts: NodeListOf<HTMLScriptElement> = document.getElementsByTagName('script');\n    if (scripts && scripts.length > 0) {\n      for (let index = 0; index < scripts.length; index++) {\n        if (scripts[index].src) {\n          modules.push({\n            module_id: index,\n            name: scripts[index].src,\n            version: Utils.parseVersion(scripts[index].src)\n          });\n        } else if (!!scripts[index].innerHTML) {\n          modules.push({\n            module_id: index,\n            name: 'Script Tag',\n            version: Utils.getHashCode(scripts[index].innerHTML).toString()\n          });\n        }\n      }\n    }\n\n    return modules;\n  }\n}\n\n                                                                                                                                                                                                                             \n\nexport class DefaultRequestInfoCollector implements IRequestInfoCollector {\n  public getRequestInfo(context: EventPluginContext): IRequestInfo {\n    if (!document || !navigator || !location) {\n      return null;\n    }\n\n    let exclusions = context.client.config.dataExclusions;\n    let requestInfo: IRequestInfo = {\n      user_agent: navigator.userAgent,\n      is_secure: location.protocol === 'https:',\n      host: location.hostname,\n      port: location.port && location.port !== '' ? parseInt(location.port, 10) : 80,\n      path: location.pathname,\n      // client_ip_address: 'TODO',\n      cookies: Utils.getCookies(document.cookie, exclusions),\n      query_string: Utils.parseQueryString(location.search.substring(1), exclusions)\n    };\n\n    if (document.referrer && document.referrer !== '') {\n      requestInfo.referrer = document.referrer;\n    }\n\n    return requestInfo;\n  }\n}\n\n                                                                                                                                                                              \n\ndeclare var XDomainRequest: { new (); create(); };\n\nexport class DefaultSubmissionAdapter implements ISubmissionAdapter {\n  public sendRequest(request: SubmissionRequest, callback: SubmissionCallback, isAppExiting?: boolean) {\n    // TODO: Handle sending events when app is exiting with send beacon.\n    const TIMEOUT: string = 'timeout';  // optimization for minifier.\n    const LOADED: string = 'loaded';  // optimization for minifier.\n    const WITH_CREDENTIALS: string = 'withCredentials';  // optimization for minifier.\n\n    let isCompleted: boolean = false;\n    let useSetTimeout: boolean = false;\n    function complete(mode: string, xhr: XMLHttpRequest) {\n      function parseResponseHeaders(headerStr) {\n        function trim(value) {\n          return value.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n        }\n\n        let headers = {};\n        let headerPairs = (headerStr || '').split('\\u000d\\u000a');\n        for (let index: number = 0; index < headerPairs.length; index++) {\n          let headerPair = headerPairs[index];\n          // Can't use split() here because it does the wrong thing\n          // if the header value has the string \": \" in it.\n          let separator = headerPair.indexOf('\\u003a\\u0020');\n          if (separator > 0) {\n            headers[trim(headerPair.substring(0, separator).toLowerCase())] = headerPair.substring(separator + 2);\n          }\n        }\n\n        return headers;\n      }\n\n      if (isCompleted) {\n        return;\n      }\n\n      isCompleted = true;\n\n      let message: string = xhr.statusText;\n      let responseText: string = xhr.responseText;\n      let status: number = xhr.status;\n\n      if (mode === TIMEOUT || status === 0) {\n        message = 'Unable to connect to server.';\n        status = 0;\n      } else if (mode === LOADED && !status) {\n        status = request.method === 'POST' ? 202 : 200;\n      } else if (status < 200 || status > 299) {\n        let responseBody: any = xhr.responseBody;\n        if (!!responseBody && !!responseBody.message) {\n          message = responseBody.message;\n        } else if (!!responseText && responseText.indexOf('message') !== -1) {\n          try {\n            message = JSON.parse(responseText).message;\n          } catch (e) {\n            message = responseText;\n          }\n        }\n      }\n\n      callback(status || 500, message || '', responseText, parseResponseHeaders(xhr.getAllResponseHeaders && xhr.getAllResponseHeaders()));\n    }\n\n    function createRequest(userAgent: string, method: string, url: string): XMLHttpRequest {\n      let xhr: any = new XMLHttpRequest();\n      if (WITH_CREDENTIALS in xhr) {\n        xhr.open(method, url, true);\n\n        xhr.setRequestHeader('X-Exceptionless-Client', userAgent);\n        if (method === 'POST') {\n          xhr.setRequestHeader('Content-Type', 'application/json');\n        }\n      } else if (typeof XDomainRequest !== 'undefined') {\n        useSetTimeout = true;\n        xhr = new XDomainRequest();\n        xhr.open(method, location.protocol === 'http:' ? url.replace('https:', 'http:') : url);\n      } else {\n        xhr = null;\n      }\n\n      if (xhr) {\n        xhr.timeout = 10000;\n      }\n\n      return xhr;\n    }\n\n    let url = `${request.serverUrl}${request.path}?access_token=${encodeURIComponent(request.apiKey)}`;\n    let xhr = createRequest(request.userAgent, request.method || 'POST', url);\n    if (!xhr) {\n      return callback(503, 'CORS not supported.');\n    }\n\n    if (WITH_CREDENTIALS in xhr) {\n      xhr.onreadystatechange = () => {\n        // xhr not ready.\n        if (xhr.readyState !== 4) {\n          return;\n        }\n\n        complete(LOADED, xhr);\n      };\n    }\n\n    xhr.onprogress = () => { };\n    xhr.ontimeout = () => complete(TIMEOUT, xhr);\n    xhr.onerror = () => complete('error', xhr);\n    xhr.onload = () => complete(LOADED, xhr);\n\n    if (useSetTimeout) {\n      setTimeout(() => xhr.send(request.data), 500);\n    } else {\n      xhr.send(request.data);\n    }\n  }\n}\n\n                                                                                                                                                 \n\nexport class BrowserStorageProvider implements IStorageProvider {\n\n  queue: IStorage;\n  settings: IStorage;\n\n  constructor(prefix?: string, maxQueueItems: number = 250) {\n    this.queue = new BrowserStorage('q', prefix, maxQueueItems);\n    this.settings = new BrowserStorage('settings', prefix, 1);\n  }\n\n}\n\nn\nfunction getDefaultsSettingsFromScriptTag(): IConfigurationSettings {\n  if (!document || !document.getElementsByTagName) {\n    return null;\n  }\n\n  let scripts = document.getElementsByTagName('script');\n  for (let index = 0; index < scripts.length; index++) {\n    if (scripts[index].src && scripts[index].src.indexOf('/exceptionless') > -1) {\n      return Utils.parseQueryString(scripts[index].src.split('?').pop());\n    }\n  }\n  return null;\n}\n\nfunction processUnhandledException(stackTrace: TraceKit.StackTrace, options?: any): void {\n  let builder = ExceptionlessClient.default.createUnhandledException(new Error(stackTrace.message || (options || {}).status || 'Script error'), 'onerror');\n  builder.pluginContextData['@@_TraceKit.StackTrace'] = stackTrace;\n  builder.submit();\n}\n\n/*\nTODO: We currently are unable to parse string exceptions.\nfunction processJQueryAjaxError(event, xhr, settings, error:string): void {\n  let client = ExceptionlessClient.default;\n  if (xhr.status === 404) {\n    client.submitNotFound(settings.url);\n  } else if (xhr.status !== 401) {\n    client.createUnhandledException(error, 'JQuery.ajaxError')\n      .setSource(settings.url)\n      .setProperty('status', xhr.status)\n      .setProperty('request', settings.data)\n      .setProperty('response', xhr.responseText && xhr.responseText.slice && xhr.responseText.slice(0, 1024))\n      .submit();\n  }\n}\n*/\n\nConfiguration.prototype.useLocalStorage = function() {\n  if (BrowserStorage.isAvailable()) {\n    this.storage = new BrowserStorageProvider();\n    SettingsManager.applySavedServerSettings(this);\n  }\n};\n\nlet defaults = Configuration.defaults;\nlet settings = getDefaultsSettingsFromScriptTag();\nif (settings && (settings.apiKey || settings.serverUrl)) {\n  defaults.apiKey = settings.apiKey;\n  defaults.serverUrl = settings.serverUrl;\n}\n\ndefaults.errorParser = new DefaultErrorParser();\ndefaults.moduleCollector = new DefaultModuleCollector();\ndefaults.requestInfoCollector = new DefaultRequestInfoCollector();\ndefaults.submissionAdapter = new DefaultSubmissionAdapter();\n\nTraceKit.report.subscribe(processUnhandledException);\nTraceKit.extendToAsynchronousCallbacks();\n\n// window && window.addEventListener && window.addEventListener('beforeunload', function () {\n//   ExceptionlessClient.default.config.queue.process(true);\n// });\n\n// if (typeof $ !== 'undefined' && $(document)) {\n//   $(document).ajaxError(processJQueryAjaxError);\n// }\n\n(<any>Error).stackTraceLimit = Infinity;\n\ndeclare var $;\n\n"],"sourceRoot":"/source/"}