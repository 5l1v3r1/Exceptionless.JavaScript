{"version":3,"sources":["es6-promise.js","stackframe.js","node_modules/stackframe/dist/stackframe.min.js","error-stack-parser.js","stack-generator.js","stacktrace-gps.js","node_modules/error-stack-parser/dist/error-stack-parser.min.js","node_modules/stack-generator/dist/stack-generator.min.js","node_modules/es6-promise/dist/es6-promise.min.js","node_modules/stacktrace-gps/dist/stacktrace-gps.min.js","stacktrace.js","/source/Exceptionless.ts"],"names":["root","factory","define","amd","exports","module","StackFrame","this","_isNumber","n","isNaN","parseFloat","isFinite","functionName","args","fileName","lineNumber","columnNumber","undefined","setFunctionName","setArgs","setFileName","setLineNumber","setColumnNumber","prototype","getFunctionName","v","String","getArgs","Object","toString","call","TypeError","getFileName","getLineNumber","Number","getColumnNumber","join","require","ErrorStackParser","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","parse","ErrorStackParser$$parse","error","stacktrace","parseOpera","stack","match","parseV8OrIE","parseFFOrSafari","Error","extractLocation","ErrorStackParser$$extractLocation","urlLike","locationParts","split","lastNumber","pop","possibleNumber","length","ErrorStackParser$$parseV8OrIE","slice","map","line","tokens","replace","ErrorStackParser$$parseFFOrSafari","filter","shift","ErrorStackParser$$parseOpera","e","message","indexOf","parseOpera9","parseOpera10","parseOpera11","ErrorStackParser$$parseOpera9","lineRE","lines","result","i","len","exec","push","ErrorStackParser$$parseOpera10","ErrorStackParser$$parseOpera11","functionCall","argsRaw","StackGenerator","backtrace","StackGenerator$$backtrace","opts","maxStackSize","curr","arguments","callee","test","RegExp","$1","caller","StackTraceGPS","SourceMap","ES6Promise","polyfill","Promise","_createXMLHTTPObject","xmlhttp","XMLHttpFactories","XMLHttpRequest","ActiveXObject","_xdr","url","callback","errback","req","open","onerror","onreadystatechange","readyState","status","responseText","send","_findFunctionName","source","reFunctionDeclaration","reFunctionExpression","reFunctionEvaluation","code","maxLines","Math","min","m","commentPos","substr","_ensureSupportedEnvironment","defineProperty","create","_ensureStackFrameIsLegit","stackframe","_findSourceMappingURL","_newLocationInfoFromSourceMap","rawSourceMap","loc","SourceMapConsumer","originalPositionFor","column","name","sourceCache","_get","location","resolve","reject","offline","bind","pinpoint","StackTraceGPS$$pinpoint","getMappedLocation","then","findFunctionName","StackTraceGPS$$findFunctionName","getSourceCallback","guessedFunctionName","StackTraceGPS$$getMappedLocation","r","a","b","l","A","s","F","process","nextTick","t","G","B","c","document","createTextNode","observe","characterData","data","H","MessageChannel","port1","onmessage","port2","postMessage","I","setTimeout","p","J","d","K","f","q","g","L","u","constructor","M","x","C","D","k","h","y","N","o","O","E","Array","isArray","w","window","MutationObserver","WebKitMutationObserver","Uint8ClampedArray","importScripts","j","all","race","catch","z","global","self","StackTrace","_options","_merge","first","second","target","forEach","obj","prop","hasOwnProperty","_isShapedLikeParsableError","err","get","StackTrace$$get","fromError","generateArtificially","StackTrace$$fromError","stackframes","sf","resolveOriginal","_","StackTrace$$generateArtificially","stackFrames","instrument","StackTrace$$instrument","fn","thisArg","__stacktraceOriginalFn","instrumented","StackTrace$$instrumented","apply","deinstrument","StackTrace$$deinstrument"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CC77BC,SAA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","file":"exceptionless.js","sourcesContent":["/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   2.1.1\n */\n\n(function() {\n    \"use strict\";\n    function lib$es6$promise$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function lib$es6$promise$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function lib$es6$promise$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var lib$es6$promise$utils$$_isArray;\n    if (!Array.isArray) {\n      lib$es6$promise$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      lib$es6$promise$utils$$_isArray = Array.isArray;\n    }\n\n    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n    var lib$es6$promise$asap$$len = 0;\n    var lib$es6$promise$asap$$toString = {}.toString;\n    var lib$es6$promise$asap$$vertxNext;\n    function lib$es6$promise$asap$$asap(callback, arg) {\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n      lib$es6$promise$asap$$len += 2;\n      if (lib$es6$promise$asap$$len === 2) {\n        // If len is 2, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        lib$es6$promise$asap$$scheduleFlush();\n      }\n    }\n\n    var lib$es6$promise$asap$$default = lib$es6$promise$asap$$asap;\n\n    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n    var lib$es6$promise$asap$$isNode = typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n    // test for web worker but not in IE10\n    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function lib$es6$promise$asap$$useNextTick() {\n      var nextTick = process.nextTick;\n      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n      // setImmediate should be used instead instead\n      var version = process.versions.node.match(/^(?:(\\d+)\\.)?(?:(\\d+)\\.)?(\\*|\\d+)$/);\n      if (Array.isArray(version) && version[1] === '0' && version[2] === '10') {\n        nextTick = setImmediate;\n      }\n      return function() {\n        nextTick(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    // vertx\n    function lib$es6$promise$asap$$useVertxTimer() {\n      return function() {\n        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    function lib$es6$promise$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function lib$es6$promise$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = lib$es6$promise$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function lib$es6$promise$asap$$useSetTimeout() {\n      return function() {\n        setTimeout(lib$es6$promise$asap$$flush, 1);\n      };\n    }\n\n    var lib$es6$promise$asap$$queue = new Array(1000);\n    function lib$es6$promise$asap$$flush() {\n      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {\n        var callback = lib$es6$promise$asap$$queue[i];\n        var arg = lib$es6$promise$asap$$queue[i+1];\n\n        callback(arg);\n\n        lib$es6$promise$asap$$queue[i] = undefined;\n        lib$es6$promise$asap$$queue[i+1] = undefined;\n      }\n\n      lib$es6$promise$asap$$len = 0;\n    }\n\n    function lib$es6$promise$asap$$attemptVertex() {\n      try {\n        var r = require;\n        var vertx = r('vertx');\n        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n        return lib$es6$promise$asap$$useVertxTimer();\n      } catch(e) {\n        return lib$es6$promise$asap$$useSetTimeout();\n      }\n    }\n\n    var lib$es6$promise$asap$$scheduleFlush;\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (lib$es6$promise$asap$$isNode) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n    } else if (lib$es6$promise$asap$$isWorker) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n    } else if (lib$es6$promise$asap$$browserWindow === undefined && typeof require === 'function') {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertex();\n    } else {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n    }\n\n    function lib$es6$promise$$internal$$noop() {}\n\n    var lib$es6$promise$$internal$$PENDING   = void 0;\n    var lib$es6$promise$$internal$$FULFILLED = 1;\n    var lib$es6$promise$$internal$$REJECTED  = 2;\n\n    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$selfFullfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function lib$es6$promise$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.');\n    }\n\n    function lib$es6$promise$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n        return lib$es6$promise$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n       lib$es6$promise$asap$$default(function(promise) {\n        var sealed = false;\n        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            lib$es6$promise$$internal$$resolve(promise, value);\n          } else {\n            lib$es6$promise$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          lib$es6$promise$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          lib$es6$promise$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n      } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, thenable._result);\n      } else {\n        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable) {\n      if (maybeThenable.constructor === promise.constructor) {\n        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        var then = lib$es6$promise$$internal$$getThen(maybeThenable);\n\n        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        } else if (lib$es6$promise$utils$$isFunction(then)) {\n          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function lib$es6$promise$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFullfillment());\n      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n        lib$es6$promise$$internal$$handleMaybeThenable(promise, value);\n      } else {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      lib$es6$promise$$internal$$publish(promise);\n    }\n\n    function lib$es6$promise$$internal$$fulfill(promise, value) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = lib$es6$promise$$internal$$FULFILLED;\n\n      if (promise._subscribers.length !== 0) {\n        lib$es6$promise$asap$$default(lib$es6$promise$$internal$$publish, promise);\n      }\n    }\n\n    function lib$es6$promise$$internal$$reject(promise, reason) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n      promise._state = lib$es6$promise$$internal$$REJECTED;\n      promise._result = reason;\n\n      lib$es6$promise$asap$$default(lib$es6$promise$$internal$$publishRejection, promise);\n    }\n\n    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        lib$es6$promise$asap$$default(lib$es6$promise$$internal$$publish, parent);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function lib$es6$promise$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = lib$es6$promise$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n\n        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      } else if (failed) {\n        lib$es6$promise$$internal$$reject(promise, error);\n      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        lib$es6$promise$$internal$$reject(promise, e);\n      }\n    }\n\n    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n      var enumerator = this;\n\n      enumerator._instanceConstructor = Constructor;\n      enumerator.promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (enumerator._validateInput(input)) {\n        enumerator._input     = input;\n        enumerator.length     = input.length;\n        enumerator._remaining = input.length;\n\n        enumerator._init();\n\n        if (enumerator.length === 0) {\n          lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n        } else {\n          enumerator.length = enumerator.length || 0;\n          enumerator._enumerate();\n          if (enumerator._remaining === 0) {\n            lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n          }\n        }\n      } else {\n        lib$es6$promise$$internal$$reject(enumerator.promise, enumerator._validationError());\n      }\n    }\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validateInput = function(input) {\n      return lib$es6$promise$utils$$isArray(input);\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validationError = function() {\n      return new Error('Array Methods must be provided an Array');\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._init = function() {\n      this._result = new Array(this.length);\n    };\n\n    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {\n      var enumerator = this;\n\n      var length  = enumerator.length;\n      var promise = enumerator.promise;\n      var input   = enumerator._input;\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        enumerator._eachEntry(input[i], i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var enumerator = this;\n      var c = enumerator._instanceConstructor;\n\n      if (lib$es6$promise$utils$$isMaybeThenable(entry)) {\n        if (entry.constructor === c && entry._state !== lib$es6$promise$$internal$$PENDING) {\n          entry._onerror = null;\n          enumerator._settledAt(entry._state, i, entry._result);\n        } else {\n          enumerator._willSettleAt(c.resolve(entry), i);\n        }\n      } else {\n        enumerator._remaining--;\n        enumerator._result[i] = entry;\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var enumerator = this;\n      var promise = enumerator.promise;\n\n      if (promise._state === lib$es6$promise$$internal$$PENDING) {\n        enumerator._remaining--;\n\n        if (state === lib$es6$promise$$internal$$REJECTED) {\n          lib$es6$promise$$internal$$reject(promise, value);\n        } else {\n          enumerator._result[i] = value;\n        }\n      }\n\n      if (enumerator._remaining === 0) {\n        lib$es6$promise$$internal$$fulfill(promise, enumerator._result);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n      });\n    };\n    function lib$es6$promise$promise$all$$all(entries) {\n      return new lib$es6$promise$enumerator$$default(this, entries).promise;\n    }\n    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n    function lib$es6$promise$promise$race$$race(entries) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (!lib$es6$promise$utils$$isArray(entries)) {\n        lib$es6$promise$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n        return promise;\n      }\n\n      var length = entries.length;\n\n      function onFulfillment(value) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      }\n\n      function onRejection(reason) {\n        lib$es6$promise$$internal$$reject(promise, reason);\n      }\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        lib$es6$promise$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n      }\n\n      return promise;\n    }\n    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n    function lib$es6$promise$promise$resolve$$resolve(object) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$resolve(promise, object);\n      return promise;\n    }\n    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n    function lib$es6$promise$promise$reject$$reject(reason) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$reject(promise, reason);\n      return promise;\n    }\n    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n\n    var lib$es6$promise$promise$$counter = 0;\n\n    function lib$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function lib$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise’s eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function lib$es6$promise$promise$$Promise(resolver) {\n      this._id = lib$es6$promise$promise$$counter++;\n      this._state = undefined;\n      this._result = undefined;\n      this._subscribers = [];\n\n      if (lib$es6$promise$$internal$$noop !== resolver) {\n        if (!lib$es6$promise$utils$$isFunction(resolver)) {\n          lib$es6$promise$promise$$needsResolver();\n        }\n\n        if (!(this instanceof lib$es6$promise$promise$$Promise)) {\n          lib$es6$promise$promise$$needsNew();\n        }\n\n        lib$es6$promise$$internal$$initializePromise(this, resolver);\n      }\n    }\n\n    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n\n    lib$es6$promise$promise$$Promise.prototype = {\n      constructor: lib$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: function(onFulfillment, onRejection) {\n        var parent = this;\n        var state = parent._state;\n\n        if (state === lib$es6$promise$$internal$$FULFILLED && !onFulfillment || state === lib$es6$promise$$internal$$REJECTED && !onRejection) {\n          return this;\n        }\n\n        var child = new this.constructor(lib$es6$promise$$internal$$noop);\n        var result = parent._result;\n\n        if (state) {\n          var callback = arguments[state - 1];\n          lib$es6$promise$asap$$default(function(){\n            lib$es6$promise$$internal$$invokeCallback(state, child, callback, result);\n          });\n        } else {\n          lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n        }\n\n        return child;\n      },\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n    function lib$es6$promise$polyfill$$polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n          local = global;\n      } else if (typeof self !== 'undefined') {\n          local = self;\n      } else {\n          try {\n              local = Function('return this')();\n          } catch (e) {\n              throw new Error('polyfill failed because global object is unavailable in this environment');\n          }\n      }\n\n      var P = local.Promise;\n\n      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n        return;\n      }\n\n      local.Promise = lib$es6$promise$promise$$default;\n    }\n    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n\n    var lib$es6$promise$umd$$ES6Promise = {\n      'Promise': lib$es6$promise$promise$$default,\n      'polyfill': lib$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return lib$es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = lib$es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n    }\n\n    lib$es6$promise$polyfill$$default();\n}).call(this);\n\n","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function () {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function StackFrame(functionName, args, fileName, lineNumber, columnNumber) {\n        if (functionName !== undefined) {\n            this.setFunctionName(functionName);\n        }\n        if (args !== undefined) {\n            this.setArgs(args);\n        }\n        if (fileName !== undefined) {\n            this.setFileName(fileName);\n        }\n        if (lineNumber !== undefined) {\n            this.setLineNumber(lineNumber);\n        }\n        if (columnNumber !== undefined) {\n            this.setColumnNumber(columnNumber);\n        }\n    }\n\n    StackFrame.prototype = {\n        getFunctionName: function () {\n            return this.functionName;\n        },\n        setFunctionName: function (v) {\n            this.functionName = String(v);\n        },\n\n        getArgs: function () {\n            return this.args;\n        },\n        setArgs: function (v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        // NOTE: Property name may be misleading as it includes the path,\n        // but it somewhat mirrors V8's JavaScriptStackTraceApi\n        // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's\n        // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14\n        getFileName: function () {\n            return this.fileName;\n        },\n        setFileName: function (v) {\n            this.fileName = String(v);\n        },\n\n        getLineNumber: function () {\n            return this.lineNumber;\n        },\n        setLineNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Line Number must be a Number');\n            }\n            this.lineNumber = Number(v);\n        },\n\n        getColumnNumber: function () {\n            return this.columnNumber;\n        },\n        setColumnNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Column Number must be a Number');\n            }\n            this.columnNumber = Number(v);\n        },\n\n        toString: function() {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    return StackFrame;\n}));\n",null,"(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /\\S+\\:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /\\s+at /;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         * @param error {Error}\n         * @return Array[StackFrame]\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack && error.stack.match(FIREFOX_SAFARI_STACK_REGEXP)) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        /**\n         * Separate line and column numbers from a URL-like string.\n         * @param urlLike String\n         * @return Array[String]\n         */\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            var locationParts = urlLike.split(':');\n            var lastNumber = locationParts.pop();\n            var possibleNumber = locationParts[locationParts.length - 1];\n            if (!isNaN(parseFloat(possibleNumber)) && isFinite(possibleNumber)) {\n                var lineNumber = locationParts.pop();\n                return [locationParts.join(':'), lineNumber, lastNumber];\n            } else {\n                return [locationParts.join(':'), lastNumber, undefined];\n            }\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            return error.stack.split('\\n').slice(1).map(function (line) {\n                var tokens = line.replace(/^\\s+/, '').split(/\\s+/).slice(1);\n                var locationParts = this.extractLocation(tokens.pop().replace(/[\\(\\)\\s]/g, ''));\n                var functionName = (!tokens[0] || tokens[0] === 'Anonymous') ? undefined : tokens[0];\n                return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2]);\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            return error.stack.split('\\n').filter(function (line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP);\n            }, this).map(function (line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = tokens.shift() || undefined;\n                return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2]);\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame(undefined, undefined, match[2], match[1]));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame(match[3] || undefined, undefined, match[2], match[1]));\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            return error.stack.split('\\n').filter(function (line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) &&\n                    !line.match(/^Error created at/);\n            }, this).map(function (line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ? undefined : argsRaw.split(',');\n                return new StackFrame(functionName, args, locationParts[0], locationParts[1], locationParts[2]);\n            }, this);\n        }\n    };\n}));\n\n","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n    if (typeof define === 'function' && define.amd) {\n        define('stack-generator', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.StackGenerator = factory(root.StackFrame);\n    }\n}(this, function (StackFrame) {\n    return {\n        backtrace: function StackGenerator$$backtrace(opts) {\n            var stack = [];\n            var maxStackSize = 10;\n\n            if (typeof opts === 'object' && typeof opts.maxStackSize === 'number') {\n                maxStackSize = opts.maxStackSize;\n            }\n\n            var curr = arguments.callee;\n            while (curr && stack.length < maxStackSize) {\n                var args = [].slice.call(curr['arguments']);\n                if (/function(?:\\s+([\\w$]+))?\\s*\\(/.test(curr.toString())) {\n                    stack.push(new StackFrame(RegExp.$1 || undefined, args));\n                } else {\n                    stack.push(new StackFrame(undefined, args));\n                }\n\n                try {\n                    curr = curr.caller;\n                } catch (e) {\n                    break;\n                }\n            }\n            return stack;\n        }\n    };\n}));\n","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n    if (typeof define === 'function' && define.amd) {\n        define('stacktrace-gps', ['source-map', 'es6-promise', 'stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('source-map/lib/source-map/source-map-consumer'), require('es6-promise'), require('stackframe'));\n    } else {\n        root.StackTraceGPS = factory(root.SourceMap, root.ES6Promise, root.StackFrame);\n    }\n}(this, function (SourceMap, ES6Promise) {\n    'use strict';\n    ES6Promise.polyfill();\n    var Promise = ES6Promise.Promise;\n\n    /**\n     * Create XHR or equivalent object for this environment.\n     * @returns XMLHttpRequest, XDomainRequest or ActiveXObject\n     * @private\n     */\n    function _createXMLHTTPObject() {\n        var xmlhttp;\n        var XMLHttpFactories = [\n            function () {\n                return new XMLHttpRequest();\n            }, function () {\n                return new ActiveXObject('Microsoft.XMLHTTP');\n            }\n        ];\n        for (var i = 0; i < XMLHttpFactories.length; i++) {\n            try {\n                xmlhttp = XMLHttpFactories[i]();\n                // Use memoization to cache the factory\n                _createXMLHTTPObject = XMLHttpFactories[i]; // jshint ignore:line\n                return xmlhttp;\n            } catch (e) {\n            }\n        }\n    }\n\n    /**\n     * Make a X-Domain request to url and callback.\n     *\n     * @param url [String]\n     * @param callback [Function] to callback on completion\n     * @param errback [Function] to callback on error\n     */\n    function _xdr(url, callback, errback) {\n        var req = _createXMLHTTPObject();\n        req.open('get', url);\n        req.onerror = errback;\n        req.onreadystatechange = function onreadystatechange() {\n            if (req.readyState === 4) {\n                if (req.status >= 200 && req.status < 400) {\n                    return callback(req.responseText);\n                } else {\n                    errback(new Error('Unable to retrieve ' + url));\n                }\n            }\n        };\n        req.send();\n    }\n\n    function _findFunctionName(source, lineNumber, columnNumber) {\n        // function {name}({args}) m[1]=name m[2]=args\n        var reFunctionDeclaration = /function\\s+([^(]*?)\\s*\\(([^)]*)\\)/;\n        // {name} = function ({args}) TODO args capture\n        var reFunctionExpression = /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*function\\b/;\n        // {name} = eval()\n        var reFunctionEvaluation = /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*(?:eval|new Function)\\b/;\n        var lines = source.split(\"\\n\");\n\n        // Walk backwards in the source lines until we find the line which matches one of the patterns above\n        var code = '', line, maxLines = Math.min(lineNumber, 20), m, commentPos;\n        for (var i = 0; i < maxLines; ++i) {\n            // lineNo is 1-based, source[] is 0-based\n            line = lines[lineNumber - i - 1];\n            commentPos = line.indexOf('//');\n            if (commentPos >= 0) {\n                line = line.substr(0, commentPos);\n            }\n\n            if (line) {\n                code = line + code;\n                m = reFunctionExpression.exec(code);\n                if (m && m[1]) {\n                    return m[1];\n                }\n                m = reFunctionDeclaration.exec(code);\n                if (m && m[1]) {\n                    //return m[1] + \"(\" + (m[2] || \"\") + \")\";\n                    return m[1];\n                }\n                m = reFunctionEvaluation.exec(code);\n                if (m && m[1]) {\n                    return m[1];\n                }\n            }\n        }\n        return undefined;\n    }\n\n    function _ensureSupportedEnvironment() {\n        if (typeof Object.defineProperty !== 'function' || typeof Object.create !== 'function') {\n            throw new Error('Unable to consume source maps in older browsers');\n        }\n    }\n\n    function _ensureStackFrameIsLegit(stackframe) {\n        if (typeof stackframe !== 'object') {\n            throw new TypeError('Given StackFrame is not an object');\n        } else if (typeof stackframe.fileName !== 'string') {\n            throw new TypeError('Given file name is not a String');\n        } else if (typeof stackframe.lineNumber !== 'number' || stackframe.lineNumber % 1 !== 0 || stackframe.lineNumber < 1) {\n            throw new TypeError('Given line number must be a positive integer');\n        } else if (typeof stackframe.columnNumber !== 'number' || stackframe.columnNumber % 1 !== 0 || stackframe.columnNumber < 0) {\n            throw new TypeError('Given column number must be a non-negative integer');\n        }\n        return true;\n    }\n\n    function _findSourceMappingURL(source) {\n        var m = /\\/\\/[#@] ?sourceMappingURL=([^\\s'\"]+)$/.exec(source);\n        if (m && m[1]) {\n            return m[1];\n        } else {\n            throw new Error('sourceMappingURL not found');\n        }\n    }\n\n    function _newLocationInfoFromSourceMap(rawSourceMap, args, lineNumber, columnNumber) {\n        var loc = new SourceMap.SourceMapConsumer(rawSourceMap)\n            .originalPositionFor({line: lineNumber, column: columnNumber});\n        return new StackFrame(loc.name, args, loc.source, loc.line, loc.column);\n    }\n\n    /**\n     * @param opts: [Object] options.\n     *      opts.sourceCache = {url: \"Source String\"} => preload source cache\n     *      opts.offline = True to prevent network requests.\n     *              Best effort without sources or source maps.\n     */\n    return function StackTraceGPS(opts) {\n        if (!(this instanceof StackTraceGPS)) {\n            return new StackTraceGPS(opts);\n        }\n        opts = opts || {};\n\n        this.sourceCache = opts.sourceCache || {};\n\n        this._get = function _get(location) {\n            return new Promise(function (resolve, reject) {\n                if (this.sourceCache[location]) {\n                    resolve(this.sourceCache[location]);\n                } else if (opts.offline) {\n                    reject(new Error('Cannot make network requests in offline mode'));\n                } else {\n                    _xdr(location, function (source) {\n                        this.sourceCache[location] = source;\n                        resolve(source);\n                    }.bind(this), reject);\n                }\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, enhance function name and use source maps for a\n         * better StackFrame.\n         *\n         * @param stackframe - {StackFrame}-like object\n         *      {fileName: 'path/to/file.js', lineNumber: 100, columnNumber: 5}\n         * @return StackFrame with source-mapped location\n         */\n        this.pinpoint = function StackTraceGPS$$pinpoint(stackframe) {\n            return this.getMappedLocation(stackframe)\n                .then(this.findFunctionName.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, guess function name from location information.\n         *\n         * @param stackframe - {StackFrame}-like object\n         *      {fileName: 'path/to/file.js', lineNumber: 100, columnNumber: 5}\n         * @return StackFrame with guessed function name\n         */\n        this.findFunctionName = function StackTraceGPS$$findFunctionName(stackframe) {\n            return new Promise(function (resolve, reject) {\n                _ensureStackFrameIsLegit(stackframe);\n                this._get(stackframe.fileName).then(function getSourceCallback(source) {\n                    var guessedFunctionName = _findFunctionName(source, stackframe.lineNumber, stackframe.columnNumber);\n                    resolve(new StackFrame(guessedFunctionName, stackframe.args, stackframe.fileName, stackframe.lineNumber, stackframe.columnNumber));\n                }, reject);\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, seek source-mapped location and return new enhanced StackFrame.\n         *\n         * @param stackframe - {StackFrame}-like object\n         *      {fileName: 'path/to/file.js', lineNumber: 100, columnNumber: 5}\n         * @return StackFrame with source-mapped location\n         */\n        this.getMappedLocation = function StackTraceGPS$$getMappedLocation(stackframe) {\n            return new Promise(function (resolve, reject) {\n                _ensureSupportedEnvironment();\n                _ensureStackFrameIsLegit(stackframe);\n\n                this._get(stackframe.fileName).then(function (source) {\n                    this._get(_findSourceMappingURL(source)).then(function (map) {\n                        var lineNumber = stackframe.lineNumber;\n                        var columnNumber = stackframe.columnNumber;\n                        resolve(_newLocationInfoFromSourceMap(map, stackframe.args, lineNumber, columnNumber));\n                    }, reject)['catch'](reject);\n                }.bind(this), reject)['catch'](reject);\n            }.bind(this));\n        };\n    };\n}));\n",null,null,null,null,"(function (root, factory) {\r\n    'use strict';\r\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('stacktrace', ['error-stack-parser', 'stack-generator', 'stacktrace-gps', 'es6-promise'], factory);\r\n    } else if (typeof exports === 'object') {\r\n        module.exports = factory(require('error-stack-parser'), require('stack-generator'), require('stacktrace-gps'), require('es6-promise'));\r\n    } else {\r\n        root.StackTrace = factory(root.ErrorStackParser, root.StackGenerator, root.StackTraceGPS, root.ES6Promise);\r\n    }\r\n}(this, function StackTrace(ErrorStackParser, StackGenerator, StackTraceGPS, ES6Promise) {\r\n    ES6Promise.polyfill();\r\n    var Promise = ES6Promise.Promise;\r\n\r\n    var _options = {\r\n        filter: function (stackframe) {\r\n            // Filter out stackframes for this library by default\r\n            return (stackframe.functionName || '').indexOf('StackTrace$$') === -1 &&\r\n                (stackframe.functionName || '').indexOf('ErrorStackParser$$') === -1 &&\r\n                (stackframe.functionName || '').indexOf('StackTraceGPS$$') === -1 &&\r\n                (stackframe.functionName || '').indexOf('StackGenerator$$') === -1;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Merge 2 given Objects. If a conflict occurs the second object wins.\r\n     * Does not do deep merges.\r\n     * @param first Object\r\n     * @param second Object\r\n     * @returns new Object merged first and second\r\n     * @private\r\n     */\r\n    function _merge(first, second) {\r\n        var target = {};\r\n\r\n        [first, second].forEach(function (obj) {\r\n            for (var prop in obj) {\r\n                if (obj.hasOwnProperty(prop)) {\r\n                    target[prop] = obj[prop];\r\n                }\r\n            }\r\n            return target;\r\n        });\r\n\r\n        return target;\r\n    }\r\n\r\n    function _isShapedLikeParsableError(err) {\r\n        return err.stack || err['opera#sourceloc'];\r\n    }\r\n\r\n    return {\r\n        /**\r\n         * Get a backtrace from invocation point.\r\n         * @param opts Options Object\r\n         * @return Array[StackFrame]\r\n         */\r\n        get: function StackTrace$$get(opts) {\r\n            try {\r\n                // Error must be thrown to get stack in IE\r\n                throw new Error();\r\n            } catch (err) {\r\n                if (_isShapedLikeParsableError(err)) {\r\n                    return this.fromError(err, opts);\r\n                } else {\r\n                    return this.generateArtificially(opts);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Given an error object, parse it.\r\n         * @param error Error object\r\n         * @param opts Object for options\r\n         * @return Array[StackFrame]\r\n         */\r\n        fromError: function StackTrace$$fromError(error, opts) {\r\n            opts = _merge(_options, opts);\r\n            return new Promise(function (resolve) {\r\n                var stackframes = ErrorStackParser.parse(error);\r\n                if (typeof opts.filter === 'function') {\r\n                    stackframes = stackframes.filter(opts.filter);\r\n                }\r\n                resolve(Promise.all(stackframes.map(function (sf) {\r\n                    return new Promise(function (resolve) {\r\n                        function resolveOriginal(_) {\r\n                            resolve(sf);\r\n                        }\r\n\r\n                        new StackTraceGPS(opts).pinpoint(sf)\r\n                            .then(resolve, resolveOriginal)['catch'](resolveOriginal);\r\n                    });\r\n                })));\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Use StackGenerator to generate a backtrace.\r\n         * @param opts Object options\r\n         * @returns Array[StackFrame]\r\n         */\r\n        generateArtificially: function StackTrace$$generateArtificially(opts) {\r\n            opts = _merge(_options, opts);\r\n            var stackFrames = StackGenerator.backtrace(opts);\r\n            if (typeof opts.filter === 'function') {\r\n                stackFrames = stackFrames.filter(opts.filter);\r\n            }\r\n            return Promise.resolve(stackFrames);\r\n        },\r\n\r\n        /**\r\n         * Given a function, wrap it such that invocations trigger a callback that\r\n         * is called with a stack trace.\r\n         *\r\n         * @param {Function} fn to be instrumented\r\n         * @param {Function} callback function to call with a stack trace on invocation\r\n         * @param {Function} errback optional function to call with error if unable to get stack trace.\r\n         * @param {Object} thisArg optional context object (e.g. window)\r\n         */\r\n        instrument: function StackTrace$$instrument(fn, callback, errback, thisArg) {\r\n            if (typeof fn !== 'function') {\r\n                throw new Error('Cannot instrument non-function object');\r\n            } else if (typeof fn.__stacktraceOriginalFn === 'function') {\r\n                // Already instrumented, return given Function\r\n                return fn;\r\n            }\r\n\r\n            var instrumented = function StackTrace$$instrumented() {\r\n                try {\r\n                    this.get().then(callback, errback)['catch'](errback);\r\n                    fn.apply(thisArg || this, arguments);\r\n                } catch (e) {\r\n                    if (_isShapedLikeParsableError(e)) {\r\n                        this.fromError(e).then(callback, errback)['catch'](errback);\r\n                    }\r\n                    throw e;\r\n                }\r\n            }.bind(this);\r\n            instrumented.__stacktraceOriginalFn = fn;\r\n\r\n            return instrumented;\r\n        },\r\n\r\n        /**\r\n         * Given a function that has been instrumented,\r\n         * revert the function to it's original (non-instrumented) state.\r\n         *\r\n         * @param fn {Function}\r\n         */\r\n        deinstrument: function StackTrace$$deinstrument(fn) {\r\n            if (typeof fn !== 'function') {\r\n                throw new Error('Cannot de-instrument non-function object');\r\n            } else if (typeof fn.__stacktraceOriginalFn === 'function') {\r\n                return fn.__stacktraceOriginalFn;\r\n            } else {\r\n                // Function not instrumented, return original\r\n                return fn;\r\n            }\r\n        }\r\n    };\r\n}));\r\n","export interface IBootstrapper {\n  register():void;\n}\n\nexport interface ILastReferenceIdManager {\r\n  getLast(): string;\r\n  clearLast(): void;\r\n  setLast(eventId:string): void;\r\n}\r\n\nexport interface ILog {\r\n  info(message:string);\r\n  warn(message:string);\r\n  error(message:string);\r\n}\r\n\nexport interface IEvent {\n  type?:string;\n  source?:string;\n  date?:Date;\n  tags?:string[];\n  message?:string;\n  geo?:string;\n  value?:number;\n  data?:any;\n  reference_id?:string;\n  session_id?:string;\n}\n\n                                          \r\n\r\nexport interface IEventQueue {\r\n  enqueue(event:IEvent);\r\n  process();\r\n  suspendProcessing(durationInMinutes?:number, discardFutureQueuedItems?:boolean, clearQueue?:boolean);\r\n}\r\n\nexport interface IEnvironmentInfo {\n  processor_count?:number;\n  total_physical_memory?:number;\n  available_physical_memory?:number;\n  command_line?:string;\n  process_name?:string;\n  process_id?:string;\n  process_memory_size?:number;\n  thread_id?:string;\n  architecture?:string;\n  o_s_name?:string;\n  o_s_version?:string;\n  ip_address?:string;\n  machine_name?:string;\n  install_id?:string;\n  runtime_version?:string;\n  data?:any;\n}\n\nexport class ContextData {\r\n  public setException(exception:Error): void {\r\n    this['@@_Exception'] = exception;\r\n  }\r\n\r\n  public get hasException(): boolean {\r\n    return !!this['@@_Exception']\r\n  }\r\n\r\n  public getException(): Error {\r\n    if (!this.hasException) {\r\n      return null;\r\n    }\r\n\r\n    return this['@@_Exception'];\r\n  }\r\n\r\n  public markAsUnhandledError(): void {\r\n    this['@@_IsUnhandledError'] = true;\r\n  }\r\n\r\n  public get isUnhandledError(): boolean {\r\n    return !!this['@@_IsUnhandledError'];\r\n  }\r\n\r\n  public setSubmissionMethod(method:string): void {\r\n    if (method && method.length > 0) {\r\n      this['@@_SubmissionMethod'] = method;\r\n    }\r\n  }\r\n\r\n  public getSubmissionMethod(): string {\r\n    if (!!this['@@_SubmissionMethod']) {\r\n      return null;\r\n    }\r\n\r\n    return this['@@_SubmissionMethod'];\r\n  }\r\n}\r\n\n                                                                                                                                   \r\n\r\nexport interface IEnvironmentInfoCollector {\r\n  getEnvironmentInfo(context:EventPluginContext):IEnvironmentInfo;\r\n}\r\n\n                                                                                                               \r\n\r\nexport interface IErrorParser {\r\n  parse(context:EventPluginContext, exception:Error):Promise<IError>;\r\n}\r\n\n                                                                                                                \n\nexport interface IModuleCollector {\n  getModules(context:EventPluginContext):IModule[];\n}\n\n                                                                                                                           \r\n\r\nexport interface IRequestInfoCollector {\r\n  getRequestInfo(context:EventPluginContext):IRequestInfo;\r\n}\r\n\nexport interface IStorage<T>{\r\n  save<T>(path:string, value:T): boolean;\r\n  get(searchPattern?:string, limit?:number): T[];\r\n  clear(searchPattern?:string);\r\n  count(searchPattern?:string): number;\r\n}\r\n\n                                                                                                                                                                                                                                                                                               \r\n\r\nexport interface ISubmissionClient {\r\n  submit(events:IEvent[], config:Configuration): Promise<SubmissionResponse>;\r\n  submitDescription(referenceId:string, description:IUserDescription, config:Configuration): Promise<SubmissionResponse>;\r\n  getSettings(config:Configuration): Promise<SettingsResponse>;\r\n}\r\n\nn\nexport interface IConfigurationSettings {\n  apiKey?:string;\n  serverUrl?:string;\n  environmentInfoCollector?:IEnvironmentInfoCollector;\n  errorParser?:IErrorParser;\n  lastReferenceIdManager?:ILastReferenceIdManager;\n  log?:ILog;\n  moduleCollector?:IModuleCollector;\n  requestInfoCollector?:IRequestInfoCollector;\n  submissionBatchSize?:number;\n  submissionClient?:ISubmissionClient;\n  storage?:IStorage<any>;\n  queue?:IEventQueue;\n}\n\n                                                                    \r\n\r\nexport class InMemoryLastReferenceIdManager implements ILastReferenceIdManager {\r\n  private _lastReferenceId:string = null;\r\n\r\n  getLast(): string {\r\n    return this._lastReferenceId;\r\n  }\r\n\r\n  clearLast():void {\r\n    this._lastReferenceId = null;\r\n  }\r\n\r\n  setLast(eventId:string):void {\r\n    this._lastReferenceId = eventId;\r\n  }\r\n}\r\n\n                              \n\nexport class ConsoleLog implements ILog {\n  public info(message) {\n    if (console && console.info) {\n      console.info(`[INFO] Exceptionless:${message}`)\n    }\n  }\n\n  public warn(message) {\n    if (console && console.warn) {\n      console.warn(`[Warn] Exceptionless:${message}`)\n    }\n  }\n\n  public error(message) {\n    if (console && console.error) {\n      console.error(`[Error] Exceptionless:${message}`)\n    }\n  }\n}\n\n                              \r\n\r\nexport class NullLog implements ILog {\r\n  public info(message) {}\r\n  public warn(message) {}\r\n  public error(message) {}\r\n}\r\n\nexport interface IUserInfo {\n  identity?:string;\n  name?:string;\n  data?:any;\n}\n\n                                                                                                          \r\n\r\nexport interface IEventPlugin {\r\n  priority?:number;\r\n  name?:string;\r\n  run(context:EventPluginContext): Promise<any>;\r\n}\r\n\n                                                                                                                                                                                                                                                \r\n\r\nexport class EventPluginContext {\r\n  public client:ExceptionlessClient;\r\n  public event:IEvent;\r\n  public contextData:ContextData;\r\n  public cancel:boolean = false;\r\n\r\n  constructor(client:ExceptionlessClient, event:IEvent, contextData?:ContextData) {\r\n    this.client = client;\r\n    this.event = event;\r\n    this.contextData = contextData ? contextData : new ContextData();\r\n  }\r\n\r\n  public get log(): ILog {\r\n    return this.client.config.log;\r\n  }\r\n}\r\n\nr\n\r\nexport class EventPluginManager {\r\n  public static run(context:EventPluginContext): Promise<any> {\r\n    return context.client.config.plugins.reduce((promise:Promise<any>, plugin:IEventPlugin) => {\r\n      return promise.then(() => {\r\n        return plugin.run(context);\r\n      });\r\n    }, Promise.resolve());\r\n  }\r\n\r\n  public static addDefaultPlugins(config:Configuration): void {\r\n    config.addPlugin(new ConfigurationDefaultsPlugin());\r\n    config.addPlugin(new ErrorPlugin());\r\n    config.addPlugin(new DuplicateCheckerPlugin());\r\n    config.addPlugin(new ModuleInfoPlugin());\r\n    config.addPlugin(new RequestInfoPlugin());\r\n    config.addPlugin(new EnvironmentInfoPlugin())\r\n    config.addPlugin(new SubmissionMethodPlugin());\r\n  }\r\n}\r\n\n                                                                                                                                                  \r\n\r\nexport class ReferenceIdPlugin implements IEventPlugin {\r\n  public priority:number = 20;\r\n  public name:string = 'ReferenceIdPlugin';\r\n\r\n  run(context:EventPluginContext): Promise<any> {\r\n    if ((!context.event.reference_id || context.event.reference_id.length === 0) && context.event.type === 'error') {\r\n      context.event.reference_id = Utils.guid().replace('-', '').substring(0, 10);\r\n    }\r\n\r\n    return Promise.resolve();\r\n  }\r\n}\r\n\n                                                                                                                                                                                                                                                                       \n\nexport class DefaultEventQueue implements IEventQueue {\n  private _config:Configuration;\n  private _suspendProcessingUntil:Date;\n  private _discardQueuedItemsUntil:Date;\n  private _processingQueue:boolean = false;\n  private _queueTimer:any;\n\n  constructor(config:Configuration) {\n    this._config = config;\n  }\n\n  public enqueue(event:IEvent) {\n    this.ensureQueueTimer();\n\n    if (this.areQueuedItemsDiscarded()) {\n      this._config.log.info('Queue items are currently being discarded. The event will not be queued.');\n      return;\n    }\n\n    var key = `${this.queuePath()}-${new Date().toJSON()}-${Utils.randomNumber()}`;\n    this._config.log.info(`Enqueuing event: ${key}`);\n    return this._config.storage.save(key, event);\n  }\n\n  public process() {\n    this.ensureQueueTimer();\n\n    if (this._processingQueue) {\n      return;\n    }\n\n    this._config.log.info('Processing queue...');\n    if (!this._config.enabled) {\n      this._config.log.info('Configuration is disabled. The queue will not be processed.');\n      return;\n    }\n\n    this._processingQueue = true;\n\n    try {\n      var events = this._config.storage.get(this.queuePath(), this._config.submissionBatchSize);\n      if (!events || events.length == 0) {\n        this._config.log.info('There are currently no queued events to process.');\n        return;\n      }\n\n      this._config.log.info(`Sending ${events.length} events to ${this._config.serverUrl}.`);\n      this._config.submissionClient.submit(events, this._config)\n        .then(\n        (response:SubmissionResponse) => this.processSubmissionResponse(response, events),\n        (response:SubmissionResponse) => this.processSubmissionResponse(response, events))\n        .then(() => {\n          this._config.log.info('Finished processing queue.');\n          this._processingQueue = false;\n        });\n    } catch (ex) {\n      this._config.log.error(`An error occurred while processing the queue: ${ex}`);\n      this.suspendProcessing();\n      this._processingQueue = false;\n    }\n  }\n\n  private processSubmissionResponse(response:SubmissionResponse, events:IEvent[]){\n    if (response.success) {\n      this._config.log.info(`Sent ${events.length} events to ${this._config.serverUrl}.`);\n      return;\n    }\n\n    if (response.serviceUnavailable) {\n      // You are currently over your rate limit or the servers are under stress.\n      this._config.log.error('Server returned service unavailable.');\n      this.suspendProcessing();\n      this.requeueEvents(events);\n      return;\n    }\n\n    if (response.paymentRequired) {\n      // If the organization over the rate limit then discard the event.\n      this._config.log.info('Too many events have been submitted, please upgrade your plan.');\n      this.suspendProcessing(null, true, true);\n      return;\n    }\n\n    if (response.unableToAuthenticate) {\n      // The api key was suspended or could not be authorized.\n      this._config.log.info('Unable to authenticate, please check your configuration. The event will not be submitted.');\n      this.suspendProcessing(15);\n      return;\n    }\n\n    if (response.notFound || response.badRequest) {\n      // The service end point could not be found.\n      this._config.log.error(`Error while trying to submit data: ${response.message}`);\n      this.suspendProcessing(60 * 4);\n      return;\n    }\n\n    if (response.requestEntityTooLarge) {\n      if (this._config.submissionBatchSize > 1) {\n        this._config.log.error('Event submission discarded for being too large. The event will be retried with a smaller events size.');\n        this._config.submissionBatchSize = Math.max(1, Math.round(this._config.submissionBatchSize / 1.5));\n        this.requeueEvents(events);\n      } else {\n        this._config.log.error('Event submission discarded for being too large. The event will not be submitted.');\n      }\n\n      return;\n    }\n\n    if (!response.success) {\n      this._config.log.error(`An error occurred while submitting events: ${ response.message}`);\n      this.suspendProcessing();\n      this.requeueEvents(events);\n    }\n  }\n\n  private ensureQueueTimer() : void {\n    if (!this._queueTimer) {\n      this._queueTimer = setInterval(() => this.onProcessQueue(), 10000);\n    }\n  }\n\n  private onProcessQueue(): void {\n    if (!this.isQueueProcessingSuspended() && !this._processingQueue) {\n      this.process();\n    }\n  }\n\n  public suspendProcessing(durationInMinutes?:number, discardFutureQueuedItems?:boolean, clearQueue?:boolean): void {\n    if (!durationInMinutes || durationInMinutes <= 0) {\n      durationInMinutes = 5;\n    }\n\n    this._config.log.info(`Suspending processing for ${durationInMinutes} minutes.`);\n    this._suspendProcessingUntil = new Date(new Date().getTime() + (durationInMinutes * 60000));\n\n    if (discardFutureQueuedItems) {\n      this._discardQueuedItemsUntil = new Date(new Date().getTime() + (durationInMinutes * 60000));\n    }\n\n    if (!clearQueue) {\n      return;\n    }\n\n    // Account is over the limit and we want to ensure that the sample size being sent in will contain newer errors.\n    try {\n      this._config.storage.clear(this.queuePath());\n    } catch (Exception) { }\n  }\n\n  private requeueEvents(events:IEvent[]): void {\n    this._config.log.info(`Requeuing ${events.length} events.`);\n\n    for (var index = 0; index < events.length; index++) {\n      this.enqueue(events[index]);\n    }\n  }\n\n  private isQueueProcessingSuspended(): boolean {\n    return this._suspendProcessingUntil && this._suspendProcessingUntil > new Date();\n  }\n\n  private areQueuedItemsDiscarded(): boolean {\n    return this._discardQueuedItemsUntil && this._discardQueuedItemsUntil > new Date();\n  }\n\n  private queuePath(): string {\n    return !!this._config.apiKey ? `ex-${this._config.apiKey.slice(0, 8)}-q` : null;\n  }\n}\n\n                                      \r\n\r\nexport class InMemoryStorage<T> implements IStorage<T> {\r\n  private _items = {};\r\n\r\n  public save<T>(path:string, value:T):boolean {\r\n    this._items[path] = value;\r\n    return true;\r\n  }\r\n\r\n  public get(searchPattern?:string, limit?:number):T[] {\r\n    var results = [];\r\n    var regex = new RegExp(searchPattern || '.*');\r\n\r\n    for (var key in this._items) {\r\n      if (results.length >= limit) {\r\n        break;\r\n      }\r\n\r\n      if (regex.test(key)) {\r\n        results.push(this._items[key]);\r\n        delete this._items[key];\r\n      }\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  public clear(searchPattern?:string) {\r\n    if (!searchPattern) {\r\n      this._items = {};\r\n      return;\r\n    }\r\n\r\n    var regex = new RegExp(searchPattern);\r\n    for (var key in this._items) {\r\n      if (regex.test(key)) {\r\n        delete this._items[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  public count(searchPattern?:string):number {\r\n    var regex = new RegExp(searchPattern || '.*');\r\n    var results = [];\r\n    for (var key in this._items) {\r\n      if (regex.test(key)) {\r\n        results.push(key);\r\n      }\r\n    }\r\n\r\n    return results.length;\r\n  }\r\n}\r\n\nexport class Utils {\r\n  public static getHashCode(source:string): string {\r\n    if (!source || source.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    var hash:number = 0;\r\n    for (var index = 0; index < source.length; index++) {\r\n      var character   = source.charCodeAt(index);\r\n      hash  = ((hash << 5) - hash) + character;\r\n      hash |= 0;\r\n    }\r\n\r\n    return hash.toString();\r\n  }\r\n\r\n  public static guid(): string {\r\n    function s4() {\r\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\r\n  }\r\n\r\n  public static merge(defaultValues:any, values:any) {\r\n    var result = {};\r\n\r\n    for (var key in defaultValues || {}) {\r\n      if (!!defaultValues[key]) {\r\n        result[key] = defaultValues[key];\r\n      }\r\n    }\r\n\r\n    for (var key in values || {}) {\r\n      if (!!values[key]) {\r\n        result[key] = values[key];\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public static parseVersion(source:string): string {\r\n    if (!source) {\r\n      return null;\r\n    }\r\n\r\n    var versionRegex = /(v?((\\d+)\\.(\\d+)(\\.(\\d+))?)(?:-([\\dA-Za-z\\-]+(?:\\.[\\dA-Za-z\\-]+)*))?(?:\\+([\\dA-Za-z\\-]+(?:\\.[\\dA-Za-z\\-]+)*))?)/;\r\n    var matches = versionRegex.exec(source);\r\n    if (matches && matches.length > 0) {\r\n      return matches[0];\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public static parseQueryString(query:string) {\r\n    if (!query || query.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    var pairs = query.split('&');\r\n    if (pairs.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    var result = {};\r\n    for (var index = 0; index < pairs.length; index++) {\r\n      var pair = pairs[index].split('=');\r\n      result[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public static randomNumber(): number {\r\n    return Math.floor(Math.random() * 9007199254740992);\r\n  }\r\n\r\n  public static stringify(data:any): string {\r\n    var cache = [];\r\n\r\n    return JSON.stringify(data, function(key, value) {\r\n      if (typeof value === 'object' && value !== null) {\r\n        if (cache.indexOf(value) !== -1) {\r\n          // Circular reference found, discard key\r\n          return;\r\n        }\r\n\r\n        cache.push(value);\r\n      }\r\n\r\n      return value;\r\n    });\r\n  }\r\n}\r\n\nn\nexport class Configuration implements IConfigurationSettings {\n  private _apiKey:string;\n  private _enabled:boolean = false;\n  private _serverUrl:string = 'https://collector.exceptionless.io';\n  private _plugins:IEventPlugin[] = [];\n\n  public environmentInfoCollector:IEnvironmentInfoCollector;\n  public errorParser:IErrorParser;\n  public lastReferenceIdManager:ILastReferenceIdManager = new InMemoryLastReferenceIdManager();\n  public log:ILog;\n  public moduleCollector:IModuleCollector;\n  public requestInfoCollector:IRequestInfoCollector;\n  public submissionBatchSize;\n  public submissionClient:ISubmissionClient;\n  public storage:IStorage<any>;\n  public queue:IEventQueue;\n  public defaultTags:string[] = [];\n  public defaultData:Object = {};\n\n  constructor(settings?:IConfigurationSettings) {\n    function inject(fn:any) {\n      return typeof fn === 'function' ? fn(this) : fn;\n    }\n\n    settings = Utils.merge(Configuration.defaults, settings);\n\n    this.apiKey = settings.apiKey;\n    this.serverUrl = settings.serverUrl;\n    this.environmentInfoCollector = inject(settings.environmentInfoCollector);\n    this.errorParser = inject(settings.errorParser);\n    this.lastReferenceIdManager = inject(settings.lastReferenceIdManager) || new InMemoryLastReferenceIdManager();\n    this.log = inject(settings.log) || new NullLog();\n    this.moduleCollector = inject(settings.moduleCollector);\n    this.requestInfoCollector = inject(settings.requestInfoCollector);\n    this.submissionBatchSize = inject(settings.submissionBatchSize) || 50;\n    this.submissionClient = inject(settings.submissionClient);\n    this.storage = inject(settings.storage) || new InMemoryStorage<any>();\n    this.queue = inject(settings.queue) || new DefaultEventQueue(this);\n\n    EventPluginManager.addDefaultPlugins(this);\n  }\n\n  public get apiKey(): string {\n    return this._apiKey;\n  }\n\n  public set apiKey(value:string) {\n    this._apiKey = value || null;\n    this._enabled = !!value && value.length > 0;\n  }\n\n  public get serverUrl(): string {\n    return this._serverUrl;\n  }\n\n  public set serverUrl(value:string) {\n    if (!!value && value.length > 0) {\n      this._serverUrl = value;\n    }\n  }\n\n  public get enabled(): boolean {\n    return this._enabled;\n  }\n\n  public get plugins(): IEventPlugin[] {\n    return this._plugins.sort((p1:IEventPlugin, p2:IEventPlugin) => {\n      return (p1.priority < p2.priority) ? -1 : (p1.priority > p2.priority) ? 1 : 0;\n    });\n  }\n\n  public addPlugin(plugin:IEventPlugin): void;\n  public addPlugin(name:string, priority:number, pluginAction:(context:EventPluginContext) => void): void;\n  public addPlugin(pluginOrName:IEventPlugin|string, priority?:number, pluginAction?:(context:EventPluginContext) => Promise<any>): void {\n    var plugin:IEventPlugin = !!pluginAction ? { name: <string>pluginOrName, priority: priority, run: pluginAction } : <IEventPlugin>pluginOrName;\n    if (!plugin || !plugin.run) {\n      this.log.error('Unable to add plugin: No run method was found.');\n      return;\n    }\n\n    if (!plugin.name) {\n      plugin.name = Utils.guid();\n    }\n\n    if (!plugin.priority) {\n      plugin.priority = 0;\n    }\n\n    var pluginExists:boolean = false;\n    for(var index = 0; index < this._plugins.length; index++) {\n      if (this._plugins[index].name === plugin.name) {\n        pluginExists = true;\n        break;\n      }\n    }\n\n    if (!pluginExists) {\n      this._plugins.push(plugin);\n    }\n  }\n\n  public removePlugin(plugin:IEventPlugin): void;\n  public removePlugin(name:string): void;\n  public removePlugin(pluginOrName:IEventPlugin|string): void {\n    var name:string = typeof pluginOrName === 'string' ? pluginOrName : pluginOrName.name;\n    if (!name) {\n      this.log.error('Unable to remove plugin: No plugin name was specified.');\n      return;\n    }\n\n    for(var index = 0; index < this._plugins.length; index++) {\n      if (this._plugins[index].name === name) {\n        this._plugins.splice(index, 1);\n        break;\n      }\n    }\n  }\n\n  public setVersion(version:string): void {\n    if (!!version && version.length > 0) {\n      this.defaultData['@version'] = version;\n    }\n  }\n\n  public setUserIdentity(userInfo:IUserInfo): void;\n  public setUserIdentity(identity:string): void;\n  public setUserIdentity(identity:string, name:string): void;\n  public setUserIdentity(userInfoOrIdentity:IUserInfo|string, name?:string): void {\n    var userInfo = typeof userInfoOrIdentity !== 'string' ? userInfoOrIdentity : { identity: userInfoOrIdentity, name: name };\n    if (!userInfo.identity && !userInfo.name) {\n      delete this.defaultData['@user'];\n    } else {\n      this.defaultData['@user'] = userInfo;\n    }\n  }\n\n  public useReferenceIds(): void {\n    this.addPlugin(new ReferenceIdPlugin());\n  }\n\n  // TODO: Support a min log level.\n  public useDebugLogger(): void {\n    this.log = new ConsoleLog();\n  }\n\n  private static _defaultSettings:IConfigurationSettings = null;\n  public static get defaults() {\n    if(Configuration._defaultSettings === null) {\n      Configuration._defaultSettings = {};\n    }\n\n    return Configuration._defaultSettings;\n  }\n}\n\n                                                                                                                                                                                                                                                                                                           \n\nexport class EventBuilder {\n  public target:IEvent;\n  public client:ExceptionlessClient;\n  public pluginContextData:ContextData;\n\n  constructor(event:IEvent, client:ExceptionlessClient, pluginContextData?:ContextData) {\n    this.target = event;\n    this.client = client;\n    this.pluginContextData = pluginContextData || new ContextData();\n  }\n\n  public setType(type:string): EventBuilder {\n    if (!!type && type.length > 0) {\n      this.target.type = type;\n    }\n\n    return this;\n  }\n\n  public setSource(source:string): EventBuilder {\n    if (!!source && source.length > 0) {\n      this.target.source = source;\n    }\n\n    return this;\n  }\n\n  public setSessionId(sessionId:string): EventBuilder {\n    if (!this.isValidIdentifier(sessionId)) {\n      throw new Error(\"SessionId must contain between 8 and 100 alphanumeric or '-' characters.\");\n    }\n\n    this.target.session_id = sessionId;\n    return this;\n  }\n\n  public setReferenceId(referenceId:string): EventBuilder {\n    if (!this.isValidIdentifier(referenceId)) {\n      throw new Error(\"SessionId must contain between 8 and 100 alphanumeric or '-' characters.\");\n    }\n\n    this.target.reference_id = referenceId;\n    return this;\n  }\n\n  public setMessage(message:string): EventBuilder {\n    if (!!message && message.length > 0) {\n      this.target.message = message;\n    }\n\n    return this;\n  }\n\n  public setGeo(latitude: number, longitude: number): EventBuilder {\n    if (latitude < -90.0 || latitude > 90.0)\n      throw new Error('Must be a valid latitude value between -90.0 and 90.0.');\n    if (longitude < -180.0 || longitude > 180.0)\n      throw new Error('Must be a valid longitude value between -180.0 and 180.0.');\n\n    this.target.geo = `${latitude},${longitude}`;\n    return this;\n  }\n\n  public setUserIdentity(userInfo:IUserInfo): EventBuilder;\n  public setUserIdentity(identity:string): EventBuilder;\n  public setUserIdentity(identity:string, name:string): EventBuilder;\n  public setUserIdentity(userInfoOrIdentity:IUserInfo|string, name?:string): EventBuilder {\n    var userInfo = typeof userInfoOrIdentity !== 'string' ? userInfoOrIdentity : { identity: userInfoOrIdentity, name: name };\n    if (!userInfo.identity && !userInfo.name) {\n      return this;\n    }\n\n    this.setProperty('@user', userInfo);\n    return this;\n  }\n\n  // TODO: we to see if it makes sense to add setUserDescription.\n\n  public setValue(value:number): EventBuilder {\n    if (!!value) {\n      this.target.value = value;\n    }\n\n    return this;\n  }\n\n  public addTags(...tags:string[]): EventBuilder {\n    if (!tags || tags.length === 0) {\n      return this;\n    }\n\n    if (!this.target.tags) {\n      this.target.tags = [];\n    }\n\n    for (var index = 0; index < tags.length; index++) {\n      if (tags[index] && this.target.tags.indexOf(tags[index]) < 0) {\n        this.target.tags.push(tags[index]);\n      }\n    }\n\n    return this;\n  }\n\n  public setProperty(name:string, value:any): EventBuilder {\n    if (!name || (value === undefined || value == null)) {\n      return this;\n    }\n\n    if (!this.target.data) {\n      this.target.data = {};\n    }\n\n    this.target.data[name] = value;\n    return this;\n  }\n\n  public markAsCritical(critical:boolean): EventBuilder {\n    if (critical) {\n      this.addTags('Critical');\n    }\n\n    return this;\n  }\n\n  public addRequestInfo(request:any) {\n    if (!!request) {\n      this.pluginContextData['@request'] = request;\n    }\n\n\n    return this;\n  }\n\n  public submit(): Promise<any> {\n    return this.client.submitEvent(this.target, this.pluginContextData);\n  }\n\n  private isValidIdentifier(value:string): boolean {\n    if (!value || !value.length) {\n      return true;\n    }\n\n    if (value.length < 8 || value.length > 100) {\n      return false;\n    }\n\n    for (var index = 0; index < value.length; index++) {\n      var code = value.charCodeAt(index);\n      var isDigit = (code >= 48) && (code <= 57);\n      var isLetter = ((code >= 65) && (code <= 90)) || ((code >= 97) && (code <= 122));\n      var isMinus = code === 45;\n\n      if (!(isDigit || isLetter) && !isMinus) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n\n                                                                                  \r\n\r\nexport interface IError extends IInnerError {\r\n  modules?:IModule[]\r\n}\r\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n\nexport class ExceptionlessClient {\n  public config:Configuration;\n\n  constructor();\n  constructor(settings:IConfigurationSettings);\n  constructor(apiKey:string, serverUrl?:string);\n  constructor(settingsOrApiKey?:IConfigurationSettings|string, serverUrl?:string) {\n    // TODO: populate this in a plugin..\n    //var settings = this.getSettingsFromScriptTag() || {};\n\n    if (typeof settingsOrApiKey !== 'object') {\n      this.config = new Configuration(settingsOrApiKey);\n    } else {\n      this.config = new Configuration({ apiKey: <string>settingsOrApiKey, serverUrl: serverUrl });\n    }\n  }\n\n  public createException(exception:Error): EventBuilder {\n    var pluginContextData = new ContextData();\n    pluginContextData.setException(exception);\n    return this.createEvent(pluginContextData).setType('error');\n  }\n\n  public submitException(exception:Error): Promise<any> {\n    return this.createException(exception).submit();\n  }\n\n  public createUnhandledException(exception:Error, submissionMethod?:string): EventBuilder {\n    var builder = this.createException(exception);\n    builder.pluginContextData.markAsUnhandledError();\n    builder.pluginContextData.setSubmissionMethod(submissionMethod);\n\n    return builder;\n  }\n\n  public submitUnhandledException(exception:Error, submissionMethod?:string): Promise<any> {\n    return this.createUnhandledException(exception, submissionMethod).submit();\n  }\n\n  public createFeatureUsage(feature:string): EventBuilder {\n    return this.createEvent().setType('usage').setSource(feature);\n  }\n\n  public submitFeatureUsage(feature:string): Promise<any> {\n    return this.createFeatureUsage(feature).submit();\n  }\n\n  public createLog(message:string): EventBuilder;\n  public createLog(source:string, message:string): EventBuilder;\n  public createLog(source:string, message:string, level:string): EventBuilder;\n  public createLog(sourceOrMessage:string, message?:string, level?:string): EventBuilder {\n    var builder = this.createEvent().setType('log');\n\n    if (sourceOrMessage && message && level) {\n      builder = builder.setSource(sourceOrMessage).setMessage(message).setProperty('@level', level);\n    } else if (sourceOrMessage && message) {\n      builder = builder.setSource(sourceOrMessage).setMessage(message);\n    } else {\n      // TODO: Look into using https://www.stevefenton.co.uk/Content/Blog/Date/201304/Blog/Obtaining-A-Class-Name-At-Runtime-In-TypeScript/\n      var source = (<any>(arguments.callee.caller)).name;\n      builder = builder.setSource(source).setMessage(sourceOrMessage);\n    }\n\n    return builder;\n  }\n\n  public submitLog(message:string): Promise<any>;\n  public submitLog(source:string, message:string): Promise<any>;\n  public submitLog(source:string, message:string, level:string): Promise<any>;\n  public submitLog(sourceOrMessage:string, message?:string, level?:string): Promise<any> {\n    return this.createLog(sourceOrMessage, message, level).submit();\n  }\n\n  public createNotFound(resource:string): EventBuilder {\n    return this.createEvent().setType('404').setSource(resource);\n  }\n\n  public submitNotFound(resource:string): Promise<any> {\n    return this.createNotFound(resource).submit();\n  }\n\n  public createSessionStart(sessionId:string): EventBuilder {\n    return this.createEvent().setType('start').setSessionId(sessionId);\n  }\n\n  public submitSessionStart(sessionId:string): Promise<any> {\n    return this.createSessionStart(sessionId).submit();\n  }\n\n  public createSessionEnd(sessionId:string): EventBuilder {\n    return this.createEvent().setType('end').setSessionId(sessionId);\n  }\n\n  public submitSessionEnd(sessionId:string): Promise<any> {\n    return this.createSessionEnd(sessionId).submit();\n  }\n\n  public createEvent(pluginContextData?:ContextData): EventBuilder {\n    return new EventBuilder({ date: new Date() }, this, pluginContextData);\n  }\n\n  public submitEvent(event:IEvent, pluginContextData?:ContextData): Promise<any> {\n    if (!event) {\n      return Promise.reject(new Error('Unable to submit undefined event.'));\n    }\n\n    if (!this.config.enabled) {\n      var message:string = 'Event submission is currently disabled.';\n      this.config.log.info(message);\n      return Promise.reject(new Error(message));\n    }\n\n    var context = new EventPluginContext(this, event, pluginContextData);\n    return EventPluginManager.run(context)\n      .then(() => {\n        if (context.cancel) {\n          var message:string = `Event submission cancelled by plugin\": id=${event.reference_id} type=${event.type}`;\n          this.config.log.info(message);\n          return Promise.reject(new Error(message));\n        }\n\n        // ensure all required data\n        if (!event.type || event.type.length === 0) {\n          event.type = 'log';\n        }\n\n        if (!event.date) {\n          event.date = new Date();\n        }\n\n        this.config.log.info(`Submitting event: type=${event.type} ${!!event.reference_id ? 'refid=' + event.reference_id : ''}`);\n        this.config.queue.enqueue(event);\n\n        if (event.reference_id && event.reference_id.length > 0) {\n          this.config.log.info(`Setting last reference id \"${event.reference_id}\"`);\n          this.config.lastReferenceIdManager.setLast(event.reference_id);\n        }\n\n        return Promise.resolve();\n      })\n      .catch((error:Error) => {\n        var message:string = `Event submission cancelled. An error occurred while running the plugins: ${error && error.message ? error.message : <any>error}`;\n        this.config.log.error(message);\n        return Promise.reject(new Error(message));\n      });\n  }\n\n  public getLastReferenceId(): string {\n    return this.config.lastReferenceIdManager.getLast();\n  }\n\n  private static _instance:ExceptionlessClient = null;\n  public static get default() {\n    if(ExceptionlessClient._instance === null) {\n      ExceptionlessClient._instance = new ExceptionlessClient(null);\n    }\n    return ExceptionlessClient._instance;\n  }\n}\n\nexport interface IParameter {\r\n  data?:any;\r\n  generic_arguments?:string[];\r\n\r\n  name?:string;\r\n  type?:string;\r\n  type_namespace?:string;\r\n}\r\n\n                                          \r\n\r\nexport interface IMethod {\r\n  data?:any;\r\n  generic_arguments?:string[];\r\n  parameters?:IParameter[];\r\n\r\n  is_signature_target?:boolean;\r\n  declaring_namespace?:string;\r\n  declaring_type?:string;\r\n  name?:string;\r\n  module_id?:number;\r\n}\r\n\n                                    \r\n\r\nexport interface IStackFrame extends IMethod {\r\n  file_name:string;\r\n  line_number:number;\r\n  column:number;\r\n}\r\n\n                                                                                  \r\n\r\nexport interface IInnerError {\r\n  message?:string;\r\n  type?:string;\r\n  code?:string;\r\n  data?:any;\r\n  inner?:IInnerError\r\n  stack_trace?:IStackFrame[];\r\n  target_method?:IMethod;\r\n}\r\n\nexport interface IModule {\r\n  data?:any;\r\n\r\n  module_id?:number;\r\n  name?:string;\r\n  version?:string;\r\n  is_entry?:boolean;\r\n  created_date?:Date;\r\n  modified_date?:Date;\r\n}\r\n\n                                                                                                            \r\n\r\nexport class ConfigurationDefaultsPlugin implements IEventPlugin {\r\n  public priority:number = 10;\r\n  public name:string = 'ConfigurationDefaultsPlugin';\r\n\r\n  run(context:EventPluginContext): Promise<any> {\r\n    if (!!context.client.config.defaultTags) {\r\n      if (!context.event.tags) {\r\n        context.event.tags = [];\r\n      }\r\n\r\n      for (var index = 0; index < context.client.config.defaultTags.length; index++) {\r\n        var tag = context.client.config.defaultTags[index];\r\n        if (tag && context.client.config.defaultTags.indexOf(tag) < 0) {\r\n          context.event.tags.push(tag)\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!!context.client.config.defaultData) {\r\n      if (!context.event.data) {\r\n        context.event.data = {};\r\n      }\r\n\r\n      for (var key in context.client.config.defaultData) {\r\n        if (!!context.client.config.defaultData[key]) {\r\n          context.event.data[key] = context.client.config.defaultData[key];\r\n        }\r\n      }\r\n    }\r\n\r\n    return Promise.resolve();\r\n  }\r\n}\r\n\n                                                                                                           \n\nexport class ErrorPlugin implements IEventPlugin {\n  public priority:number = 30;\n  public name:string = 'ErrorPlugin';\n\n  run(context:EventPluginContext): Promise<any> {\n    var exception = context.contextData.getException();\n    if (exception == null) {\n      return Promise.resolve();\n    }\n\n    if (!context.event.data) {\n      context.event.data = {};\n    }\n\n    context.event.type = 'error';\n    if (!!context.event.data['@error']) {\n      return Promise.resolve();\n    }\n\n    var parser = context.client.config.errorParser;\n    if (!parser) {\n      context.cancel = true;\n      return Promise.reject(new Error('No error parser was defined. This exception will be discarded.'))\n    }\n\n    return parser.parse(context, exception);\n  }\n}\n\n                                                                                                            \r\n\r\nexport class DuplicateCheckerPlugin implements IEventPlugin {\r\n  public priority:number = 50;\r\n  public name:string = 'DuplicateCheckerPlugin';\r\n\r\n  run(context:EventPluginContext):Promise<any> {\r\n    // TODO: Implement\r\n    return Promise.resolve();\r\n  }\r\n}\r\n\n                                                                                                                                                                                                \n\nexport class ModuleInfoPlugin implements IEventPlugin {\n  public priority:number = 40;\n  public name:string = 'ModuleInfoPlugin';\n\n  run(context:EventPluginContext):Promise<any> {\n    if (!context.event.data ||\n        !context.event.data['@error'] ||\n        !!context.event.data['@error'].modules ||\n        !context.client.config.moduleCollector) {\n      return Promise.resolve();\n    }\n\n    var modules = context.client.config.moduleCollector.getModules(context);\n    if (modules && modules.length > 0) {\n      context.event.data['@error'].modules = modules;\n    }\n\n    return Promise.resolve();\n  }\n}\n\nexport interface IRequestInfo {\r\n  user_agent?:string;\r\n  http_method?:string;\r\n  is_secure?:boolean;\r\n  host?:string;\r\n  port?:number;\r\n  path?:string;\r\n  referrer?:string;\r\n  client_ip_address?:string;\r\n  cookies?:any;\r\n  post_data?:any;\r\n  query_string?:any;\r\n  data?:any\r\n}\r\n\n                                                                                                                                                                       \r\n\r\nexport class RequestInfoPlugin implements IEventPlugin {\r\n  public priority:number = 60;\r\n  public name:string = 'RequestInfoPlugin';\r\n\r\n  run(context:EventPluginContext):Promise<any> {\r\n    if (!!context.event.data && !!context.event.data['@request'] || !context.client.config.requestInfoCollector) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    if (!context.event.data) {\r\n      context.event.data = {};\r\n    }\r\n\r\n    var ri = context.client.config.requestInfoCollector.getRequestInfo(context);\r\n    if (ri) {\r\n      context.event.data['@request'] = ri;\r\n    }\r\n\r\n    return Promise.resolve();\r\n  }\r\n}\r\n\n                                                                                                                                                                               \r\n\r\nexport class EnvironmentInfoPlugin implements IEventPlugin {\r\n  public priority:number = 70;\r\n  public name:string = 'EnvironmentInfoPlugin';\r\n\r\n  run(context:EventPluginContext):Promise<any> {\r\n    if (!!context.event.data && !!context.event.data['@environment'] || !context.client.config.environmentInfoCollector) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    if (!context.event.data) {\r\n      context.event.data = {};\r\n    }\r\n\r\n    var ei = context.client.config.environmentInfoCollector.getEnvironmentInfo(context);\r\n    if (ei) {\r\n      context.event.data['@environment'] = ei;\r\n    }\r\n\r\n    return Promise.resolve();\r\n  }\r\n}\r\n\n                                                                                                            \r\n\r\nexport class SubmissionMethodPlugin implements IEventPlugin {\r\n  public priority:number = 100;\r\n  public name:string = 'SubmissionMethodPlugin';\r\n\r\n  run(context:EventPluginContext):Promise<any> {\r\n    var submissionMethod:string = context.contextData.getSubmissionMethod();\r\n    if (!!submissionMethod) {\r\n      if (!context.event.data) {\r\n        context.event.data = {};\r\n      }\r\n\r\n      context.event.data['@submission_method'] = submissionMethod;\r\n    }\r\n\r\n    return Promise.resolve();\r\n  }\r\n}\r\n\nexport interface IUserDescription {\r\n  email_address?:string;\r\n  description?:string;\r\n  data?:any;\r\n}\r\n\nexport class SettingsResponse {\r\n  success:boolean = false;\r\n  settings:any;\r\n  settingsVersion:number = -1;\r\n  message:string;\r\n  exception:any;\r\n\r\n  constructor(success:boolean, settings:any, settingsVersion:number = -1, exception:any = null, message:string = null) {\r\n    this.success = success;\r\n    this.settings = settings;\r\n    this.settingsVersion = settingsVersion;\r\n    this.exception = exception;\r\n    this.message = message;\r\n  }\r\n}\r\n\nexport class SubmissionResponse {\r\n  success:boolean = false;\r\n  badRequest:boolean = false;\r\n  serviceUnavailable:boolean = false;\r\n  paymentRequired:boolean = false;\r\n  unableToAuthenticate:boolean = false;\r\n  notFound:boolean = false;\r\n  requestEntityTooLarge:boolean = false;\r\n  statusCode:number;\r\n  message:string;\r\n\r\n  constructor(statusCode:number, message?:string) {\r\n    this.statusCode = statusCode;\r\n    this.message = message;\r\n\r\n    this.success = statusCode >= 200 && statusCode <= 299;\r\n    this.badRequest = statusCode === 400;\r\n    this.serviceUnavailable = statusCode === 503;\r\n    this.paymentRequired = statusCode === 402;\r\n    this.unableToAuthenticate = statusCode === 401 || statusCode === 403;\r\n    this.notFound = statusCode === 404;\r\n    this.requestEntityTooLarge = statusCode === 413;\r\n  }\r\n}\r\n\n                                                                                                                                                                                                             \r\n\r\nimport os = require('os');\r\n\r\nexport class NodeEnvironmentInfoCollector implements IEnvironmentInfoCollector {\r\n  public getEnvironmentInfo(context:EventPluginContext): IEnvironmentInfo {\r\n    if (!os) {\r\n      return null;\r\n    }\r\n\r\n    var environmentInfo: IEnvironmentInfo = {\r\n      processor_count: os.cpus().length,\r\n      total_physical_memory: os.totalmem(),\r\n      available_physical_memory: os.freemem(),\r\n      command_line: process.argv.join(' '),\r\n      process_name: process.title,\r\n      process_id: process.pid + '',\r\n      process_memory_size: process.memoryUsage().heapTotal,\r\n      //thread_id: '',\r\n      architecture: os.arch(),\r\n      o_s_name: os.type(),\r\n      o_s_version: os.release(),\r\n      ip_address: this.getIpAddresses(),\r\n      machine_name: os.hostname(),\r\n      //install_id: '',\r\n      runtime_version: process.version,\r\n      data: {\r\n        loadavg: os.loadavg(),\r\n        platform: os.platform(),\r\n        tmpdir: os.tmpdir(),\r\n        uptime: os.uptime()\r\n      }\r\n    };\r\n\r\n    if ((<any>os).endianness) {\r\n      environmentInfo.data.endianness = (<any>os).endianness();\r\n    }\r\n\r\n    return environmentInfo;\r\n  }\r\n\r\n  private getIpAddresses():string {\r\n    var ips = [];\r\n    var interfaces = os.networkInterfaces();\r\n    Object.keys(interfaces).forEach((name) => {\r\n      interfaces[name].forEach((iface:any) => {\r\n        if ('IPv4' === iface.family && !iface.internal) {\r\n          ips.push(iface.address);\r\n        }\r\n      });\r\n    });\r\n\r\n    return ips.join(', ');\r\n  }\r\n}\r\n\n                                                                                                                                                                                                                \n\nimport nodestacktrace = require('stack-trace');\n\nexport class NodeErrorParser implements IErrorParser {\n  public parse(context:EventPluginContext, exception:Error): Promise<IError> {\n    if (!nodestacktrace) {\n      context.cancel = true;\n      return Promise.reject(new Error('Unable to load the stack trace library. This exception will be discarded.'))\n    }\n\n    var stackFrames = nodestacktrace.parse(exception);\n    if (!stackFrames || stackFrames.length === 0) {\n      context.cancel = true;\n      return Promise.reject(new Error('Unable to parse the exceptions stack trace. This exception will be discarded.'))\n    }\n\n    var error:IError = {\n      message: exception.message,\n      stack_trace: this.getStackFrames(context, stackFrames || [])\n    };\n\n    context.event.data['@error'] = error;\n    return Promise.resolve();\n  }\n\n  private getStackFrames(context:EventPluginContext, stackFrames:any[]): IStackFrame[] {\n    var frames:IStackFrame[] = [];\n\n    for (var index = 0; index < stackFrames.length; index++) {\n      var frame = stackFrames[index];\n      frames.push({\n        name: frame.getMethodName() || frame.getFunctionName(),\n        //parameters: stackFrames[index].args,\n        file_name: frame.getFileName(),\n        line_number: frame.getLineNumber(),\n        column: frame.getColumnNumber(),\n        declaring_type: frame.getTypeName(),\n        data: {\n          is_native: frame.isNative() || (!!frame.filename && frame.filename[0] !== '/' && frame.filename[0] !== '.')\n        }\n      });\n    }\n\n    return frames;\n  }\n}\n\n                                                                                                                                                                                         \n\nexport class NodeRequestInfoCollector implements IRequestInfoCollector {\n  getRequestInfo(context:EventPluginContext):IRequestInfo {\n    if (!context.contextData['@request']) {\n      return null;\n    }\n\n    var request = context.contextData['@request'];\n    var ri:IRequestInfo = {\n      client_ip_address: request.ip,\n      user_agent: request.headers['user-agent'],\n      is_secure: request.secure,\n      http_method: request.method,\n      host: request.hostname || request.host,\n      //port: TODO,\n      path: request.path,\n      post_data: request.body,\n      //referrer: TODO,\n      cookies: this.getCookies(request),\n      query_string: request.params\n    };\n\n    return ri;\n  }\n\n  private getCookies(request): any {\n    if (!request) {\n      return null;\n    }\n\n    if (request.cookies) {\n      return request.cookies;\n    }\n\n    var result = {};\n    var cookies = (request.headers['cookie'] || '').split('; ');\n    for (var index = 0; index < cookies.length; index++) {\n      var cookie = cookies[index].split('=');\n      result[cookie[0]] = cookie[1];\n    }\n\n    return result;\n  }\n}\n\n                                                                                                                                                                                                                                                                                                                                                                                            \r\n\r\nimport http = require('http');\r\nimport https = require('https');\r\nimport url = require('url');\r\n\r\nexport class NodeSubmissionClient implements ISubmissionClient {\r\n  public submit(events:IEvent[], config:Configuration): Promise<SubmissionResponse> {\r\n    return this.sendRequest('POST', config.serverUrl, '/api/v2/events', config.apiKey, Utils.stringify(events)).then(\r\n      msg => { return new SubmissionResponse(msg.statusCode, this.getResponseMessage(msg)); },\r\n      msg => { return new SubmissionResponse(msg.statusCode || 500, this.getResponseMessage(msg)); }\r\n    );\r\n  }\r\n\r\n  public submitDescription(referenceId:string, description:IUserDescription, config:Configuration): Promise<SubmissionResponse> {\r\n    var path = `/api/v2/events/by-ref/${encodeURIComponent(referenceId)}/user-description`;\r\n    return this.sendRequest('POST', config.serverUrl, path, config.apiKey, Utils.stringify(description)).then(\r\n      msg => { return new SubmissionResponse(msg.statusCode, this.getResponseMessage(msg)); },\r\n      msg => { return new SubmissionResponse(msg.statusCode || 500, this.getResponseMessage(msg)); }\r\n    );\r\n  }\r\n\r\n  public getSettings(config:Configuration): Promise<SettingsResponse> {\r\n    return this.sendRequest('GET', config.serverUrl, '/api/v2/projects/config', config.apiKey).then(\r\n      msg => {\r\n        if (msg.statusCode !== 200 || !(<any>msg).responseText) {\r\n          return new SettingsResponse(false, null, -1, null, `Unable to retrieve configuration settings: ${this.getResponseMessage(msg)}`);\r\n        }\r\n\r\n        var settings;\r\n        try {\r\n          settings = JSON.parse((<any>msg).responseText);\r\n        } catch (e) {\r\n          config.log.error(`An error occurred while parsing the settings response text: \"${(<any>msg).responseText}\"`);\r\n        }\r\n\r\n        if (!settings || !settings.settings || !settings.version) {\r\n          return new SettingsResponse(true, null, -1, null, 'Invalid configuration settings.');\r\n        }\r\n\r\n        return new SettingsResponse(true, settings.settings, settings.version);\r\n      },\r\n      msg => {\r\n        return new SettingsResponse(false, null, -1, null, this.getResponseMessage(msg));\r\n      }\r\n    );\r\n  }\r\n\r\n  private getResponseMessage(msg:http.IncomingMessage): string {\r\n    if (!msg || (msg.statusCode >= 200 && msg.statusCode <= 299)) {\r\n      return null;\r\n    }\r\n\r\n    if (msg.statusCode === 0) {\r\n      return 'Unable to connect to server.';\r\n    }\r\n\r\n    return msg.statusMessage || (<any>msg).message;\r\n  }\r\n\r\n  private sendRequest(method:string, host:string, path:string, apiKey:string, data?:string): Promise<http.IncomingMessage> {\r\n    return new Promise((resolve, reject) => {\r\n      var parsedHost = url.parse(host);\r\n      var options:https.RequestOptions = {\r\n        auth: `client:${apiKey}`,\r\n        hostname: parsedHost.hostname,\r\n        method: method,\r\n        port: parsedHost.port && parseInt(parsedHost.port),\r\n        path: path\r\n      };\r\n\r\n      if (method === 'POST') {\r\n        options.headers = {\r\n          'Content-Type': 'application/json',\r\n          'Content-Length': data.length\r\n        }\r\n      }\r\n\r\n      var request:http.ClientRequest = https.request(options, (response:http.IncomingMessage) => {\r\n        var body = '';\r\n        response.on('data', chunk => body += chunk);\r\n        response.on('end', () => {\r\n          (<any>response).responseText = body;\r\n          resolve(response);\r\n        });\r\n      });\r\n\r\n      request.on('error', function(e) {\r\n        reject(e)\r\n      });\r\n\r\n      request.write(data);\r\n      request.end();\r\n    });\r\n  }\r\n}\r\n\nr\n\r\nexport class NodeBootstrapper implements IBootstrapper {\r\n  public register(): void {\r\n    if (!this.isNode()) {\r\n      return;\r\n    }\r\n\r\n    Configuration.defaults.environmentInfoCollector = new NodeEnvironmentInfoCollector();\r\n    Configuration.defaults.errorParser = new NodeErrorParser();\r\n    Configuration.defaults.requestInfoCollector = new NodeRequestInfoCollector();\r\n    Configuration.defaults.submissionClient = new NodeSubmissionClient();\r\n    process.on('uncaughtException', function(error) {\r\n      ExceptionlessClient.default.submitUnhandledException(error, 'uncaughtException');\r\n    });\r\n\r\n    process.on('beforeExit', (code:number) => {\r\n      var client = ExceptionlessClient.default;\r\n\r\n      var message = this.getExitCodeReason(code);\r\n      if (message !== null) {\r\n        client.submitLog('beforeExit', message, 'Error')\r\n      }\r\n\r\n      client.config.queue.process()\r\n    });\r\n  }\r\n\r\n  // exit codes: https://nodejs.org/api/process.html#process_event_exit\r\n  private getExitCodeReason(code:number): string {\r\n    if (code === 1) {\r\n      return 'Uncaught Fatal Exception';\r\n    }\r\n\r\n    if (code === 3) {\r\n      return 'Internal JavaScript Parse Error';\r\n    }\r\n\r\n    if (code === 4) {\r\n      return 'Internal JavaScript Evaluation Failure';\r\n    }\r\n\r\n    if (code === 5) {\r\n      return 'Fatal Exception';\r\n    }\r\n\r\n    if (code === 6) {\r\n      return 'Non-function Internal Exception Handler ';\r\n    }\r\n\r\n    if (code === 7) {\r\n      return 'Internal Exception Handler Run-Time Failure';\r\n    }\r\n\r\n    if (code === 8) {\r\n      return 'Uncaught Exception';\r\n    }\r\n\r\n    if (code === 9) {\r\n      return 'Invalid Argument';\r\n    }\r\n\r\n    if (code === 10) {\r\n      return 'Internal JavaScript Run-Time Failure';\r\n    }\r\n\r\n    if (code === 12) {\r\n      return 'Invalid Debug Argument';\r\n    }\r\n\r\n    if (code > 128) {\r\n      return 'Signal Exits';\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  private isNode(): boolean {\r\n    return typeof window === 'undefined' && typeof global !== 'undefined' && {}.toString.call(global) === '[object global]';\r\n  }\r\n}\r\n\n                                                                                                                                                                                                                \n\nexport class WebErrorParser implements IErrorParser {\n  public parse(context:EventPluginContext, exception:Error): Promise<IError> {\n    return StackTrace.fromError(exception).then(\n      (stackFrames: StackTrace.StackFrame[]) => this.processError(context, exception, stackFrames),\n      () => this.onParseError(context)\n    );\n  }\n\n  private processError(context:EventPluginContext, exception:Error, stackFrames: StackTrace.StackFrame[]): Promise<any> {\n    var error:IError = {\n      message: exception.message,\n      stack_trace: this.getStackFrames(context, stackFrames || [])\n    };\n\n    context.event.data['@error'] = error;\n\n    return Promise.resolve();\n  }\n\n  private onParseError(context:EventPluginContext): Promise<any>  {\n    context.cancel = true;\n    return Promise.reject(new Error('Unable to parse the exceptions stack trace. This exception will be discarded.'))\n  }\n\n  private getStackFrames(context:EventPluginContext, stackFrames:StackTrace.StackFrame[]): IStackFrame[] {\n    var frames:IStackFrame[] = [];\n\n    for (var index = 0; index < stackFrames.length; index++) {\n      frames.push({\n        name: stackFrames[index].functionName,\n        parameters: stackFrames[index].args, // TODO: need to verify arguments.\n        file_name: stackFrames[index].fileName,\n        line_number: stackFrames[index].lineNumber,\n        column: stackFrames[index].columnNumber\n      });\n    }\n\n    return frames;\n  }\n}\n\n                                                                                                                                                                                                       \n\nexport class WebModuleCollector implements IModuleCollector {\n  public getModules(context:EventPluginContext): IModule[] {\n    if (document && document.getElementsByTagName) {\n      return null;\n    }\n\n    var modules:IModule[] = [];\n    var scripts = document.getElementsByTagName('script');\n    if (scripts && scripts.length > 0) {\n      for (var index = 0; index < scripts.length; index++) {\n        if (scripts[index].src) {\n          modules.push({\n            module_id: index,\n            name: scripts[index].src,\n            version: Utils.parseVersion(scripts[index].src)\n          });\n        } else if (!!scripts[index].innerHTML) {\n          modules.push({\n            module_id: index,\n            name: 'Script Tag',\n            version: Utils.getHashCode(scripts[index].innerHTML)\n          });\n        }\n      }\n    }\n\n    return modules;\n  }\n}\n\n                                                                                                                                                                                                                              \r\n\r\nexport class WebRequestInfoCollector implements IRequestInfoCollector {\r\n  public getRequestInfo(context:EventPluginContext): IRequestInfo {\r\n    if (!navigator || !location) {\r\n      return null;\r\n    }\r\n\r\n    var requestInfo:IRequestInfo = {\r\n      user_agent: navigator.userAgent,\r\n      is_secure: location.protocol === 'https:',\r\n      host: location.hostname,\r\n      port: location.port && location.port !== '' ? parseInt(location.port) : 80,\r\n      path: location.pathname,\r\n      //client_ip_address: 'TODO',\r\n      cookies: this.getCookies(),\r\n      query_string: Utils.parseQueryString(location.search.substring(1))\r\n    };\r\n\r\n    if (document.referrer && document.referrer !== '') {\r\n      requestInfo.referrer = document.referrer;\r\n    }\r\n  }\r\n\r\n  private getCookies(): any {\r\n    if (!document.cookie) {\r\n      return null;\r\n    }\r\n\r\n    var result = {};\r\n\r\n    var cookies = document.cookie.split(', ');\r\n    for (var index = 0; index < cookies.length; index++) {\r\n      var cookie = cookies[index].split('=');\r\n      result[cookie[0]] = cookie[1];\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\n                                                                                                                                                                                                                                                                                                                                                                                      \n\ndeclare var XDomainRequest: { new (); create(); };\n\nexport class DefaultSubmissionClient implements ISubmissionClient {\n  public submit(events:IEvent[], config:Configuration): Promise<SubmissionResponse> {\n    var url = `${config.serverUrl}/api/v2/events?access_token=${encodeURIComponent(config.apiKey)}`;\n    return this.sendRequest('POST', url, Utils.stringify(events)).then(\n        xhr => { return new SubmissionResponse(xhr.status, this.getResponseMessage(xhr)); },\n        xhr => { return new SubmissionResponse(xhr.status || 500, this.getResponseMessage(xhr)); }\n    );\n  }\n\n  public submitDescription(referenceId:string, description:IUserDescription, config:Configuration): Promise<SubmissionResponse> {\n    var url = `${config.serverUrl}/api/v2/events/by-ref/${encodeURIComponent(referenceId)}/user-description?access_token=${encodeURIComponent(config.apiKey)}`;\n    return this.sendRequest('POST', url, Utils.stringify(description)).then(\n        xhr => { return new SubmissionResponse(xhr.status, this.getResponseMessage(xhr)); },\n        xhr => { return new SubmissionResponse(xhr.status || 500, this.getResponseMessage(xhr)); }\n    );\n  }\n\n  public getSettings(config:Configuration): Promise<SettingsResponse> {\n    var url = `${config.serverUrl}/api/v2/projects/config?access_token=${encodeURIComponent(config.apiKey)}`;\n    return this.sendRequest('GET', url).then(\n        xhr => {\n        if (xhr.status !== 200) {\n          return new SettingsResponse(false, null, -1, null, `Unable to retrieve configuration settings: ${this.getResponseMessage(xhr)}`);\n        }\n\n        var settings;\n        try {\n          settings = JSON.parse(xhr.responseText);\n        } catch (e) {\n          config.log.error(`An error occurred while parsing the settings response text: \"${xhr.responseText}\"`);\n        }\n\n        if (!settings || !settings.settings || !settings.version) {\n          return new SettingsResponse(true, null, -1, null, 'Invalid configuration settings.');\n        }\n\n        return new SettingsResponse(true, settings.settings, settings.version);\n      },\n        xhr => {\n        return new SettingsResponse(false, null, -1, null, this.getResponseMessage(xhr));\n      }\n    );\n  }\n\n  private getResponseMessage(xhr:XMLHttpRequest): string {\n    if (!xhr || (xhr.status >= 200 && xhr.status <= 299)) {\n      return null;\n    }\n\n    if (xhr.status === 0) {\n      return 'Unable to connect to server.';\n    }\n\n    if (xhr.responseBody) {\n      return xhr.responseBody.message;\n    }\n\n    if (xhr.responseText) {\n      try {\n        return JSON.parse(xhr.responseText).message;\n      } catch (e) {\n        return xhr.responseText;\n      }\n    }\n\n    return  xhr.statusText;\n  }\n\n  private createRequest(method:string, url:string): XMLHttpRequest {\n    var xhr:any = new XMLHttpRequest();\n    if ('withCredentials' in xhr) {\n      xhr.open(method, url, true);\n    } else if (typeof XDomainRequest != 'undefined') {\n      xhr = new XDomainRequest();\n      xhr.open(method, url);\n    } else {\n      xhr = null;\n    }\n\n    if (xhr) {\n      if (method === 'POST' && xhr.setRequestHeader) {\n        xhr.setRequestHeader('Content-Type', 'application/json');\n      }\n\n      xhr.timeout = 10000;\n    }\n\n    return xhr;\n  }\n\n  private sendRequest(method:string, url:string, data?:string): Promise<any> {\n    var xhr = this.createRequest(method || 'POST', url);\n\n    return new Promise((resolve, reject) => {\n      if (!xhr) {\n        return reject({ status: 503, message: 'CORS not supported.' });\n      }\n\n      if ('withCredentials' in xhr) {\n        xhr.onreadystatechange = () => {\n          // xhr not ready.\n          if (xhr.readyState !== 4) {\n            return;\n          }\n\n          if (xhr.status >= 200 && xhr.status <= 299) {\n            resolve(xhr);\n          } else {\n            reject(xhr);\n          }\n        };\n      }\n\n      xhr.ontimeout = () => reject(xhr);\n      xhr.onerror = () => reject(xhr);\n      xhr.onload = () => resolve(xhr);\n\n      xhr.send(data);\n    });\n  }\n}\n\nn\nexport class WindowBootstrapper implements IBootstrapper {\n  public register(): void {\n    if (typeof window === 'undefined' || typeof document === 'undefined') {\n      return;\n    }\n\n    var settings = this.getDefaultsSettingsFromScriptTag();\n    if (settings && (settings.apiKey || settings.serverUrl)) {\n      Configuration.defaults.apiKey = settings.apiKey;\n      Configuration.defaults.serverUrl = settings.serverUrl;\n    }\n\n    Configuration.defaults.errorParser = new WebErrorParser();\n    Configuration.defaults.moduleCollector = new WebModuleCollector();\n    Configuration.defaults.requestInfoCollector = new WebRequestInfoCollector();\n    Configuration.defaults.submissionClient = new DefaultSubmissionClient();\n    this.handleWindowOnError();\n  }\n\n  private getDefaultsSettingsFromScriptTag(): IConfigurationSettings {\n    if (!document || !document.getElementsByTagName) {\n      return null;\n    }\n\n    var scripts = document.getElementsByTagName('script');\n    for (var index = 0; index < scripts.length; index++) {\n      if (scripts[index].src && scripts[index].src.indexOf('/exceptionless') > -1) {\n        return Utils.parseQueryString(scripts[index].src.split('?').pop());\n      }\n    }\n    return null;\n  }\n\n  private handleWindowOnError(): void {\n    var _oldOnErrorHandler:any = window.onerror;\n    (<any>window).onerror = (message:string, filename:string, lineno:number, colno:number, error:Error) => {\n      var client = ExceptionlessClient.default;\n\n      if (error !== null && typeof error === 'object') {\n        client.submitUnhandledException(error, 'onerror');\n      } else {\n        // Only message, filename and lineno work here.\n        var e:IError = {\n          message: message,\n          stack_trace: [{\n            file_name: filename,\n            line_number: lineno,\n            column: colno\n          }]\n        };\n\n        client.createUnhandledException(new Error(message), 'onerror').setMessage(message).setProperty('@error', e).submit();\n      }\n\n      if (_oldOnErrorHandler) {\n        try {\n          return _oldOnErrorHandler(message, filename, lineno, colno, error);\n        } catch (e) {\n          client.config.log.error(`An error occurred while calling previous error handler: ${e.message}`);\n        }\n      }\n\n      return false;\n    }\n  }\n}\n\nn\nnew NodeBootstrapper().register();\nnew WindowBootstrapper().register();\n(<any>Error).stackTraceLimit = Infinity;\n\n"],"sourceRoot":"/source/"}