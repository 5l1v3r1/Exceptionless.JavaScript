{"version":3,"file":"exceptionless.node.js","sourceRoot":"/source/","sources":["exceptionless.node.ts"],"names":["SettingsManager","SettingsManager.constructor","SettingsManager.onChanged","SettingsManager.applySavedServerSettings","SettingsManager.checkVersion","SettingsManager.updateSettings","SettingsManager.changed","SettingsManager.getSavedServerSettings","DefaultLastReferenceIdManager","DefaultLastReferenceIdManager.constructor","DefaultLastReferenceIdManager.getLast","DefaultLastReferenceIdManager.clearLast","DefaultLastReferenceIdManager.setLast","ConsoleLog","ConsoleLog.constructor","ConsoleLog.info","ConsoleLog.warn","ConsoleLog.error","ConsoleLog.log","NullLog","NullLog.constructor","NullLog.info","NullLog.warn","NullLog.error","EventPluginContext","EventPluginContext.constructor","EventPluginContext.log","EventPluginManager","EventPluginManager.constructor","EventPluginManager.run","EventPluginManager.addDefaultPlugins","HeartbeatPlugin","HeartbeatPlugin.constructor","HeartbeatPlugin.run","ReferenceIdPlugin","ReferenceIdPlugin.constructor","ReferenceIdPlugin.run","DefaultEventQueue","DefaultEventQueue.constructor","DefaultEventQueue.enqueue","DefaultEventQueue.process","DefaultEventQueue.process.getEvents","DefaultEventQueue.suspendProcessing","DefaultEventQueue.areQueuedItemsDiscarded","DefaultEventQueue.ensureQueueTimer","DefaultEventQueue.isQueueProcessingSuspended","DefaultEventQueue.onProcessQueue","DefaultEventQueue.processSubmissionResponse","DefaultEventQueue.removeEvents","InMemoryStorage","InMemoryStorage.constructor","InMemoryStorage.save","InMemoryStorage.get","InMemoryStorage.getList","InMemoryStorage.remove","DefaultSubmissionClient","DefaultSubmissionClient.constructor","DefaultSubmissionClient.postEvents","DefaultSubmissionClient.postUserDescription","DefaultSubmissionClient.getSettings","DefaultSubmissionClient.createRequest","DefaultSubmissionClient.createSubmissionCallback","Utils","Utils.constructor","Utils.addRange","Utils.getHashCode","Utils.getCookies","Utils.guid","Utils.guid.s4","Utils.merge","Utils.parseVersion","Utils.parseQueryString","Utils.randomNumber","Utils.isMatch","Utils.isEmpty","Utils.stringify","Utils.stringify.stringifyImpl","Configuration","Configuration.constructor","Configuration.constructor.inject","Configuration.apiKey","Configuration.isValid","Configuration.serverUrl","Configuration.dataExclusions","Configuration.addDataExclusions","Configuration.plugins","Configuration.addPlugin","Configuration.removePlugin","Configuration.setVersion","Configuration.setUserIdentity","Configuration.userAgent","Configuration.useSessions","Configuration.useReferenceIds","Configuration.useDebugLogger","Configuration.defaults","EventBuilder","EventBuilder.constructor","EventBuilder.setType","EventBuilder.setSource","EventBuilder.setReferenceId","EventBuilder.setMessage","EventBuilder.setGeo","EventBuilder.setUserIdentity","EventBuilder.setValue","EventBuilder.addTags","EventBuilder.setProperty","EventBuilder.markAsCritical","EventBuilder.addRequestInfo","EventBuilder.submit","EventBuilder.isValidIdentifier","ContextData","ContextData.constructor","ContextData.setException","ContextData.hasException","ContextData.getException","ContextData.markAsUnhandledError","ContextData.isUnhandledError","ContextData.setSubmissionMethod","ContextData.getSubmissionMethod","SubmissionResponse","SubmissionResponse.constructor","ExceptionlessClient","ExceptionlessClient.constructor","ExceptionlessClient.createException","ExceptionlessClient.submitException","ExceptionlessClient.createUnhandledException","ExceptionlessClient.submitUnhandledException","ExceptionlessClient.createFeatureUsage","ExceptionlessClient.submitFeatureUsage","ExceptionlessClient.createLog","ExceptionlessClient.submitLog","ExceptionlessClient.createNotFound","ExceptionlessClient.submitNotFound","ExceptionlessClient.createSessionStart","ExceptionlessClient.submitSessionStart","ExceptionlessClient.createSessionEnd","ExceptionlessClient.submitSessionEnd","ExceptionlessClient.createSessionHeartbeat","ExceptionlessClient.submitSessionHeartbeat","ExceptionlessClient.createEvent","ExceptionlessClient.submitEvent","ExceptionlessClient.submitEvent.cancelled","ExceptionlessClient.updateUserEmailAndDescription","ExceptionlessClient.getLastReferenceId","ExceptionlessClient.default","ConfigurationDefaultsPlugin","ConfigurationDefaultsPlugin.constructor","ConfigurationDefaultsPlugin.run","ErrorPlugin","ErrorPlugin.constructor","ErrorPlugin.run","ModuleInfoPlugin","ModuleInfoPlugin.constructor","ModuleInfoPlugin.run","RequestInfoPlugin","RequestInfoPlugin.constructor","RequestInfoPlugin.run","EnvironmentInfoPlugin","EnvironmentInfoPlugin.constructor","EnvironmentInfoPlugin.run","SubmissionMethodPlugin","SubmissionMethodPlugin.constructor","SubmissionMethodPlugin.run","DuplicateCheckerPlugin","DuplicateCheckerPlugin.constructor","DuplicateCheckerPlugin.run","DuplicateCheckerPlugin.getNow","DuplicateCheckerPlugin.checkDuplicate","DuplicateCheckerPlugin.checkDuplicate.getHashCodeForError","SettingsResponse","SettingsResponse.constructor","NodeEnvironmentInfoCollector","NodeEnvironmentInfoCollector.constructor","NodeEnvironmentInfoCollector.getEnvironmentInfo","NodeEnvironmentInfoCollector.getEnvironmentInfo.getIpAddresses","NodeErrorParser","NodeErrorParser.constructor","NodeErrorParser.parse","NodeErrorParser.parse.getStackFrames","NodeModuleCollector","NodeModuleCollector.constructor","NodeModuleCollector.getModules","NodeModuleCollector.initialize","NodeRequestInfoCollector","NodeRequestInfoCollector.constructor","NodeRequestInfoCollector.getRequestInfo","NodeSubmissionAdapter","NodeSubmissionAdapter.constructor","NodeSubmissionAdapter.sendRequest","NodeSubmissionAdapter.complete","NodeSubmissionAdapter.sendRequestSync","getListenerCount","onUncaughtException","getExitCodeReason"],"mappings":"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","sourcesContent":["import * as events from \"events\";\nimport * as net from \"net\";\nimport * as stream from \"stream\";\nimport * as child from \"child_process\";\nimport * as tls from \"tls\";\nimport * as http from \"http\";\nimport * as crypto from \"crypto\";\nexport interface IEvent {\n  type?: string;\n  source?: string;\n  date?: Date;\n  tags?: string[];\n  message?: string;\n  geo?: string;\n  value?: number;\n  data?: any;\n  reference_id?: string;\n}\n\nexport interface ILastReferenceIdManager {\n  getLast(): string;\n  clearLast(): void;\n  setLast(eventId: string): void;\n}\n\nexport interface ILog {\n  info(message: string): void;\n  warn(message: string): void;\n  error(message: string): void;\n}\n\n                                          \n\nexport interface IEventQueue {\n  enqueue(event: IEvent): void;\n  process(isAppExiting?: boolean): void;\n  suspendProcessing(durationInMinutes?: number, discardFutureQueuedItems?: boolean, clearQueue?: boolean): void;\n}\n\n                                                                                                                                  \n\nexport interface IEnvironmentInfoCollector {\n  getEnvironmentInfo(context: EventPluginContext): IEnvironmentInfo;\n}\n\n                                                                                                              \n\nexport interface IErrorParser {\n  parse(context: EventPluginContext, exception: Error): IError;\n}\n\n                                                                                                                \n\nexport interface IModuleCollector {\n  getModules(context: EventPluginContext): IModule[];\n}\n\n                                                                                                                          \n\nexport interface IRequestInfoCollector {\n  getRequestInfo(context: EventPluginContext): IRequestInfo;\n}\n\n                                              \n\nexport interface IStorage<T> {\n  save(path: string, value: T): boolean;\n  get(path: string): T;\n  getList(searchPattern?: string, limit?: number): IStorageItem<T>[];\n  remove(path: string): void;\n}\n\n                                                                                                                   \n\nexport interface ISubmissionAdapter {\n  sendRequest(request: SubmissionRequest, callback: SubmissionCallback, isAppExiting?: boolean): void;\n}\n\n                                                                                                                                                                                                                                                                                           \n\nexport interface ISubmissionClient {\n  postEvents(events: IEvent[], config: Configuration, callback: (response: SubmissionResponse) => void, isAppExiting?: boolean): void;\n  postUserDescription(referenceId: string, description: IUserDescription, config: Configuration, callback: (response: SubmissionResponse) => void): void;\n  getSettings(config: Configuration, callback: (response: SettingsResponse) => void): void;\n}\n\nn\nexport interface IConfigurationSettings {\n  apiKey?: string;\n  serverUrl?: string;\n  enableSessions?:boolean;\n  environmentInfoCollector?: IEnvironmentInfoCollector;\n  errorParser?: IErrorParser;\n  lastReferenceIdManager?: ILastReferenceIdManager;\n  log?: ILog;\n  moduleCollector?: IModuleCollector;\n  requestInfoCollector?: IRequestInfoCollector;\n  submissionBatchSize?: number;\n  submissionClient?: ISubmissionClient;\n  submissionAdapter?: ISubmissionAdapter;\n  storage?: IStorage<any>;\n  queue?: IEventQueue;\n}\n\n                                                                                                                                                     \n\nexport class SettingsManager {\n  /**\n   * The configuration settings path.\n   * @type {string}\n   * @private\n   */\n  private static _configPath: string = 'ex-server-settings.json';\n\n  /**\n   * A list of handlers that will be fired when the settings change.\n   * @type {Array}\n   * @private\n   */\n  private static _handlers: { (config: Configuration): void }[] = [];\n\n  public static onChanged(handler: (config: Configuration) => void) {\n    !!handler && this._handlers.push(handler);\n  }\n\n  public static applySavedServerSettings(config: Configuration): void {\n    config.log.info('Applying saved settings.');\n    config.settings = Utils.merge(config.settings, this.getSavedServerSettings(config));\n    this.changed(config);\n  }\n\n  public static checkVersion(version: number, config: Configuration): void {\n    if (version) {\n      let savedConfigVersion = parseInt(<string>config.storage.get(`${this._configPath}-version`), 10);\n      if (isNaN(savedConfigVersion) || version > savedConfigVersion) {\n        config.log.info(`Updating settings from v${(!isNaN(savedConfigVersion) ? savedConfigVersion : 0) } to v${version}`);\n        this.updateSettings(config);\n      }\n    }\n  }\n\n  public static updateSettings(config: Configuration): void {\n    if (!config.isValid) {\n      config.log.error('Unable to update settings: ApiKey is not set.');\n      return;\n    }\n\n    config.submissionClient.getSettings(config, (response: SettingsResponse) => {\n      if (!response || !response.success || !response.settings) {\n        return;\n      }\n\n      config.settings = Utils.merge(config.settings, response.settings);\n\n      // TODO: Store snapshot of settings after reading from config and attributes and use that to revert to defaults.\n      // Remove any existing server settings that are not in the new server settings.\n      let savedServerSettings = SettingsManager.getSavedServerSettings(config);\n      for (let key in savedServerSettings) {\n        if (response.settings[key]) {\n          continue;\n        }\n\n        delete config.settings[key];\n      }\n\n      let path = SettingsManager._configPath; // optimization for minifier.\n      config.storage.save(`${path}-version`, response.settingsVersion);\n      config.storage.save(path, response.settings);\n\n      config.log.info('Updated settings');\n      this.changed(config);\n    });\n  }\n\n  private static changed(config: Configuration) {\n    let handlers = this._handlers; // optimization for minifier.\n    for (let index = 0; index < handlers.length; index++) {\n      handlers[index](config);\n    }\n  }\n\n  private static getSavedServerSettings(config: Configuration): Object {\n    return config.storage.get(this._configPath) || {};\n  }\n}\n\n                                                                    \n\nexport class DefaultLastReferenceIdManager implements ILastReferenceIdManager {\n  /**\n   * Gets the last event's reference id that was submitted to the server.\n   * @type {string}\n   * @private\n   */\n  private _lastReferenceId: string = null;\n\n  /**\n   * Gets the last event's reference id that was submitted to the server.\n   * @returns {string}\n   */\n  getLast(): string {\n    return this._lastReferenceId;\n  }\n\n  /**\n   * Clears the last event's reference id.\n   */\n  clearLast(): void {\n    this._lastReferenceId = null;\n  }\n\n  /**\n   * Sets the last event's reference id.\n   * @param eventId\n   */\n  setLast(eventId: string): void {\n    this._lastReferenceId = eventId;\n  }\n}\n\n                              \n\nexport class ConsoleLog implements ILog {\n  public info(message: string): void {\n    this.log('info', message);\n  }\n\n  public warn(message: string): void {\n    this.log('warn', message);\n  }\n\n  public error(message: string): void {\n    this.log('error', message);\n  }\n\n  private log(level: string, message: string) {\n    if (console && console[level]) {\n      console[level](`[${level}] Exceptionless: ${message}`);\n    }\n  }\n}\n\n                              \n\nexport class NullLog implements ILog {\n  public info(message: string): void { }\n  public warn(message: string): void { }\n  public error(message: string): void { }\n}\n\nexport interface IUserInfo {\n  identity?: string;\n  name?: string;\n  data?: any;\n}\n\n                                                                                                         \n\nexport interface IEventPlugin {\n  priority?: number;\n  name?: string;\n  run(context: EventPluginContext, next?: () => void): void;\n}\n\n                                                                                                                                                                                             \n\nexport class EventPluginContext {\n  public cancelled: boolean;\n  public client: ExceptionlessClient;\n  public event: IEvent;\n  public contextData: ContextData;\n\n  constructor(client: ExceptionlessClient, event: IEvent, contextData?: ContextData) {\n    this.client = client;\n    this.event = event;\n    this.contextData = contextData ? contextData : new ContextData();\n  }\n\n  public get log(): ILog {\n    return this.client.config.log;\n  }\n}\n\nn\nexport class EventPluginManager {\n  public static run(context: EventPluginContext, callback: (context?: EventPluginContext) => void): void {\n    let wrap = function(plugin: IEventPlugin, next?: () => void): () => void {\n      return () => {\n        try {\n          if (!context.cancelled) {\n            plugin.run(context, next);\n          }\n        } catch (ex) {\n          context.cancelled = true;\n          context.log.error(`Error running plugin '${plugin.name}': ${ex.message}. Discarding Event.`);\n        }\n\n        if (context.cancelled && !!callback) {\n          callback(context);\n        }\n      };\n    };\n\n    let plugins: IEventPlugin[] = context.client.config.plugins; // optimization for minifier.\n    let wrappedPlugins: { (): void }[] = [];\n    if (!!callback) {\n      wrappedPlugins[plugins.length] = wrap({ name: 'cb', priority: 9007199254740992, run: callback }, null);\n    }\n\n    for (let index = plugins.length - 1; index > -1; index--) {\n      wrappedPlugins[index] = wrap(plugins[index], !!callback || (index < plugins.length - 1) ? wrappedPlugins[index + 1] : null);\n    }\n\n    wrappedPlugins[0]();\n  }\n\n  public static addDefaultPlugins(config: Configuration): void {\n    config.addPlugin(new ConfigurationDefaultsPlugin());\n    config.addPlugin(new ErrorPlugin());\n    config.addPlugin(new DuplicateCheckerPlugin());\n    config.addPlugin(new ModuleInfoPlugin());\n    config.addPlugin(new RequestInfoPlugin());\n    config.addPlugin(new EnvironmentInfoPlugin());\n    config.addPlugin(new SubmissionMethodPlugin());\n  }\n}\n\n                                                                                                                                                               \n\nexport class HeartbeatPlugin implements IEventPlugin {\n  public priority: number = 100;\n  public name: string = 'HeartbeatPlugin';\n\n  private _heartbeatIntervalId: any;\n  private _lastUser: IUserInfo;\n\n  public run(context: EventPluginContext, next?: () => void): void {\n    let clearHeartbeatInterval = () => {\n      if (this._heartbeatIntervalId) {\n        clearInterval(this._heartbeatIntervalId);\n        this._heartbeatIntervalId = 0;\n      }\n    };\n\n    let type = context.event.type;\n    if (type !== 'heartbeat') {\n      if (type === 'sessionend') {\n        clearHeartbeatInterval();\n      } else {\n        let user: IUserInfo = context.event.data['@user'];\n        if (user && user.identity) {\n          let submitHeartbeatFn = () => context.client.submitSessionHeartbeat(user.identity, user.name);\n\n          if (!this._heartbeatIntervalId) {\n            this._lastUser = user;\n          } else {\n            clearHeartbeatInterval();\n          }\n\n          this._heartbeatIntervalId = setInterval(submitHeartbeatFn, 30000);\n        }\n      }\n    }\n\n    next && next();\n  }\n}\n\n                                                                                                                                                \n\nexport class ReferenceIdPlugin implements IEventPlugin {\n  public priority: number = 20;\n  public name: string = 'ReferenceIdPlugin';\n\n  public run(context: EventPluginContext, next?: () => void): void {\n    if ((!context.event.reference_id || context.event.reference_id.length === 0) && context.event.type === 'error') {\n      context.event.reference_id = Utils.guid().replace('-', '').substring(0, 10);\n    }\n\n    next && next();\n  }\n}\n\n                                                                                                                                                                                                                                                                                                               \n\nexport class DefaultEventQueue implements IEventQueue {\n  /**\n   * The configuration object.\n   * @type {Configuration}\n   * @private\n   */\n  private _config: Configuration;\n\n  /**\n   * Suspends processing until the specified time.\n   * @type {Date}\n   * @private\n   */\n  private _suspendProcessingUntil: Date;\n\n  /**\n   * Discards queued items until the specified time.\n   * @type {Date}\n   * @private\n   */\n  private _discardQueuedItemsUntil: Date;\n\n  /**\n   * Returns true if the queue is processing.\n   * @type {boolean}\n   * @private\n   */\n  private _processingQueue: boolean = false;\n\n  /**\n   * Processes the queue every xx seconds.\n   * @type {Timer}\n   * @private\n   */\n  private _queueTimer: any;\n\n  constructor(config: Configuration) {\n    this._config = config;\n  }\n\n  public enqueue(event: IEvent): void {\n    let config: Configuration = this._config; // Optimization for minifier.\n    this.ensureQueueTimer();\n\n    if (this.areQueuedItemsDiscarded()) {\n      config.log.info('Queue items are currently being discarded. The event will not be queued.');\n      return;\n    }\n\n    let key = `ex-q-${new Date().toJSON() }-${Utils.randomNumber() }`;\n    config.log.info(`Enqueuing event: ${key} type=${event.type} ${!!event.reference_id ? 'refid=' + event.reference_id : ''}`);\n    config.storage.save(key, event);\n  }\n\n  public process(isAppExiting?: boolean): void {\n    function getEvents(events: { path: string, value: IEvent }[]): IEvent[] {\n      let items: IEvent[] = [];\n      for (let index = 0; index < events.length; index++) {\n        items.push(events[index].value);\n      }\n\n      return items;\n    }\n\n    const queueNotProcessed: string = 'The queue will not be processed.'; // optimization for minifier.\n    let config: Configuration = this._config; // Optimization for minifier.\n    let log: ILog = config.log; // Optimization for minifier.\n\n    this.ensureQueueTimer();\n\n    if (this._processingQueue) {\n      return;\n    }\n\n    log.info('Processing queue...');\n    if (!config.enabled) {\n      log.info(`Configuration is disabled. ${queueNotProcessed}`);\n      return;\n    }\n\n    if (!config.isValid) {\n      log.info(`Invalid Api Key. ${queueNotProcessed}`);\n      return;\n    }\n\n    this._processingQueue = true;\n\n    try {\n      let events = config.storage.getList('ex-q', config.submissionBatchSize);\n      if (!events || events.length === 0) {\n        this._processingQueue = false;\n        return;\n      }\n\n      log.info(`Sending ${events.length} events to ${config.serverUrl}.`);\n      config.submissionClient.postEvents(getEvents(events), config, (response: SubmissionResponse) => {\n        this.processSubmissionResponse(response, events);\n        log.info('Finished processing queue.');\n        this._processingQueue = false;\n      }, isAppExiting);\n    } catch (ex) {\n      log.error(`Error processing queue: ${ex}`);\n      this.suspendProcessing();\n      this._processingQueue = false;\n    }\n  }\n\n  public suspendProcessing(durationInMinutes?: number, discardFutureQueuedItems?: boolean, clearQueue?: boolean): void {\n    let config: Configuration = this._config; // Optimization for minifier.\n\n    if (!durationInMinutes || durationInMinutes <= 0) {\n      durationInMinutes = 5;\n    }\n\n    config.log.info(`Suspending processing for ${durationInMinutes} minutes.`);\n    this._suspendProcessingUntil = new Date(new Date().getTime() + (durationInMinutes * 60000));\n\n    if (discardFutureQueuedItems) {\n      this._discardQueuedItemsUntil = new Date(new Date().getTime() + (durationInMinutes * 60000));\n    }\n\n    if (clearQueue) {\n      // Account is over the limit and we want to ensure that the sample size being sent in will contain newer errors.\n      this.removeEvents(config.storage.getList('ex-q'));\n    }\n  }\n\n  private areQueuedItemsDiscarded(): boolean {\n    return this._discardQueuedItemsUntil && this._discardQueuedItemsUntil > new Date();\n  }\n\n  private ensureQueueTimer(): void {\n    if (!this._queueTimer) {\n      this._queueTimer = setInterval(() => this.onProcessQueue(), 10000);\n    }\n  }\n\n  private isQueueProcessingSuspended(): boolean {\n    return this._suspendProcessingUntil && this._suspendProcessingUntil > new Date();\n  }\n\n  private onProcessQueue(): void {\n    if (!this.isQueueProcessingSuspended() && !this._processingQueue) {\n      this.process();\n    }\n  }\n\n  private processSubmissionResponse(response: SubmissionResponse, events: { path: string, value: IEvent }[]): void {\n    const noSubmission: string = 'The event will not be submitted.'; // Optimization for minifier.\n    let config: Configuration = this._config; // Optimization for minifier.\n    let log: ILog = config.log; // Optimization for minifier.\n\n    if (response.success) {\n      log.info(`Sent ${events.length} events.`);\n      this.removeEvents(events);\n      return;\n    }\n\n    if (response.serviceUnavailable) {\n      // You are currently over your rate limit or the servers are under stress.\n      log.error('Server returned service unavailable.');\n      this.suspendProcessing();\n      return;\n    }\n\n    if (response.paymentRequired) {\n      // If the organization over the rate limit then discard the event.\n      log.info('Too many events have been submitted, please upgrade your plan.');\n      this.suspendProcessing(null, true, true);\n      return;\n    }\n\n    if (response.unableToAuthenticate) {\n      // The api key was suspended or could not be authorized.\n      log.info(`Unable to authenticate, please check your configuration. ${noSubmission}`);\n      this.suspendProcessing(15);\n      this.removeEvents(events);\n      return;\n    }\n\n    if (response.notFound || response.badRequest) {\n      // The service end point could not be found.\n      log.error(`Error while trying to submit data: ${response.message}`);\n      this.suspendProcessing(60 * 4);\n      this.removeEvents(events);\n      return;\n    }\n\n    if (response.requestEntityTooLarge) {\n      let message = 'Event submission discarded for being too large.';\n      if (config.submissionBatchSize > 1) {\n        log.error(`${message} Retrying with smaller batch size.`);\n        config.submissionBatchSize = Math.max(1, Math.round(config.submissionBatchSize / 1.5));\n      } else {\n        log.error(`${message} ${noSubmission}`);\n        this.removeEvents(events);\n      }\n\n      return;\n    }\n\n    if (!response.success) {\n      log.error(`Error submitting events: ${response.message || 'Please check the network tab for more info.'}`);\n      this.suspendProcessing();\n    }\n  }\n\n  private removeEvents(events: { path: string, value: IEvent }[]) {\n    for (let index = 0; index < (events || []).length; index++) {\n      this._config.storage.remove(events[index].path);\n    }\n  }\n}\n\n                                                                                     \n\nexport class InMemoryStorage<T> implements IStorage<T> {\n  private _items: IStorageItem<T>[] = [];\n  private _maxItems: number;\n\n  constructor(maxItems?: number) {\n    this._maxItems = maxItems > 0 ? maxItems : 250;\n  }\n\n  public save(path: string, value: T): boolean {\n    if (!path || !value) {\n      return false;\n    }\n\n    this.remove(path);\n    if (this._items.push({ created: new Date().getTime(), path: path, value: value }) > this._maxItems) {\n      this._items.shift();\n    }\n\n    return true;\n  }\n\n  public get(path: string): T {\n    let item: IStorageItem<T> = path ? this.getList(`^${path}$`, 1)[0] : null;\n    return item ? item.value : null;\n  }\n\n  public getList(searchPattern?: string, limit?: number): IStorageItem<T>[] {\n    let items = this._items; // Optimization for minifier\n    if (!searchPattern) {\n      return items.slice(0, limit);\n    }\n\n    let regex = new RegExp(searchPattern);\n    let results: IStorageItem<T>[] = [];\n    for (let index = 0; index < items.length; index++) {\n      if (regex.test(items[index].path)) {\n        results.push(items[index]);\n\n        if (results.length >= limit) {\n          break;\n        }\n      }\n    }\n\n    return results;\n  }\n\n  public remove(path: string): void {\n    if (path) {\n      let item = this.getList(`^${path}$`, 1)[0];\n      if (item) {\n        this._items.splice(this._items.indexOf(item), 1);\n      }\n    }\n  }\n}\n\nn\ndeclare var XDomainRequest: { new (); create(); };\n\nexport class DefaultSubmissionClient implements ISubmissionClient {\n  public configurationVersionHeader: string = 'x-exceptionless-configversion';\n\n  public postEvents(events: IEvent[], config: Configuration, callback: (response: SubmissionResponse) => void, isAppExiting?: boolean): void {\n    let data = JSON.stringify(events);\n    let request = this.createRequest(config, 'POST', '/api/v2/events', data);\n    let cb = this.createSubmissionCallback(config, callback);\n\n    return config.submissionAdapter.sendRequest(request, cb, isAppExiting);\n  }\n\n  public postUserDescription(referenceId: string, description: IUserDescription, config: Configuration, callback: (response: SubmissionResponse) => void): void {\n    let path = `/api/v2/events/by-ref/${encodeURIComponent(referenceId) }/user-description`;\n    let data = JSON.stringify(description);\n    let request = this.createRequest(config, 'POST', path, data);\n    let cb = this.createSubmissionCallback(config, callback);\n\n    return config.submissionAdapter.sendRequest(request, cb);\n  }\n\n  public getSettings(config: Configuration, callback: (response: SettingsResponse) => void): void {\n    let request = this.createRequest(config, 'GET', '/api/v2/projects/config');\n    let cb = (status, message, data?, headers?) => {\n      if (status !== 200) {\n        return callback(new SettingsResponse(false, null, -1, null, message));\n      }\n\n      let settings: IClientConfiguration;\n      try {\n        settings = JSON.parse(data);\n      } catch (e) {\n        config.log.error(`Unable to parse settings: '${data}'`);\n      }\n\n      if (!settings || isNaN(settings.version)) {\n        return callback(new SettingsResponse(false, null, -1, null, 'Invalid configuration settings.'));\n      }\n\n      callback(new SettingsResponse(true, settings.settings || {}, settings.version));\n    };\n\n    return config.submissionAdapter.sendRequest(request, cb);\n  }\n\n  private createRequest(config: Configuration, method: string, path: string, data: string = null): SubmissionRequest {\n    return {\n      method,\n      path,\n      data,\n      serverUrl: config.serverUrl,\n      apiKey: config.apiKey,\n      userAgent: config.userAgent\n    };\n  }\n\n  private createSubmissionCallback(config: Configuration, callback: (response: SubmissionResponse) => void) {\n    return (status, message, data?, headers?) => {\n      let settingsVersion: number = headers && parseInt(headers[this.configurationVersionHeader], 10);\n      SettingsManager.checkVersion(settingsVersion, config);\n\n      callback(new SubmissionResponse(status, message));\n    };\n  }\n}\n\nexport class Utils {\n  public static addRange<T>(target: T[], ...values: T[]) {\n    if (!target) {\n      target = [];\n    }\n\n    if (!values || values.length === 0) {\n      return target;\n    }\n\n    for (let index = 0; index < values.length; index++) {\n      if (values[index] && target.indexOf(values[index]) < 0) {\n        target.push(values[index]);\n      }\n    }\n\n    return target;\n  }\n\n  public static getHashCode(source: string): number {\n    if (!source || source.length === 0) {\n      return 0;\n    }\n\n    let hash: number = 0;\n    for (let index = 0; index < source.length; index++) {\n      let character = source.charCodeAt(index);\n      hash = ((hash << 5) - hash) + character;\n      hash |= 0;\n    }\n\n    return hash;\n  }\n\n  public static getCookies(cookies: string, exclusions?: string[]): Object {\n    let result: Object = {};\n\n    let parts: string[] = (cookies || '').split('; ');\n    for (let index = 0; index < parts.length; index++) {\n      let cookie: string[] = parts[index].split('=');\n      if (!Utils.isMatch(cookie[0], exclusions)) {\n        result[cookie[0]] = cookie[1];\n      }\n    }\n\n    return !Utils.isEmpty(result) ? result : null;\n  }\n\n  public static guid(): string {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    }\n\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  }\n\n  public static merge(defaultValues: Object, values: Object) {\n    let result: Object = {};\n\n    for (let key in defaultValues || {}) {\n      if (!!defaultValues[key]) {\n        result[key] = defaultValues[key];\n      }\n    }\n\n    for (let key in values || {}) {\n      if (!!values[key]) {\n        result[key] = values[key];\n      }\n    }\n\n    return result;\n  }\n\n  public static parseVersion(source: string): string {\n    if (!source) {\n      return null;\n    }\n\n    let versionRegex = /(v?((\\d+)\\.(\\d+)(\\.(\\d+))?)(?:-([\\dA-Za-z\\-]+(?:\\.[\\dA-Za-z\\-]+)*))?(?:\\+([\\dA-Za-z\\-]+(?:\\.[\\dA-Za-z\\-]+)*))?)/;\n    let matches = versionRegex.exec(source);\n    if (matches && matches.length > 0) {\n      return matches[0];\n    }\n\n    return null;\n  }\n\n  public static parseQueryString(query: string, exclusions?: string[]) {\n    if (!query || query.length === 0) {\n      return null;\n    }\n\n    let pairs: string[] = query.split('&');\n    if (pairs.length === 0) {\n      return null;\n    }\n\n    let result: Object = {};\n    for (let index = 0; index < pairs.length; index++) {\n      let pair = pairs[index].split('=');\n      if (!Utils.isMatch(pair[0], exclusions)) {\n        result[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n      }\n    }\n\n    return !Utils.isEmpty(result) ? result : null;\n  }\n\n  public static randomNumber(): number {\n    return Math.floor(Math.random() * 9007199254740992);\n  }\n\n  /**\n   * Checks to see if a value matches a pattern.\n   * @param input the value to check against the @pattern.\n   * @param pattern The pattern to check, supports wild cards (*).\n   */\n  public static isMatch(input: string, patterns: string[]): boolean {\n    if (!input || typeof input !== 'string') {\n      return false;\n    }\n\n    let trim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n    return (patterns || []).some(pattern => {\n      if (!pattern) {\n        return false;\n      }\n\n      pattern = pattern.toLowerCase().replace(trim, '');\n      input = input.toLowerCase().replace(trim, '');\n\n      if (pattern.length <= 0) {\n        return false;\n      }\n\n      let startsWithWildcard: boolean = pattern[0] === '*';\n      if (startsWithWildcard) {\n        pattern = pattern.slice(1);\n      }\n\n      let endsWithWildcard: boolean = pattern[pattern.length - 1] === '*';\n      if (endsWithWildcard) {\n        pattern = pattern.substring(0, pattern.length - 1);\n      }\n\n      if (startsWithWildcard && endsWithWildcard) {\n        return input.indexOf(pattern) !== -1;\n      }\n\n      if (startsWithWildcard) {\n        let lastIndexOf = input.lastIndexOf(pattern);\n        return lastIndexOf !== -1 && lastIndexOf === (input.length - pattern.length);\n      }\n\n      if (endsWithWildcard) {\n        return input.indexOf(pattern) === 0;\n      }\n\n      return input === pattern;\n    });\n  }\n\n  public static isEmpty(input: Object) {\n    return input === null || (typeof (input) === 'object' && Object.keys(input).length === 0);\n  }\n\n  /**\n   * Stringifys an object with optional exclusions and max depth.\n   * @param data The data object to add.\n   * @param exclusions Any property names that should be excluded.\n   * @param maxDepth The max depth of the object to include.\n   */\n  public static stringify(data: any, exclusions?: string[], maxDepth?: number): string {\n    function stringifyImpl(obj: any, excludedKeys: string[]): string {\n      let cache: string[] = [];\n      return JSON.stringify(obj, function(key: string, value: any) {\n        if (Utils.isMatch(key, excludedKeys)) {\n          return;\n        }\n\n        if (typeof value === 'object' && !!value) {\n          if (cache.indexOf(value) !== -1) {\n            // Circular reference found, discard key\n            return;\n          }\n\n          cache.push(value);\n        }\n\n        return value;\n      });\n    }\n\n    if (({}).toString.call(data) === '[object Object]') {\n      let flattened = {};\n      /* tslint:disable:forin */\n      for (let prop in data) {\n        let value = data[prop];\n        if (value === data) {\n          continue;\n        }\n        flattened[prop] = data[prop];\n      }\n      /* tslint:enable:forin */\n\n      return stringifyImpl(flattened, exclusions);\n    }\n\n    if (({}).toString.call(data) === '[object Array]') {\n      let result = [];\n      for (let index = 0; index < data.length; index++) {\n        result[index] = JSON.parse(stringifyImpl(data[index], exclusions));\n      }\n\n      return JSON.stringify(result);\n    }\n\n    return stringifyImpl(data, exclusions);\n  }\n}\n\nn\nexport class Configuration implements IConfigurationSettings {\n  /**\n   * The default configuration settings that are applied to new configuration instances.\n   * @type {IConfigurationSettings}\n   * @private\n   */\n  private static _defaultSettings: IConfigurationSettings = null;\n\n  /**\n   * A default list of tags that will automatically be added to every\n   * report submitted to the server.\n   *\n   * @type {Array}\n   */\n  public defaultTags: string[] = [];\n\n  /**\n   * A default list of of extended data objects that will automatically\n   * be added to every report submitted to the server.\n   *\n   * @type {{}}\n   */\n  public defaultData: Object = {};\n\n  /**\n   * Whether the client is currently enabled or not. If it is disabled,\n   * submitted errors will be discarded and no data will be sent to the server.\n   *\n   * @returns {boolean}\n   */\n  public enabled: boolean = true;\n\n  public environmentInfoCollector: IEnvironmentInfoCollector;\n  public errorParser: IErrorParser;\n  public lastReferenceIdManager: ILastReferenceIdManager = new DefaultLastReferenceIdManager();\n  public log: ILog;\n  public moduleCollector: IModuleCollector;\n  public requestInfoCollector: IRequestInfoCollector;\n\n  /**\n   * Maximum number of events that should be sent to the server together in a batch. (Defaults to 50)\n   */\n  public submissionBatchSize: number;\n  public submissionAdapter: ISubmissionAdapter;\n  public submissionClient: ISubmissionClient;\n\n  /**\n   * Contains a dictionary of custom settings that can be used to control\n   * the client and will be automatically updated from the server.\n   */\n  public settings: Object = {};\n\n  public storage: IStorage<Object>;\n\n  public queue: IEventQueue;\n\n  /**\n   * The list of plugins that will be used in this configuration.\n   * @type {Array}\n   * @private\n   */\n  private _plugins: IEventPlugin[] = [];\n\n  constructor(configSettings?: IConfigurationSettings) {\n    function inject(fn: any) {\n      return typeof fn === 'function' ? fn(this) : fn;\n    }\n\n    configSettings = Utils.merge(Configuration.defaults, configSettings);\n\n    this.log = inject(configSettings.log) || new NullLog();\n    this.apiKey = configSettings.apiKey;\n    this.serverUrl = configSettings.serverUrl;\n\n    this.environmentInfoCollector = inject(configSettings.environmentInfoCollector);\n    this.errorParser = inject(configSettings.errorParser);\n    this.lastReferenceIdManager = inject(configSettings.lastReferenceIdManager) || new DefaultLastReferenceIdManager();\n    this.moduleCollector = inject(configSettings.moduleCollector);\n    this.requestInfoCollector = inject(configSettings.requestInfoCollector);\n    this.submissionBatchSize = inject(configSettings.submissionBatchSize) || 50;\n    this.submissionAdapter = inject(configSettings.submissionAdapter);\n    this.submissionClient = inject(configSettings.submissionClient) || new DefaultSubmissionClient();\n    this.storage = inject(configSettings.storage) || new InMemoryStorage<any>();\n    this.queue = inject(configSettings.queue) || new DefaultEventQueue(this);\n\n    SettingsManager.applySavedServerSettings(this);\n\n    EventPluginManager.addDefaultPlugins(this);\n    if (configSettings.enableSessions) {\n      this.useSessions();\n    }\n  }\n\n  /**\n   * The API key that will be used when sending events to the server.\n   * @type {string}\n   * @private\n   */\n  private _apiKey: string;\n\n  /**\n   * The API key that will be used when sending events to the server.\n   * @returns {string}\n   */\n  public get apiKey(): string {\n    return this._apiKey;\n  }\n\n  /**\n   * The API key that will be used when sending events to the server.\n   * @param value\n   */\n  public set apiKey(value: string) {\n    this._apiKey = value || null;\n    this.log.info(`apiKey: ${this._apiKey}`);\n  }\n\n  /**\n   * Returns true if the apiKey is valid.\n   * @returns {boolean}\n   */\n  public get isValid(): boolean {\n    return !!this.apiKey && this.apiKey.length >= 10;\n  }\n\n  /**\n   * The server url that all events will be sent to.\n   * @type {string}\n   * @private\n   */\n  private _serverUrl: string = 'https://collector.exceptionless.io';\n\n  /**\n   * The server url that all events will be sent to.\n   * @returns {string}\n   */\n  public get serverUrl(): string {\n    return this._serverUrl;\n  }\n\n  /**\n   * The server url that all events will be sent to.\n   * @param value\n   */\n  public set serverUrl(value: string) {\n    if (!!value) {\n      this._serverUrl = value;\n      this.log.info(`serverUrl: ${this._serverUrl}`);\n    }\n  }\n\n  /**\n   * A list of exclusion patterns.\n   * @type {Array}\n   * @private\n   */\n  private _dataExclusions: string[] = [];\n\n  /**\n   *  A list of exclusion patterns that will automatically remove any data that\n   *  matches them from any data submitted to the server.\n   *\n   *  For example, entering CreditCard will remove any extended data properties,\n   *  form fields, cookies and query parameters from the report.\n   *\n   * @returns {string[]}\n   */\n  public get dataExclusions(): string[] {\n    let exclusions: string = this.settings['@@DataExclusions'];\n    return this._dataExclusions.concat(exclusions && exclusions.split(',') || []);\n  }\n\n  /**\n   * Add items to the list of exclusion patterns that will automatically remove any\n   * data that matches them from any data submitted to the server.\n   *\n   * For example, entering CreditCard will remove any extended data properties, form\n   * fields, cookies and query parameters from the report.\n   *\n   * @param exclusions\n   */\n  public addDataExclusions(...exclusions: string[]) {\n    this._dataExclusions = Utils.addRange<string>(this._dataExclusions, ...exclusions);\n  }\n\n  /**\n   * The list of plugins that will be used in this configuration.\n   * @returns {IEventPlugin[]}\n   */\n  public get plugins(): IEventPlugin[] {\n    return this._plugins.sort((p1: IEventPlugin, p2: IEventPlugin) => {\n      return (p1.priority < p2.priority) ? -1 : (p1.priority > p2.priority) ? 1 : 0;\n    });\n  }\n\n  /**\n   * Register an plugin to be used in this configuration.\n   * @param plugin\n   */\n  public addPlugin(plugin: IEventPlugin): void;\n\n  /**\n   * Register an plugin to be used in this configuration.\n   * @param name The name used to identify the plugin.\n   * @param priority Used to determine plugins priority.\n   * @param pluginAction A function that is run.\n   */\n  public addPlugin(name: string, priority: number, pluginAction: (context: EventPluginContext, next?: () => void) => void): void;\n  public addPlugin(pluginOrName: IEventPlugin | string, priority?: number, pluginAction?: (context: EventPluginContext, next?: () => void) => void): void {\n    let plugin: IEventPlugin = !!pluginAction ? { name: <string>pluginOrName, priority: priority, run: pluginAction } : <IEventPlugin>pluginOrName;\n    if (!plugin || !plugin.run) {\n      this.log.error('Add plugin failed: Run method not defined');\n      return;\n    }\n\n    if (!plugin.name) {\n      plugin.name = Utils.guid();\n    }\n\n    if (!plugin.priority) {\n      plugin.priority = 0;\n    }\n\n    let pluginExists: boolean = false;\n    let plugins = this._plugins; // optimization for minifier.\n    for (let index = 0; index < plugins.length; index++) {\n      if (plugins[index].name === plugin.name) {\n        pluginExists = true;\n        break;\n      }\n    }\n\n    if (!pluginExists) {\n      plugins.push(plugin);\n    }\n  }\n\n  /**\n   * Remove the plugin from this configuration.\n   * @param plugin\n   */\n  public removePlugin(plugin: IEventPlugin): void;\n\n  /**\n   * Remove an plugin by key from this configuration.\n   * @param name\n   */\n  public removePlugin(name: string): void;\n  public removePlugin(pluginOrName: IEventPlugin | string): void {\n    let name: string = typeof pluginOrName === 'string' ? pluginOrName : pluginOrName.name;\n    if (!name) {\n      this.log.error('Remove plugin failed: Plugin name not defined');\n      return;\n    }\n\n    let plugins = this._plugins; // optimization for minifier.\n    for (let index = 0; index < plugins.length; index++) {\n      if (plugins[index].name === name) {\n        plugins.splice(index, 1);\n        break;\n      }\n    }\n  }\n\n  /**\n   * Automatically set the application version for events.\n   * @param version\n   */\n  public setVersion(version: string): void {\n    if (!!version) {\n      this.defaultData['@version'] = version;\n    }\n  }\n\n  public setUserIdentity(userInfo: IUserInfo): void;\n  public setUserIdentity(identity: string): void;\n  public setUserIdentity(identity: string, name: string): void;\n  public setUserIdentity(userInfoOrIdentity: IUserInfo | string, name?: string): void {\n    const USER_KEY: string = '@user'; // optimization for minifier.\n    let userInfo: IUserInfo = typeof userInfoOrIdentity !== 'string' ? userInfoOrIdentity : { identity: userInfoOrIdentity, name: name };\n\n    let shouldRemove: boolean = !userInfo || (!userInfo.identity && !userInfo.name);\n    if (shouldRemove) {\n      delete this.defaultData[USER_KEY];\n    } else {\n      this.defaultData[USER_KEY] = userInfo;\n    }\n\n    this.log.info(`user identity: ${shouldRemove ? 'null' : userInfo.identity}`);\n  }\n\n  /**\n   * Used to identify the client that sent the events to the server.\n   * @returns {string}\n   */\n  public get userAgent(): string {\n    return 'exceptionless-js/1.0.0.0';\n  }\n\n  /**\n   * Automatically send a heartbeat to keep the session alive.\n   */\n  public useSessions(sendHeartbeats:boolean = true): void {\n    if (sendHeartbeats) {\n      this.addPlugin(new HeartbeatPlugin());\n    }\n  }\n\n  /**\n   * Automatically set a reference id for error events.\n   */\n  public useReferenceIds(): void {\n    this.addPlugin(new ReferenceIdPlugin());\n  }\n\n  // TODO: Support a min log level.\n  public useDebugLogger(): void {\n    this.log = new ConsoleLog();\n  }\n\n  /**\n   * The default configuration settings that are applied to new configuration instances.\n   * @returns {IConfigurationSettings}\n   */\n  public static get defaults() {\n    if (Configuration._defaultSettings === null) {\n      Configuration._defaultSettings = {};\n    }\n\n    return Configuration._defaultSettings;\n  }\n}\n\n                                                                                                                                                                                                                                                                                                               \n\nexport class EventBuilder {\n  public target: IEvent;\n  public client: ExceptionlessClient;\n  public pluginContextData: ContextData;\n\n  private _validIdentifierErrorMessage: string = 'must contain between 8 and 100 alphanumeric or \\'-\\' characters.'; // optimization for minifier.\n\n  constructor(event: IEvent, client: ExceptionlessClient, pluginContextData?: ContextData) {\n    this.target = event;\n    this.client = client;\n    this.pluginContextData = pluginContextData || new ContextData();\n  }\n\n  public setType(type: string): EventBuilder {\n    if (!!type) {\n      this.target.type = type;\n    }\n\n    return this;\n  }\n\n  public setSource(source: string): EventBuilder {\n    if (!!source) {\n      this.target.source = source;\n    }\n\n    return this;\n  }\n\n  public setReferenceId(referenceId: string): EventBuilder {\n    if (!this.isValidIdentifier(referenceId)) {\n      throw new Error(`ReferenceId ${this._validIdentifierErrorMessage}`);\n    }\n\n    this.target.reference_id = referenceId;\n    return this;\n  }\n\n  public setMessage(message: string): EventBuilder {\n    if (!!message) {\n      this.target.message = message;\n    }\n\n    return this;\n  }\n\n  public setGeo(latitude: number, longitude: number): EventBuilder {\n    if (latitude < -90.0 || latitude > 90.0) {\n      throw new Error('Must be a valid latitude value between -90.0 and 90.0.');\n    }\n\n    if (longitude < -180.0 || longitude > 180.0) {\n      throw new Error('Must be a valid longitude value between -180.0 and 180.0.');\n    }\n\n    this.target.geo = `${latitude},${longitude}`;\n    return this;\n  }\n\n  public setUserIdentity(userInfo: IUserInfo): EventBuilder;\n  public setUserIdentity(identity: string): EventBuilder;\n  public setUserIdentity(identity: string, name: string): EventBuilder;\n  public setUserIdentity(userInfoOrIdentity: IUserInfo | string, name?: string): EventBuilder {\n    let userInfo = typeof userInfoOrIdentity !== 'string' ? userInfoOrIdentity : { identity: userInfoOrIdentity, name: name };\n    if (!userInfo || (!userInfo.identity && !userInfo.name)) {\n      return this;\n    }\n\n    this.setProperty('@user', userInfo);\n    return this;\n  }\n\n  public setValue(value: number): EventBuilder {\n    if (!!value) {\n      this.target.value = value;\n    }\n\n    return this;\n  }\n\n  public addTags(...tags: string[]): EventBuilder {\n    this.target.tags = Utils.addRange<string>(this.target.tags, ...tags);\n    return this;\n  }\n\n  /**\n   * Adds the object to extended data. Uses @excludedPropertyNames\n   * to exclude data from being included in the event.\n   * @param name The data object to add.\n   * @param value The name of the object to add.\n   * @param maxDepth The max depth of the object to include.\n   * @param excludedPropertyNames Any property names that should be excluded.\n   */\n  public setProperty(name: string, value: any, maxDepth?: number, excludedPropertyNames?: string[]): EventBuilder {\n    if (!name || (value === undefined || value == null)) {\n      return this;\n    }\n\n    if (!this.target.data) {\n      this.target.data = {};\n    }\n\n    let result = JSON.parse(Utils.stringify(value, this.client.config.dataExclusions.concat(excludedPropertyNames || []), maxDepth));\n    if (!Utils.isEmpty(result)) {\n      this.target.data[name] = result;\n    }\n\n    return this;\n  }\n\n  public markAsCritical(critical: boolean): EventBuilder {\n    if (critical) {\n      this.addTags('Critical');\n    }\n\n    return this;\n  }\n\n  public addRequestInfo(request: Object): EventBuilder {\n    if (!!request) {\n      this.pluginContextData['@request'] = request;\n    }\n\n    return this;\n  }\n\n  public submit(callback?: (context: EventPluginContext) => void): void {\n    this.client.submitEvent(this.target, this.pluginContextData, callback);\n  }\n\n  private isValidIdentifier(value: string): boolean {\n    if (!value) {\n      return true;\n    }\n\n    if (value.length < 8 || value.length > 100) {\n      return false;\n    }\n\n    for (let index = 0; index < value.length; index++) {\n      let code = value.charCodeAt(index);\n      let isDigit = (code >= 48) && (code <= 57);\n      let isLetter = ((code >= 65) && (code <= 90)) || ((code >= 97) && (code <= 122));\n      let isMinus = code === 45;\n\n      if (!(isDigit || isLetter) && !isMinus) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n\nexport interface IUserDescription {\n  email_address?: string;\n  description?: string;\n  data?: any;\n}\n\nexport class ContextData {\n  public setException(exception: Error): void {\n    if (exception) {\n      this['@@_Exception'] = exception;\n    }\n  }\n\n  public get hasException(): boolean {\n    return !!this['@@_Exception'];\n  }\n\n  public getException(): Error {\n    return this['@@_Exception'] || null;\n  }\n\n  public markAsUnhandledError(): void {\n    this['@@_IsUnhandledError'] = true;\n  }\n\n  public get isUnhandledError(): boolean {\n    return !!this['@@_IsUnhandledError'];\n  }\n\n  public setSubmissionMethod(method: string): void {\n    if (method) {\n      this['@@_SubmissionMethod'] = method;\n    }\n  }\n\n  public getSubmissionMethod(): string {\n    return this['@@_SubmissionMethod'] || null;\n  }\n}\n\nexport class SubmissionResponse {\n  success: boolean = false;\n  badRequest: boolean = false;\n  serviceUnavailable: boolean = false;\n  paymentRequired: boolean = false;\n  unableToAuthenticate: boolean = false;\n  notFound: boolean = false;\n  requestEntityTooLarge: boolean = false;\n  statusCode: number;\n  message: string;\n\n  constructor(statusCode: number, message?: string) {\n    this.statusCode = statusCode;\n    this.message = message;\n\n    this.success = statusCode >= 200 && statusCode <= 299;\n    this.badRequest = statusCode === 400;\n    this.serviceUnavailable = statusCode === 503;\n    this.paymentRequired = statusCode === 402;\n    this.unableToAuthenticate = statusCode === 401 || statusCode === 403;\n    this.notFound = statusCode === 404;\n    this.requestEntityTooLarge = statusCode === 413;\n  }\n}\n\nn\nexport class ExceptionlessClient {\n  /**\n   * The default ExceptionlessClient instance.\n   * @type {ExceptionlessClient}\n   * @private\n   */\n  private static _instance: ExceptionlessClient = null;\n\n  public config: Configuration;\n\n  constructor();\n  constructor(settings: IConfigurationSettings);\n  constructor(apiKey: string, serverUrl?: string);\n  constructor(settingsOrApiKey?: IConfigurationSettings | string, serverUrl?: string) {\n    if (typeof settingsOrApiKey !== 'object') {\n      this.config = new Configuration(settingsOrApiKey);\n    } else {\n      this.config = new Configuration({ apiKey: <string>settingsOrApiKey, serverUrl: serverUrl });\n    }\n  }\n\n  public createException(exception: Error): EventBuilder {\n    let pluginContextData = new ContextData();\n    pluginContextData.setException(exception);\n    return this.createEvent(pluginContextData).setType('error');\n  }\n\n  public submitException(exception: Error, callback?: (context: EventPluginContext) => void): void {\n    this.createException(exception).submit(callback);\n  }\n\n  public createUnhandledException(exception: Error, submissionMethod?: string): EventBuilder {\n    let builder = this.createException(exception);\n    builder.pluginContextData.markAsUnhandledError();\n    builder.pluginContextData.setSubmissionMethod(submissionMethod);\n\n    return builder;\n  }\n\n  public submitUnhandledException(exception: Error, submissionMethod?: string, callback?: (context: EventPluginContext) => void) {\n    this.createUnhandledException(exception, submissionMethod).submit(callback);\n  }\n\n  public createFeatureUsage(feature: string): EventBuilder {\n    return this.createEvent().setType('usage').setSource(feature);\n  }\n\n  public submitFeatureUsage(feature: string, callback?: (context: EventPluginContext) => void): void {\n    this.createFeatureUsage(feature).submit(callback);\n  }\n\n  public createLog(message: string): EventBuilder;\n  public createLog(source: string, message: string): EventBuilder;\n  public createLog(source: string, message: string, level: string): EventBuilder;\n  public createLog(sourceOrMessage: string, message?: string, level?: string): EventBuilder {\n    let builder = this.createEvent().setType('log');\n\n    if (message && level) {\n      builder = builder.setSource(sourceOrMessage).setMessage(message).setProperty('@level', level);\n    } else if (message) {\n      builder = builder.setSource(sourceOrMessage).setMessage(message);\n    } else {\n      // TODO: Look into using https://www.stevefenton.co.uk/Content/Blog/Date/201304/Blog/Obtaining-A-Class-Name-At-Runtime-In-TypeScript/\n      let caller: any = arguments.callee.caller;\n      builder = builder.setSource(caller && caller.name).setMessage(sourceOrMessage);\n    }\n\n    return builder;\n  }\n\n  public submitLog(message: string): void;\n  public submitLog(source: string, message: string): void;\n  public submitLog(source: string, message: string, level: string, callback?: (context: EventPluginContext) => void): void;\n  public submitLog(sourceOrMessage: string, message?: string, level?: string, callback?: (context: EventPluginContext) => void): void {\n    this.createLog(sourceOrMessage, message, level).submit(callback);\n  }\n\n  public createNotFound(resource: string): EventBuilder {\n    return this.createEvent().setType('404').setSource(resource);\n  }\n\n  public submitNotFound(resource: string, callback?: (context: EventPluginContext) => void): void {\n    this.createNotFound(resource).submit(callback);\n  }\n\n  public createSessionStart(userIdentity?:string, userDisplayName?:string): EventBuilder {\n    return this.createEvent().setType('session').setUserIdentity(userIdentity, userDisplayName);\n  }\n\n  public submitSessionStart(userIdentity?:string, userDisplayName?:string, callback?: (context: EventPluginContext) => void): void {\n    this.createSessionStart(userIdentity, userDisplayName).submit(callback);\n  }\n\n  public createSessionEnd(userIdentity?:string, userDisplayName?:string): EventBuilder {\n    return this.createEvent().setType('sessionend').setUserIdentity(userIdentity, userDisplayName);\n  }\n\n  public submitSessionEnd(userIdentity?:string, userDisplayName?:string, callback?: (context: EventPluginContext) => void): void {\n    this.createSessionEnd(userIdentity, userDisplayName).submit(callback);\n  }\n\n  public createSessionHeartbeat(userIdentity?:string, userDisplayName?:string): EventBuilder {\n    return this.createEvent().setType('heartbeat').setUserIdentity(userIdentity, userDisplayName);\n  }\n\n  public submitSessionHeartbeat(userIdentity?:string, userDisplayName?:string, callback?: (context: EventPluginContext) => void): void {\n    this.createSessionHeartbeat(userIdentity, userDisplayName).submit(callback);\n  }\n\n  public createEvent(pluginContextData?: ContextData): EventBuilder {\n    return new EventBuilder({ date: new Date() }, this, pluginContextData);\n  }\n\n  /**\n   * Submits the event to be sent to the server.\n   * @param event The event data.\n   * @param pluginContextData Any contextual data objects to be used by Exceptionless plugins to gather default information for inclusion in the report information.\n   * @param callback\n   */\n  public submitEvent(event: IEvent, pluginContextData?: ContextData, callback?: (context: EventPluginContext) => void): void {\n    function cancelled(context: EventPluginContext) {\n      if (!!context) {\n        context.cancelled = true;\n      }\n\n      return !!callback && callback(context);\n    }\n\n    let context = new EventPluginContext(this, event, pluginContextData);\n    if (!event) {\n      return cancelled(context);\n    }\n\n    if (!this.config.enabled) {\n      this.config.log.info('Event submission is currently disabled.');\n      return cancelled(context);\n    }\n\n    if (!event.data) {\n      event.data = {};\n    }\n\n    if (!event.tags || !event.tags.length) {\n      event.tags = [];\n    }\n\n    EventPluginManager.run(context, function(ctx: EventPluginContext) {\n      let ev = ctx.event;\n      if (!ctx.cancelled) {\n        // ensure all required data\n        if (!ev.type || ev.type.length === 0) {\n          ev.type = 'log';\n        }\n\n        if (!ev.date) {\n          ev.date = new Date();\n        }\n\n        let config = ctx.client.config;\n        config.queue.enqueue(ev);\n\n        if (ev.reference_id && ev.reference_id.length > 0) {\n          ctx.log.info(`Setting last reference id '${ev.reference_id}'`);\n          config.lastReferenceIdManager.setLast(ev.reference_id);\n        }\n      }\n\n      !!callback && callback(ctx);\n    });\n  }\n\n  /**\n   * Updates the user's email address and description of an event for the specified reference id.\n   * @param referenceId The reference id of the event to update.\n   * @param email The user's email address to set on the event.\n   * @param description The user's description of the event.\n   * @param callback The submission response.\n   */\n  public updateUserEmailAndDescription(referenceId: string, email: string, description: string, callback?: (response: SubmissionResponse) => void) {\n    if (!referenceId || !email || !description || !this.config.enabled) {\n      return !!callback && callback(new SubmissionResponse(500, 'cancelled'));\n    }\n\n    let userDescription: IUserDescription = { email_address: email, description: description };\n    this.config.submissionClient.postUserDescription(referenceId, userDescription, this.config, (response: SubmissionResponse) => {\n      if (!response.success) {\n        this.config.log.error(`Failed to submit user email and description for event '${referenceId}': ${response.statusCode} ${response.message}`);\n      }\n\n      !!callback && callback(response);\n    });\n  }\n\n  /**\n   * Gets the last event client id that was submitted to the server.\n   * @returns {string} The event client id.\n   */\n  public getLastReferenceId(): string {\n    return this.config.lastReferenceIdManager.getLast();\n  }\n\n  /**\n   * The default ExceptionlessClient instance.\n   * @type {ExceptionlessClient}\n   */\n  public static get default() {\n    if (ExceptionlessClient._instance === null) {\n      ExceptionlessClient._instance = new ExceptionlessClient(null);\n    }\n\n    return ExceptionlessClient._instance;\n  }\n}\n\nexport interface IModule {\n  data?: any;\n\n  module_id?: number;\n  name?: string;\n  version?: string;\n  is_entry?: boolean;\n  created_date?: Date;\n  modified_date?: Date;\n}\n\nexport interface IRequestInfo {\n  user_agent?: string;\n  http_method?: string;\n  is_secure?: boolean;\n  host?: string;\n  port?: number;\n  path?: string;\n  referrer?: string;\n  client_ip_address?: string;\n  cookies?: any;\n  post_data?: any;\n  query_string?: any;\n  data?: any;\n}\n\nexport interface IEnvironmentInfo {\n  processor_count?: number;\n  total_physical_memory?: number;\n  available_physical_memory?: number;\n  command_line?: string;\n  process_name?: string;\n  process_id?: string;\n  process_memory_size?: number;\n  thread_id?: string;\n  architecture?: string;\n  o_s_name?: string;\n  o_s_version?: string;\n  ip_address?: string;\n  machine_name?: string;\n  install_id?: string;\n  runtime_version?: string;\n  data?: any;\n}\n\nexport interface IParameter {\n  data?: any;\n  generic_arguments?: string[];\n\n  name?: string;\n  type?: string;\n  type_namespace?: string;\n}\n\n                                          \n\nexport interface IMethod {\n  data?: any;\n  generic_arguments?: string[];\n  parameters?: IParameter[];\n\n  is_signature_target?: boolean;\n  declaring_namespace?: string;\n  declaring_type?: string;\n  name?: string;\n  module_id?: number;\n}\n\n                                    \n\nexport interface IStackFrame extends IMethod {\n  file_name?: string;\n  line_number?: number;\n  column?: number;\n}\n\n                                                                                 \n\nexport interface IInnerError {\n  message?: string;\n  type?: string;\n  code?: string;\n  data?: any;\n  inner?: IInnerError;\n  stack_trace?: IStackFrame[];\n  target_method?: IMethod;\n}\n\n                                                                                                                                                \n\nexport class ConfigurationDefaultsPlugin implements IEventPlugin {\n  public priority: number = 10;\n  public name: string = 'ConfigurationDefaultsPlugin';\n\n  public run(context: EventPluginContext, next?: () => void): void {\n    let config = context.client.config;\n    let defaultTags: string[] = config.defaultTags || [];\n    for (let index = 0; index < defaultTags.length; index++) {\n      let tag = defaultTags[index];\n      if (!!tag && context.event.tags.indexOf(tag) < 0) {\n        context.event.tags.push(tag);\n      }\n    }\n\n    let defaultData: Object = config.defaultData || {};\n    for (let key in defaultData) {\n      if (!!defaultData[key]) {\n        let result = JSON.parse(Utils.stringify(defaultData[key], config.dataExclusions));\n        if (!Utils.isEmpty(result)) {\n          context.event.data[key] = result;\n        }\n      }\n    }\n\n    next && next();\n  }\n}\n\n                                                                                                                                                \n\nexport class ErrorPlugin implements IEventPlugin {\n  public priority: number = 30;\n  public name: string = 'ErrorPlugin';\n\n  public run(context: EventPluginContext, next?: () => void): void {\n    const ERROR_KEY: string = '@error'; // optimization for minifier.\n    let ignoredProperties: string[] = [\n      'arguments',\n      'column',\n      'columnNumber',\n      'description',\n      'fileName',\n      'message',\n      'name',\n      'number',\n      'line',\n      'lineNumber',\n      'opera#sourceloc',\n      'sourceId',\n      'sourceURL',\n      'stack',\n      'stackArray',\n      'stacktrace'\n    ];\n\n    let exception = context.contextData.getException();\n    if (!!exception) {\n      context.event.type = 'error';\n\n      if (!context.event.data[ERROR_KEY]) {\n        let config = context.client.config;\n        let parser = config.errorParser;\n        if (!parser) {\n          throw new Error('No error parser was defined.');\n        }\n\n        let result = parser.parse(context, exception);\n        if (!!result) {\n          let additionalData = JSON.parse(Utils.stringify(exception, config.dataExclusions.concat(ignoredProperties)));\n          if (!Utils.isEmpty(additionalData)) {\n            if (!result.data) {\n              result.data = {};\n            }\n            result.data['@ext'] = additionalData;\n          }\n\n          context.event.data[ERROR_KEY] = result;\n        }\n      }\n    }\n\n    next && next();\n  }\n}\n\n                                                                                                                                                           \n\nexport class ModuleInfoPlugin implements IEventPlugin {\n  public priority: number = 50;\n  public name: string = 'ModuleInfoPlugin';\n\n  public run(context: EventPluginContext, next?: () => void): void {\n    const ERROR_KEY: string = '@error'; // optimization for minifier.\n\n    let collector = context.client.config.moduleCollector;\n    if (context.event.data[ERROR_KEY] && !context.event.data['@error'].modules && !!collector) {\n      let modules: IModule[] = collector.getModules(context);\n      if (modules && modules.length > 0) {\n        context.event.data[ERROR_KEY].modules = modules;\n      }\n    }\n\n    next && next();\n  }\n}\n\n                                                                                                                                                                     \n\nexport class RequestInfoPlugin implements IEventPlugin {\n  public priority: number = 70;\n  public name: string = 'RequestInfoPlugin';\n\n  public run(context: EventPluginContext, next?: () => void): void {\n    const REQUEST_KEY: string = '@request'; // optimization for minifier.\n\n    let collector = context.client.config.requestInfoCollector;\n    if (!context.event.data[REQUEST_KEY] && !!collector) {\n      let requestInfo: IRequestInfo = collector.getRequestInfo(context);\n      if (!!requestInfo) {\n        context.event.data[REQUEST_KEY] = requestInfo;\n      }\n    }\n\n    next && next();\n  }\n}\n\n                                                                                                                                                                             \n\nexport class EnvironmentInfoPlugin implements IEventPlugin {\n  public priority: number = 80;\n  public name: string = 'EnvironmentInfoPlugin';\n\n  public run(context: EventPluginContext, next?: () => void): void {\n    const ENVIRONMENT_KEY: string = '@environment'; // optimization for minifier.\n\n    let collector = context.client.config.environmentInfoCollector;\n    if (!context.event.data[ENVIRONMENT_KEY] && collector) {\n      let environmentInfo: IEnvironmentInfo = collector.getEnvironmentInfo(context);\n      if (!!environmentInfo) {\n        context.event.data[ENVIRONMENT_KEY] = environmentInfo;\n      }\n    }\n\n    next && next();\n  }\n}\n\n                                                                                                           \n\nexport class SubmissionMethodPlugin implements IEventPlugin {\n  public priority: number = 100;\n  public name: string = 'SubmissionMethodPlugin';\n\n  public run(context: EventPluginContext, next?: () => void): void {\n    let submissionMethod: string = context.contextData.getSubmissionMethod();\n    if (!!submissionMethod) {\n      context.event.data['@submission_method'] = submissionMethod;\n    }\n\n    next && next();\n  }\n}\n\n                                                                                                                                                                                                                                                   \n\nconst ERROR_KEY: string = '@error';\nconst WINDOW_MILLISECONDS = 2000;\nconst MAX_QUEUE_LENGTH = 10;\n\nexport class DuplicateCheckerPlugin implements IEventPlugin {\n  public priority: number = 40;\n  public name: string = 'DuplicateCheckerPlugin';\n\n  private recentlyProcessedErrors: TimestampedHash[] = [];\n\n  public run(context: EventPluginContext, next?: () => void): void {\n    if (context.event.type === 'error') {\n      let error = context.event.data[ERROR_KEY];\n      let isDuplicate = this.checkDuplicate(error, context.log);\n      if (isDuplicate) {\n        context.cancelled = true;\n        return;\n      }\n    }\n\n    next && next();\n  }\n\n  private getNow() {\n    return Date.now();\n  }\n\n  private checkDuplicate(error: IInnerError, log: ILog): boolean {\n    function getHashCodeForError(err: IInnerError): number {\n      if (!err.stack_trace) {\n        return null;\n      }\n\n      return Utils.getHashCode(JSON.stringify(err.stack_trace));\n    }\n\n    let now = this.getNow();\n    let repeatWindow = now - WINDOW_MILLISECONDS;\n    let hashCode: number;\n    while (error) {\n      hashCode = getHashCodeForError(error);\n\n      // make sure that we don't process the same error multiple times within the repeat window\n      if (hashCode && this.recentlyProcessedErrors.some(h =>\n        h.hash === hashCode && h.timestamp >= repeatWindow)) {\n        log.info(`Ignoring duplicate error event: hash=${hashCode}`);\n        return true;\n      }\n\n      // add this exception to our list of recent errors that we have processed\n      this.recentlyProcessedErrors.push({ hash: hashCode, timestamp: now });\n\n      // only keep the last 10 recent errors\n      while (this.recentlyProcessedErrors.length > MAX_QUEUE_LENGTH) {\n        this.recentlyProcessedErrors.shift();\n      }\n\n      error = error.inner;\n    }\n\n    return false;\n  }\n}\n\ninterface TimestampedHash {\n  hash: number;\n  timestamp: number;\n}\n\n                                                                                 \n\nexport interface IError extends IInnerError {\n  modules?: IModule[];\n}\n\nexport interface IStorageItem<T> {\n  created: number;\n  path: string;\n  value: T;\n}\n\nexport interface SubmissionCallback {\n  (status: number, message: string, data?: string, headers?: Object): void;\n}\n\nexport interface SubmissionRequest {\n  serverUrl: string;\n  apiKey: string;\n  userAgent: string;\n  method: string;\n  path: string;\n  data: string;\n}\n\nexport class SettingsResponse {\n  success: boolean = false;\n  settings: any;\n  settingsVersion: number = -1;\n  message: string;\n  exception: any;\n\n  constructor(success: boolean, settings: any, settingsVersion: number = -1, exception: any = null, message: string = null) {\n    this.success = success;\n    this.settings = settings;\n    this.settingsVersion = settingsVersion;\n    this.exception = exception;\n    this.message = message;\n  }\n}\n\nexport interface IClientConfiguration {\n  settings: Object;\n  version: number;\n}\n\nimport os = require('os');\nimport nodestacktrace = require('stack-trace');\nimport path = require('path');\nimport https = require('https');\nimport url = require('url');\n                                                                                                                                                                                                                                       \n\nexport class NodeEnvironmentInfoCollector implements IEnvironmentInfoCollector {\n  public getEnvironmentInfo(context: EventPluginContext): IEnvironmentInfo {\n    function getIpAddresses(): string {\n      let ips: string[] = [];\n      let interfaces = os.networkInterfaces();\n      Object.keys(interfaces).forEach((name) => {\n        interfaces[name].forEach((iface: any) => {\n          if ('IPv4' === iface.family && !iface.internal) {\n            ips.push(iface.address);\n          }\n        });\n      });\n\n      return ips.join(', ');\n    }\n\n    if (!os) {\n      return null;\n    }\n\n    let environmentInfo: IEnvironmentInfo = {\n      processor_count: os.cpus().length,\n      total_physical_memory: os.totalmem(),\n      available_physical_memory: os.freemem(),\n      command_line: process.argv.join(' '),\n      process_name: (process.title || '').replace(/[\\uE000-\\uF8FF]/g, ''),\n      process_id: process.pid + '',\n      process_memory_size: process.memoryUsage().heapTotal,\n      // thread_id: '',\n      architecture: os.arch(),\n      o_s_name: os.type(),\n      o_s_version: os.release(),\n      ip_address: getIpAddresses(),\n      machine_name: os.hostname(),\n      // install_id: '',\n      runtime_version: process.version,\n      data: {\n        loadavg: os.loadavg(),\n        platform: os.platform(),\n        tmpdir: os.tmpdir(),\n        uptime: os.uptime()\n      }\n    };\n\n    if ((<any>os).endianness) {\n      environmentInfo.data.endianness = (<any>os).endianness();\n    }\n\n    return environmentInfo;\n  }\n}\n\n                                                                                                                                                                                                                                                                   \n\nexport class NodeErrorParser implements IErrorParser {\n  public parse(context: EventPluginContext, exception: Error): IError {\n    function getStackFrames(stackFrames: any[]): IStackFrame[] {\n      let frames: IStackFrame[] = [];\n\n      for (let index = 0; index < stackFrames.length; index++) {\n        let frame = stackFrames[index];\n        frames.push({\n          name: frame.getMethodName() || frame.getFunctionName(),\n          // parameters: frame.args,\n          file_name: frame.getFileName(),\n          line_number: frame.getLineNumber() || 0,\n          column: frame.getColumnNumber() || 0,\n          declaring_type: frame.getTypeName(),\n          data: {\n            is_native: frame.isNative() || (!!frame.filename && frame.filename[0] !== '/' && frame.filename[0] !== '.')\n          }\n        });\n      }\n\n      return frames;\n    }\n\n    if (!nodestacktrace) {\n      throw new Error('Unable to load the stack trace library.');\n    }\n\n    let stackFrames = nodestacktrace.parse(exception) || [];\n    return {\n      type: exception.name,\n      message: exception.message,\n      stack_trace: getStackFrames(stackFrames)\n    };\n  }\n}\n\n                                                                                                                                                                                                                                                \n\nexport class NodeModuleCollector implements IModuleCollector {\n\n  private initialized: boolean = false;\n  private installedModules: { [id: string]: IModule } = {};\n\n  public getModules(context: EventPluginContext): IModule[] {\n    this.initialize();\n\n    if (!require.main) {\n      return [];\n    }\n\n    let modulePath = path.dirname(require.main.filename) + '/node_modules/';\n    let pathLength = modulePath.length;\n\n    let loadedKeys = Object.keys(require.cache);\n    let loadedModules = {};\n\n    loadedKeys.forEach(key => {\n      let id = key.substr(pathLength);\n      id = id.substr(0, id.indexOf('/'));\n      loadedModules[id] = true;\n    });\n\n    return Object.keys(loadedModules)\n      .map(key => this.installedModules[key])\n      .filter(m => m !== undefined);\n  }\n\n  private initialize() {\n    if (this.initialized) {\n      return;\n    }\n\n    this.initialized = true;\n\n    let output = child.spawnSync('npm', ['ls', '--depth=0', '--json']).stdout;\n\n    if (!output) {\n      return;\n    }\n\n    let json;\n    try {\n      json = JSON.parse(output.toString());\n    } catch (e) {\n      return;\n    }\n\n    let items = json.dependencies;\n    if (!items) {\n      return;\n    }\n\n    let id = 0;\n    this.installedModules = {};\n\n    Object.keys(items).forEach(key => {\n      let item = items[key];\n      let theModule = <IModule>{\n        module_id: id++,\n        name: key,\n        version: item.version\n      };\n\n      this.installedModules[key] = theModule;\n    });\n  }\n}\n\n                                                                                                                                                                                                                             \n\nexport class NodeRequestInfoCollector implements IRequestInfoCollector {\n  getRequestInfo(context: EventPluginContext): IRequestInfo {\n    const REQUEST_KEY: string = '@request'; // optimization for minifier.\n    if (!context.contextData[REQUEST_KEY]) {\n      return null;\n    }\n\n    let exclusions = context.client.config.dataExclusions;\n\n    // TODO: include referrer\n    let request = context.contextData[REQUEST_KEY];\n    let requestInfo: IRequestInfo = {\n      client_ip_address: request.ip,\n      user_agent: request.headers['user-agent'],\n      is_secure: request.secure,\n      http_method: request.method,\n      host: request.hostname || request.host,\n      path: request.path,\n      post_data: JSON.parse(Utils.stringify(request.body, exclusions)),\n      cookies: Utils.getCookies((request || {}).headers.cookie, exclusions),\n      query_string: JSON.parse(Utils.stringify(request.params, exclusions))\n    };\n\n    let host = request.headers.host;\n    let port: number = host && parseInt(host.slice(host.indexOf(':') + 1), 10);\n    if (port > 0) {\n      requestInfo.port = port;\n    }\n\n    return requestInfo;\n  }\n}\n\n                                                                                                                                                                                                                                                                                                                     \n\nexport class NodeSubmissionAdapter implements ISubmissionAdapter {\n  public sendRequest(request: SubmissionRequest, callback: SubmissionCallback, isAppExiting?: boolean) {\n    if (isAppExiting) {\n      this.sendRequestSync(request, callback);\n      return;\n    }\n\n    let parsedHost = url.parse(request.serverUrl);\n\n    let options: https.RequestOptions = {\n      auth: `client:${request.apiKey}`,\n      headers: {},\n      hostname: parsedHost.hostname,\n      method: request.method,\n      port: parsedHost.port && parseInt(parsedHost.port, 10),\n      path: request.path\n    };\n\n    options.headers['User-Agent'] = request.userAgent;\n\n    if (request.method === 'POST') {\n      options.headers = {\n        'Content-Type': 'application/json',\n        'Content-Length': request.data.length\n      };\n    }\n\n    let protocol = (parsedHost.protocol === 'https' ? https : http);\n    let clientRequest: http.ClientRequest = protocol.request(options, (response: http.IncomingMessage) => {\n      let body = '';\n      response.setEncoding('utf8');\n      response.on('data', (chunk) => body += chunk);\n      response.on('end', () => this.complete(response, body, response.headers, callback));\n    });\n\n    clientRequest.on('error', (error: Error) => callback(500, error.message));\n    clientRequest.end(request.data);\n  }\n\n  private complete(response: http.IncomingMessage, responseBody: string, responseHeaders: Object, callback: SubmissionCallback): void {\n    let message: string;\n    if (response.statusCode === 0) {\n      message = 'Unable to connect to server.';\n    } else if (response.statusCode < 200 || response.statusCode > 299) {\n      message = response.statusMessage || (<any>response).message;\n    }\n\n    callback(response.statusCode || 500, message, responseBody, responseHeaders);\n  }\n\n  private sendRequestSync(request: SubmissionRequest, callback: SubmissionCallback): void {\n    let requestJson = JSON.stringify(request);\n    let res = child.spawnSync(process.execPath, [require.resolve('./submitSync.js')],\n      {\n        input: requestJson,\n        stdio: ['pipe', 'pipe', process.stderr]\n      });\n\n    let out = res.stdout.toString();\n    let result = JSON.parse(out);\n\n    callback(result.status, result.message, result.data, result.headers);\n  }\n}\n\nn\nconst EXIT: string = 'exit';\nconst UNCAUGHT_EXCEPTION: string = 'uncaughtException';\nconst SIGINT: string = 'SIGINT';\nconst SIGINT_CODE: number = 2;\n\nlet defaults = Configuration.defaults;\ndefaults.environmentInfoCollector = new NodeEnvironmentInfoCollector();\ndefaults.errorParser = new NodeErrorParser();\ndefaults.moduleCollector = new NodeModuleCollector();\ndefaults.requestInfoCollector = new NodeRequestInfoCollector();\ndefaults.submissionAdapter = new NodeSubmissionAdapter();\n\nfunction getListenerCount(emitter, event: string): number {\n  if (emitter.listenerCount) {\n    return emitter.listenerCount(event);\n  }\n  return require('events').listenerCount(emitter, event);\n}\n\n/*\n * Adding a event handler for 'uncaughtException' modifies the default\n * Node behavior, so it won't exit or log to the console. Instead,\n * we hijack the event emitter and forward the exception to the callback.\n */\nfunction onUncaughtException(callback: (error: Error) => void) {\n  let originalEmit = process.emit;\n\n  process.emit = function(type: string, error: Error) {\n    if (type === UNCAUGHT_EXCEPTION) {\n      callback(error);\n    }\n\n    return originalEmit.apply(this, arguments);\n  };\n}\n\nonUncaughtException(function(error: Error) {\n  ExceptionlessClient.default.submitUnhandledException(error, UNCAUGHT_EXCEPTION);\n});\n\n/*\n * We cannot hijack SIGINT, so if there are no other handlers,\n * we just reproduce default Node.js behavior by exiting.\n */\nprocess.on(SIGINT, function() {\n  if (getListenerCount(process, SIGINT) <= 1) {\n    process.exit(128 + SIGINT_CODE);\n  }\n});\n\nprocess.on(EXIT, function(code: number) {\n  /**\n   * exit codes: https://nodejs.org/api/process.html#process_event_exit\n   * From now on, only synchronous code may run. As soon as this method\n   * ends, the application inevitably will exit.\n   */\n  function getExitCodeReason(exitCode: number): string {\n    if (exitCode === 1) {\n      return 'Uncaught Fatal Exception';\n    }\n\n    if (exitCode === 3) {\n      return 'Internal JavaScript Parse Error';\n    }\n\n    if (exitCode === 4) {\n      return 'Internal JavaScript Evaluation Failure';\n    }\n\n    if (exitCode === 5) {\n      return 'Fatal Exception';\n    }\n\n    if (exitCode === 6) {\n      return 'Non-function Internal Exception Handler ';\n    }\n\n    if (exitCode === 7) {\n      return 'Internal Exception Handler Run-Time Failure';\n    }\n\n    if (exitCode === 8) {\n      return 'Uncaught Exception';\n    }\n\n    if (exitCode === 9) {\n      return 'Invalid Argument';\n    }\n\n    if (exitCode === 10) {\n      return 'Internal JavaScript Run-Time Failure';\n    }\n\n    if (exitCode === 12) {\n      return 'Invalid Debug Argument';\n    }\n\n    return null;\n  }\n\n  let client = ExceptionlessClient.default;\n  let message = getExitCodeReason(code);\n\n  if (message !== null) {\n    client.submitLog(EXIT, message, 'Error');\n  }\n\n  client.config.queue.process(true);\n  // Application will now exit.\n});\n\n(<any>Error).stackTraceLimit = Infinity;\n\n"]}